{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\LeaveManagement\\\\PendingRequests.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const PendingRequests = () => {\n//     const [pendingLeaves, setPendingLeaves] = useState([]);\n\n//     useEffect(() => {\n//         const fetchPendingLeaves = async () => {\n//             try {\n//                 const token = localStorage.getItem(\"token\");\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/leave/pending/\", {\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n//                 setPendingLeaves(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching pending leaves\", error);\n//             }\n//         };\n//         fetchPendingLeaves();\n//     }, []);\n\n//     const handleAction = async (leaveId, action) => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.post(`http://127.0.0.1:8000/api/leave/approval/${leaveId}/`, { action }, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setPendingLeaves(pendingLeaves.filter((leave) => leave.id !== leaveId));\n//         } catch (error) {\n//             console.error(\"Error processing leave request\", error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Pending Leave Requests</h2>\n//             <table border=\"1\">\n//                 <thead>\n//                     <tr>\n//                         <th>Employee</th>\n//                         <th>Start Date</th>\n//                         <th>End Date</th>\n//                         <th>Reason</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {pendingLeaves.map((leave) => (\n//                         <tr key={leave.id}>\n//                             <td>{leave.employee_name}</td>\n//                             <td>{leave.start_date}</td>\n//                             <td>{leave.end_date}</td>\n//                             <td>{leave.reason}</td>\n//                             <td>\n//                                 <button onClick={() => handleAction(leave.id, \"approve\")}>Approve</button>\n//                                 <button onClick={() => handleAction(leave.id, \"reject\")}>Reject</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default PendingRequests;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const PendingRequests = () => {\n//   const [pendingLeaves, setPendingLeaves] = useState([]);\n//   const [error, setError] = useState('');\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchPendingLeaves = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/leave/pending/', {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//             'Content-Type': 'application/json',\n//           },\n//         });\n//         setPendingLeaves(response.data);\n//       } catch (err) {\n//         console.error(err);\n//         setError('Failed to fetch pending leave requests. Please try again later.');\n//       }\n//     };\n\n//     fetchPendingLeaves();\n//   }, [token]);\n\n//   const handleApprove = async (leaveId) => {\n//     try {\n//       await axios.patch(\n//         `http://localhost:8000/api/leave/approve/${leaveId}/`,\n//         {},\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//       setPendingLeaves((prevState) =>\n//         prevState.filter((leave) => leave.id !== leaveId)\n//       );\n//     } catch (err) {\n//       console.error(err);\n//       setError('Error approving leave request.');\n//     }\n//   };\n\n//   const handleReject = async (leaveId) => {\n//     try {\n//       await axios.patch(\n//         `http://localhost:8000/api/leave/reject/${leaveId}/`,\n//         {},\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n//       setPendingLeaves((prevState) =>\n//         prevState.filter((leave) => leave.id !== leaveId)\n//       );\n//     } catch (err) {\n//       console.error(err);\n//       setError('Error rejecting leave request.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-xl font-semibold mb-4\">Pending Leave Requests</h2>\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {pendingLeaves.length === 0 ? (\n//         <p>No pending leave requests.</p>\n//       ) : (\n//         <table className=\"table-auto w-full border-collapse\">\n//           <thead>\n//             <tr>\n//               <th className=\"border-b px-4 py-2\">Employee Name</th>\n//               <th className=\"border-b px-4 py-2\">Leave Type</th>\n//               <th className=\"border-b px-4 py-2\">Start Date</th>\n//               <th className=\"border-b px-4 py-2\">End Date</th>\n//               <th className=\"border-b px-4 py-2\">Status</th>\n//               <th className=\"border-b px-4 py-2\">Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {pendingLeaves.map((leave, index) => (\n//               <tr key={index}>\n//                 <td className=\"border-b px-4 py-2\">{leave.employee_name}</td>\n//                 <td className=\"border-b px-4 py-2\">{leave.leave_type}</td>\n//                 <td className=\"border-b px-4 py-2\">{leave.start_date}</td>\n//                 <td className=\"border-b px-4 py-2\">{leave.end_date}</td>\n//                 <td className=\"border-b px-4 py-2\">{leave.status}</td>\n//                 <td className=\"border-b px-4 py-2\">\n//                   <button\n//                     onClick={() => handleApprove(leave.id)}\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded mr-2\"\n//                   >\n//                     Approve\n//                   </button>\n//                   <button\n//                     onClick={() => handleReject(leave.id)}\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded\"\n//                   >\n//                     Reject\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default PendingRequests;\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PendingRequests = () => {\n  _s();\n  const [pendingLeaves, setPendingLeaves] = useState([]);\n  const [employees, setEmployees] = useState({}); // Store employee emails by ID\n  const [error, setError] = useState('');\n  const token = localStorage.getItem('token');\n\n  // Fetch employee email by employee_id\n  const fetchEmployeeEmail = useCallback(async employeeId => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/employee/${employeeId}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setEmployees(prevState => ({\n        ...prevState,\n        [employeeId]: response.data.email // Store the email with employee_id as the key\n      }));\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch employee email.');\n    }\n  }, [token]);\n  useEffect(() => {\n    const fetchPendingLeaves = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/leave/pending/', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        setPendingLeaves(response.data);\n\n        // Fetch employee emails for each leave request\n        response.data.forEach(leave => {\n          if (!employees[leave.employee_id]) {\n            // Fetch email only if not already fetched\n            fetchEmployeeEmail(leave.employee_id);\n          }\n        });\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch pending leave requests. Please try again later.');\n      }\n    };\n    fetchPendingLeaves();\n  }, [token, employees, fetchEmployeeEmail]); // Add fetchEmployeeEmail to dependencies\n\n  const handleApprove = async leaveId => {\n    try {\n      await axios.patch(`http://localhost:8000/api/leave/approve/${leaveId}/`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPendingLeaves(prevState => prevState.filter(leave => leave.id !== leaveId));\n    } catch (err) {\n      console.error(err);\n      setError('Error approving leave request.');\n    }\n  };\n  const handleReject = async leaveId => {\n    try {\n      await axios.patch(`http://localhost:8000/api/leave/reject/${leaveId}/`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPendingLeaves(prevState => prevState.filter(leave => leave.id !== leaveId));\n    } catch (err) {\n      console.error(err);\n      setError('Error rejecting leave request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Pending Leave Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this), pendingLeaves.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending leave requests.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto w-full border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"Leave Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border-b px-4 py-2\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pendingLeaves.map((leave, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: leave.employee_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: employees[leave.employee_id] || 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: leave.leave_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: leave.start_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: leave.end_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: leave.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border-b px-4 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleApprove(leave.id),\n              className: \"bg-green-500 text-white px-4 py-2 rounded mr-2\",\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReject(leave.id),\n              className: \"bg-red-500 text-white px-4 py-2 rounded\",\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(PendingRequests, \"70yAjF80wEP6DI/RypIJ0Pk4cxc=\");\n_c = PendingRequests;\nexport default PendingRequests;\nvar _c;\n$RefreshReg$(_c, \"PendingRequests\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","PendingRequests","_s","pendingLeaves","setPendingLeaves","employees","setEmployees","error","setError","token","localStorage","getItem","fetchEmployeeEmail","employeeId","response","get","headers","Authorization","prevState","data","email","err","console","fetchPendingLeaves","forEach","leave","employee_id","handleApprove","leaveId","patch","filter","id","handleReject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","leave_type","start_date","end_date","status","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/LeaveManagement/PendingRequests.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const PendingRequests = () => {\r\n//     const [pendingLeaves, setPendingLeaves] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchPendingLeaves = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem(\"token\");\r\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/leave/pending/\", {\r\n//                     headers: { Authorization: `Bearer ${token}` },\r\n//                 });\r\n//                 setPendingLeaves(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching pending leaves\", error);\r\n//             }\r\n//         };\r\n//         fetchPendingLeaves();\r\n//     }, []);\r\n\r\n//     const handleAction = async (leaveId, action) => {\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.post(`http://127.0.0.1:8000/api/leave/approval/${leaveId}/`, { action }, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setPendingLeaves(pendingLeaves.filter((leave) => leave.id !== leaveId));\r\n//         } catch (error) {\r\n//             console.error(\"Error processing leave request\", error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Pending Leave Requests</h2>\r\n//             <table border=\"1\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Employee</th>\r\n//                         <th>Start Date</th>\r\n//                         <th>End Date</th>\r\n//                         <th>Reason</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {pendingLeaves.map((leave) => (\r\n//                         <tr key={leave.id}>\r\n//                             <td>{leave.employee_name}</td>\r\n//                             <td>{leave.start_date}</td>\r\n//                             <td>{leave.end_date}</td>\r\n//                             <td>{leave.reason}</td>\r\n//                             <td>\r\n//                                 <button onClick={() => handleAction(leave.id, \"approve\")}>Approve</button>\r\n//                                 <button onClick={() => handleAction(leave.id, \"reject\")}>Reject</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default PendingRequests;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const PendingRequests = () => {\r\n//   const [pendingLeaves, setPendingLeaves] = useState([]);\r\n//   const [error, setError] = useState('');\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchPendingLeaves = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8000/api/leave/pending/', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//         });\r\n//         setPendingLeaves(response.data);\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//         setError('Failed to fetch pending leave requests. Please try again later.');\r\n//       }\r\n//     };\r\n\r\n//     fetchPendingLeaves();\r\n//   }, [token]);\r\n\r\n//   const handleApprove = async (leaveId) => {\r\n//     try {\r\n//       await axios.patch(\r\n//         `http://localhost:8000/api/leave/approve/${leaveId}/`,\r\n//         {},\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//         }\r\n//       );\r\n//       setPendingLeaves((prevState) =>\r\n//         prevState.filter((leave) => leave.id !== leaveId)\r\n//       );\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError('Error approving leave request.');\r\n//     }\r\n//   };\r\n\r\n//   const handleReject = async (leaveId) => {\r\n//     try {\r\n//       await axios.patch(\r\n//         `http://localhost:8000/api/leave/reject/${leaveId}/`,\r\n//         {},\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//         }\r\n//       );\r\n//       setPendingLeaves((prevState) =>\r\n//         prevState.filter((leave) => leave.id !== leaveId)\r\n//       );\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError('Error rejecting leave request.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-xl font-semibold mb-4\">Pending Leave Requests</h2>\r\n//       {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n//       {pendingLeaves.length === 0 ? (\r\n//         <p>No pending leave requests.</p>\r\n//       ) : (\r\n//         <table className=\"table-auto w-full border-collapse\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th className=\"border-b px-4 py-2\">Employee Name</th>\r\n//               <th className=\"border-b px-4 py-2\">Leave Type</th>\r\n//               <th className=\"border-b px-4 py-2\">Start Date</th>\r\n//               <th className=\"border-b px-4 py-2\">End Date</th>\r\n//               <th className=\"border-b px-4 py-2\">Status</th>\r\n//               <th className=\"border-b px-4 py-2\">Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {pendingLeaves.map((leave, index) => (\r\n//               <tr key={index}>\r\n//                 <td className=\"border-b px-4 py-2\">{leave.employee_name}</td>\r\n//                 <td className=\"border-b px-4 py-2\">{leave.leave_type}</td>\r\n//                 <td className=\"border-b px-4 py-2\">{leave.start_date}</td>\r\n//                 <td className=\"border-b px-4 py-2\">{leave.end_date}</td>\r\n//                 <td className=\"border-b px-4 py-2\">{leave.status}</td>\r\n//                 <td className=\"border-b px-4 py-2\">\r\n//                   <button\r\n//                     onClick={() => handleApprove(leave.id)}\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded mr-2\"\r\n//                   >\r\n//                     Approve\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => handleReject(leave.id)}\r\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n//                   >\r\n//                     Reject\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PendingRequests;\r\n\r\n\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PendingRequests = () => {\r\n  const [pendingLeaves, setPendingLeaves] = useState([]);\r\n  const [employees, setEmployees] = useState({});  // Store employee emails by ID\r\n  const [error, setError] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Fetch employee email by employee_id\r\n  const fetchEmployeeEmail = useCallback(async (employeeId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/api/employee/${employeeId}/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      setEmployees((prevState) => ({\r\n        ...prevState,\r\n        [employeeId]: response.data.email,  // Store the email with employee_id as the key\r\n      }));\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to fetch employee email.');\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    const fetchPendingLeaves = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/leave/pending/', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        setPendingLeaves(response.data);\r\n\r\n        // Fetch employee emails for each leave request\r\n        response.data.forEach((leave) => {\r\n          if (!employees[leave.employee_id]) {  // Fetch email only if not already fetched\r\n            fetchEmployeeEmail(leave.employee_id);\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch pending leave requests. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchPendingLeaves();\r\n  }, [token, employees, fetchEmployeeEmail]);  // Add fetchEmployeeEmail to dependencies\r\n\r\n  const handleApprove = async (leaveId) => {\r\n    try {\r\n      await axios.patch(\r\n        `http://localhost:8000/api/leave/approve/${leaveId}/`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      setPendingLeaves((prevState) =>\r\n        prevState.filter((leave) => leave.id !== leaveId)\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Error approving leave request.');\r\n    }\r\n  };\r\n\r\n  const handleReject = async (leaveId) => {\r\n    try {\r\n      await axios.patch(\r\n        `http://localhost:8000/api/leave/reject/${leaveId}/`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      setPendingLeaves((prevState) =>\r\n        prevState.filter((leave) => leave.id !== leaveId)\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Error rejecting leave request.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Pending Leave Requests</h2>\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n      {pendingLeaves.length === 0 ? (\r\n        <p>No pending leave requests.</p>\r\n      ) : (\r\n        <table className=\"table-auto w-full border-collapse\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border-b px-4 py-2\">Employee ID</th>\r\n              <th className=\"border-b px-4 py-2\">Email</th>\r\n              <th className=\"border-b px-4 py-2\">Leave Type</th>\r\n              <th className=\"border-b px-4 py-2\">Start Date</th>\r\n              <th className=\"border-b px-4 py-2\">End Date</th>\r\n              <th className=\"border-b px-4 py-2\">Status</th>\r\n              <th className=\"border-b px-4 py-2\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pendingLeaves.map((leave, index) => (\r\n              <tr key={index}>\r\n                <td className=\"border-b px-4 py-2\">{leave.employee_id}</td>\r\n                <td className=\"border-b px-4 py-2\">{employees[leave.employee_id] || 'Loading...'}</td>\r\n                <td className=\"border-b px-4 py-2\">{leave.leave_type}</td>\r\n                <td className=\"border-b px-4 py-2\">{leave.start_date}</td>\r\n                <td className=\"border-b px-4 py-2\">{leave.end_date}</td>\r\n                <td className=\"border-b px-4 py-2\">{leave.status}</td>\r\n                <td className=\"border-b px-4 py-2\">\r\n                  <button\r\n                    onClick={() => handleApprove(leave.id)}\r\n                    className=\"bg-green-500 text-white px-4 py-2 rounded mr-2\"\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleReject(leave.id)}\r\n                    className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n                  >\r\n                    Reject\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PendingRequests;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;EACjD,MAAM,CAACW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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}