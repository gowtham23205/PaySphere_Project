{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Salary\\\\SalaryDetailOfEmp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n// optional for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalaryDetailOfEmp = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // employee ID from route\n  const [salaryHistory, setSalaryHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSalaryHistory = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get(`http://localhost:8000/api/salary/get_employee_payroll_history/${id}/`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setSalaryHistory(response.data);\n      } catch (error) {\n        console.error('Failed to fetch salary history', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSalaryHistory();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salary-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Salary History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : salaryHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No salary records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"salary-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Basic Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Allowances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deductions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gross Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Net Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: salaryHistory.map((salary, index) => {\n          const date = new Date(salary.created_at);\n          const month = date.toLocaleString('default', {\n            month: 'short',\n            year: 'numeric'\n          });\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", salary.basic_salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", salary.total_allowances]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", salary.total_deductions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", salary.gross_salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B9\", salary.net_salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: salary.net_salary ? 'green' : 'red'\n              },\n              children: salary.net_salary ? 'Generated' : 'Pending'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SalaryDetailOfEmp, \"lHMJtTECL1VQfRtLc71i8OcU/uw=\", false, function () {\n  return [useParams];\n});\n_c = SalaryDetailOfEmp;\nexport default SalaryDetailOfEmp;\nvar _c;\n$RefreshReg$(_c, \"SalaryDetailOfEmp\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","SalaryDetailOfEmp","_s","id","salaryHistory","setSalaryHistory","loading","setLoading","fetchSalaryHistory","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","salary","index","date","Date","created_at","month","toLocaleString","year","basic_salary","total_allowances","total_deductions","gross_salary","net_salary","style","color","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Salary/SalaryDetailOfEmp.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n// optional for styling\r\n\r\nconst SalaryDetailOfEmp = () => {\r\n  const { id } = useParams(); // employee ID from route\r\n  const [salaryHistory, setSalaryHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSalaryHistory = async () => {\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:8000/api/salary/get_employee_payroll_history/${id}/`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setSalaryHistory(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch salary history', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSalaryHistory();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"salary-history-container\">\r\n      <h2>Salary History</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : salaryHistory.length === 0 ? (\r\n        <p>No salary records found.</p>\r\n      ) : (\r\n        <table className=\"salary-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Month</th>\r\n              <th>Basic Salary</th>\r\n              <th>Allowances</th>\r\n              <th>Deductions</th>\r\n              <th>Gross Salary</th>\r\n              <th>Net Salary</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {salaryHistory.map((salary, index) => {\r\n              const date = new Date(salary.created_at);\r\n              const month = date.toLocaleString('default', { month: 'short', year: 'numeric' });\r\n\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{month}</td>\r\n                  <td>₹{salary.basic_salary}</td>\r\n                  <td>₹{salary.total_allowances}</td>\r\n                  <td>₹{salary.total_deductions}</td>\r\n                  <td>₹{salary.gross_salary}</td>\r\n                  <td>₹{salary.net_salary}</td>\r\n                  <td style={{ color: salary.net_salary ? 'green' : 'red' }}>\r\n                    {salary.net_salary ? 'Generated' : 'Pending'}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalaryDetailOfEmp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}