{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\LeaveManagement\\\\AllLeaveRequests.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const AllLeaveRequests = () => {\n//     const [leaves, setLeaves] = useState([]);\n\n//     useEffect(() => {\n//         const fetchLeaves = async () => {\n//             try {\n//                 const token = localStorage.getItem(\"token\");\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/leave/all/\", {\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n//                 setLeaves(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching leave requests\", error);\n//             }\n//         };\n//         fetchLeaves();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h2>All Leave Requests</h2>\n//             <table border=\"1\">\n//                 <thead>\n//                     <tr>\n//                         <th>Employee</th>\n//                         <th>Start Date</th>\n//                         <th>End Date</th>\n//                         <th>Reason</th>\n//                         <th>Status</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {leaves.map((leave) => (\n//                         <tr key={leave.id}>\n//                             <td>{leave.employee_name}</td>\n//                             <td>{leave.start_date}</td>\n//                             <td>{leave.end_date}</td>\n//                             <td>{leave.reason}</td>\n//                             <td>{leave.status}</td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default AllLeaveRequests;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const AllLeaveRequests = () => {\n//   const [leaveRequests, setLeaveRequests] = useState([]);\n//   const [error, setError] = useState('');\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchLeaveRequests = async () => {\n//       try {\n//         const res = await axios.get('http://localhost:8000/api/leave/all/', {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         setLeaveRequests(res.data);\n//       } catch (err) {\n//         console.error(err);\n//         setError('Failed to fetch leave requests.');\n//       }\n//     };\n\n//     fetchLeaveRequests();\n//   }, [token]);\n\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-xl font-bold mb-4\">All Leave Requests</h2>\n//       {error && <p className=\"text-red-500\">{error}</p>}\n//       {leaveRequests.length === 0 ? (\n//         <p>No leave requests found.</p>\n//       ) : (\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"min-w-full bg-white shadow rounded\">\n//             <thead>\n//               <tr className=\"bg-gray-200\">\n//                 <th className=\"py-2 px-4 border\">Employee</th>\n//                 <th className=\"py-2 px-4 border\">From</th>\n//                 <th className=\"py-2 px-4 border\">To</th>\n//                 <th className=\"py-2 px-4 border\">Reason</th>\n//                 <th className=\"py-2 px-4 border\">Status</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {leaveRequests.map((leave) => (\n//                 <tr key={leave.id} className=\"text-center\">\n//                   <td className=\"py-2 px-4 border\">{leave.employee_name}</td>\n//                   <td className=\"py-2 px-4 border\">{leave.start_date}</td>\n//                   <td className=\"py-2 px-4 border\">{leave.end_date}</td>\n//                   <td className=\"py-2 px-4 border\">{leave.reason}</td>\n//                   <td className={`py-2 px-4 border font-medium ${\n//                     leave.status === 'approved' ? 'text-green-600' :\n//                     leave.status === 'rejected' ? 'text-red-600' :\n//                     'text-yellow-600'\n//                   }`}>\n//                     {leave.status}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AllLeaveRequests;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const AllLeaveRequests = () => {\n//   const [leaveRequests, setLeaveRequests] = useState([]);\n//   const [employees, setEmployees] = useState([]);\n//   const [error, setError] = useState('');\n//   const token = localStorage.getItem('token');\n\n//   // Fetch all leave requests\n//   useEffect(() => {\n//     const fetchLeaveRequests = async () => {\n//       try {\n//         const res = await axios.get('http://localhost:8000/api/leave/all/', {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         setLeaveRequests(res.data);\n//       } catch (err) {\n//         console.error(err);\n//         setError('Failed to fetch leave requests.');\n//       }\n//     };\n\n//     fetchLeaveRequests();\n//   }, [token]);\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/users/', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployees(response.data); // Assuming response contains a list of employees\n//       } catch (err) {\n//         console.error(err);\n//         setError('Failed to fetch employee data.');\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, [token]);\n\n//   // Function to get employee full name based on employee_id\n//   const getEmployeeFullName = (employeeId) => {\n//     const employee = employees.find((emp) => emp.id === employeeId);\n//     return employee ? `${employee.first_name} ${employee.last_name}` : 'Unknown';\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-xl font-bold mb-4\">All Leave Requests</h2>\n//       {error && <p className=\"text-red-500\">{error}</p>}\n//       {leaveRequests.length === 0 ? (\n//         <p>No leave requests found.</p>\n//       ) : (\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"min-w-full bg-white shadow rounded\">\n//             <thead>\n//               <tr className=\"bg-gray-200\">\n//                 <th className=\"py-2 px-4 border\">Employee</th>\n//                 <th className=\"py-2 px-4 border\">From</th>\n//                 <th className=\"py-2 px-4 border\">To</th>\n//                 <th className=\"py-2 px-4 border\">Reason</th>\n//                 <th className=\"py-2 px-4 border\">Status</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {leaveRequests.map((leave) => (\n//                 <tr key={leave.id} className=\"text-center\">\n//                   <td className=\"py-2 px-4 border\">\n//                     {/* Display full employee name using getEmployeeFullName */}\n//                     {getEmployeeFullName(leave.employee_id)}\n//                   </td>\n//                   <td className=\"py-2 px-4 border\">{leave.start_date}</td>\n//                   <td className=\"py-2 px-4 border\">{leave.end_date}</td>\n//                   <td className=\"py-2 px-4 border\">{leave.reason}</td>\n//                   <td className={`py-2 px-4 border font-medium ${leave.status === 'approved' ? 'text-green-600' : leave.status === 'rejected' ? 'text-red-600' : 'text-yellow-600'}`}>\n//                     {/* Fallback to 'Pending' if status is missing */}\n//                     {leave.status || 'Pending'}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AllLeaveRequests;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './AllLeaveRequests.css'; // Add this at the top of your component file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllLeaveRequests = () => {\n  _s();\n  const [leaveRequests, setLeaveRequests] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState('');\n  const token = localStorage.getItem('token');\n\n  // Fetch all leave requests\n  useEffect(() => {\n    const fetchLeaveRequests = async () => {\n      try {\n        const res = await axios.get('http://localhost:8000/api/leave/all/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setLeaveRequests(res.data);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch leave requests.');\n      }\n    };\n    fetchLeaveRequests();\n  }, [token]);\n\n  // Fetch all employees\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/users/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEmployees(response.data); // Assuming response contains a list of employees\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch employee data.');\n      }\n    };\n    fetchEmployees();\n  }, [token]);\n\n  // Function to get employee full name based on employee_id\n  const getEmployeeFullName = employeeId => {\n    const employee = employees.find(emp => emp.id === employeeId);\n    return employee ? `${employee.first_name} ${employee.last_name}` : 'Unknown';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"All Leave Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 3\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), leaveRequests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-leave-message\",\n      children: \"No leave requests found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white shadow rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Reason\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: leaveRequests.map(leave => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: getEmployeeFullName(leave.employee_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: leave.start_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: leave.end_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: leave.reason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `py-2 px-4 border font-medium \n                ${leave.leave_status === 'approved' ? 'status-approved' : leave.leave_status === 'rejected' ? 'status-rejected' : 'status-pending'}`,\n              children: leave.leave_status || 'Pending'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, leave.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(AllLeaveRequests, \"laCc09NXpNQ5hRdwqiDXAURdZas=\");\n_c = AllLeaveRequests;\nexport default AllLeaveRequests;\nvar _c;\n$RefreshReg$(_c, \"AllLeaveRequests\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AllLeaveRequests","_s","leaveRequests","setLeaveRequests","employees","setEmployees","error","setError","token","localStorage","getItem","fetchLeaveRequests","res","get","headers","Authorization","data","err","console","fetchEmployees","response","getEmployeeFullName","employeeId","employee","find","emp","id","first_name","last_name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","leave","employee_id","start_date","end_date","reason","leave_status","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/LeaveManagement/AllLeaveRequests.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const AllLeaveRequests = () => {\r\n//     const [leaves, setLeaves] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchLeaves = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem(\"token\");\r\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/leave/all/\", {\r\n//                     headers: { Authorization: `Bearer ${token}` },\r\n//                 });\r\n//                 setLeaves(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching leave requests\", error);\r\n//             }\r\n//         };\r\n//         fetchLeaves();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>All Leave Requests</h2>\r\n//             <table border=\"1\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Employee</th>\r\n//                         <th>Start Date</th>\r\n//                         <th>End Date</th>\r\n//                         <th>Reason</th>\r\n//                         <th>Status</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {leaves.map((leave) => (\r\n//                         <tr key={leave.id}>\r\n//                             <td>{leave.employee_name}</td>\r\n//                             <td>{leave.start_date}</td>\r\n//                             <td>{leave.end_date}</td>\r\n//                             <td>{leave.reason}</td>\r\n//                             <td>{leave.status}</td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AllLeaveRequests;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const AllLeaveRequests = () => {\r\n//   const [leaveRequests, setLeaveRequests] = useState([]);\r\n//   const [error, setError] = useState('');\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchLeaveRequests = async () => {\r\n//       try {\r\n//         const res = await axios.get('http://localhost:8000/api/leave/all/', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n//         setLeaveRequests(res.data);\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//         setError('Failed to fetch leave requests.');\r\n//       }\r\n//     };\r\n\r\n//     fetchLeaveRequests();\r\n//   }, [token]);\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-xl font-bold mb-4\">All Leave Requests</h2>\r\n//       {error && <p className=\"text-red-500\">{error}</p>}\r\n//       {leaveRequests.length === 0 ? (\r\n//         <p>No leave requests found.</p>\r\n//       ) : (\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"min-w-full bg-white shadow rounded\">\r\n//             <thead>\r\n//               <tr className=\"bg-gray-200\">\r\n//                 <th className=\"py-2 px-4 border\">Employee</th>\r\n//                 <th className=\"py-2 px-4 border\">From</th>\r\n//                 <th className=\"py-2 px-4 border\">To</th>\r\n//                 <th className=\"py-2 px-4 border\">Reason</th>\r\n//                 <th className=\"py-2 px-4 border\">Status</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {leaveRequests.map((leave) => (\r\n//                 <tr key={leave.id} className=\"text-center\">\r\n//                   <td className=\"py-2 px-4 border\">{leave.employee_name}</td>\r\n//                   <td className=\"py-2 px-4 border\">{leave.start_date}</td>\r\n//                   <td className=\"py-2 px-4 border\">{leave.end_date}</td>\r\n//                   <td className=\"py-2 px-4 border\">{leave.reason}</td>\r\n//                   <td className={`py-2 px-4 border font-medium ${\r\n//                     leave.status === 'approved' ? 'text-green-600' :\r\n//                     leave.status === 'rejected' ? 'text-red-600' :\r\n//                     'text-yellow-600'\r\n//                   }`}>\r\n//                     {leave.status}\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AllLeaveRequests;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const AllLeaveRequests = () => {\r\n//   const [leaveRequests, setLeaveRequests] = useState([]);\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [error, setError] = useState('');\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   // Fetch all leave requests\r\n//   useEffect(() => {\r\n//     const fetchLeaveRequests = async () => {\r\n//       try {\r\n//         const res = await axios.get('http://localhost:8000/api/leave/all/', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n//         setLeaveRequests(res.data);\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//         setError('Failed to fetch leave requests.');\r\n//       }\r\n//     };\r\n\r\n//     fetchLeaveRequests();\r\n//   }, [token]);\r\n\r\n//   // Fetch all employees\r\n//   useEffect(() => {\r\n//     const fetchEmployees = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8000/api/users/', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setEmployees(response.data); // Assuming response contains a list of employees\r\n//       } catch (err) {\r\n//         console.error(err);\r\n//         setError('Failed to fetch employee data.');\r\n//       }\r\n//     };\r\n\r\n//     fetchEmployees();\r\n//   }, [token]);\r\n\r\n//   // Function to get employee full name based on employee_id\r\n//   const getEmployeeFullName = (employeeId) => {\r\n//     const employee = employees.find((emp) => emp.id === employeeId);\r\n//     return employee ? `${employee.first_name} ${employee.last_name}` : 'Unknown';\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-xl font-bold mb-4\">All Leave Requests</h2>\r\n//       {error && <p className=\"text-red-500\">{error}</p>}\r\n//       {leaveRequests.length === 0 ? (\r\n//         <p>No leave requests found.</p>\r\n//       ) : (\r\n//         <div className=\"overflow-x-auto\">\r\n//           <table className=\"min-w-full bg-white shadow rounded\">\r\n//             <thead>\r\n//               <tr className=\"bg-gray-200\">\r\n//                 <th className=\"py-2 px-4 border\">Employee</th>\r\n//                 <th className=\"py-2 px-4 border\">From</th>\r\n//                 <th className=\"py-2 px-4 border\">To</th>\r\n//                 <th className=\"py-2 px-4 border\">Reason</th>\r\n//                 <th className=\"py-2 px-4 border\">Status</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {leaveRequests.map((leave) => (\r\n//                 <tr key={leave.id} className=\"text-center\">\r\n//                   <td className=\"py-2 px-4 border\">\r\n//                     {/* Display full employee name using getEmployeeFullName */}\r\n//                     {getEmployeeFullName(leave.employee_id)}\r\n//                   </td>\r\n//                   <td className=\"py-2 px-4 border\">{leave.start_date}</td>\r\n//                   <td className=\"py-2 px-4 border\">{leave.end_date}</td>\r\n//                   <td className=\"py-2 px-4 border\">{leave.reason}</td>\r\n//                   <td className={`py-2 px-4 border font-medium ${leave.status === 'approved' ? 'text-green-600' : leave.status === 'rejected' ? 'text-red-600' : 'text-yellow-600'}`}>\r\n//                     {/* Fallback to 'Pending' if status is missing */}\r\n//                     {leave.status || 'Pending'}\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AllLeaveRequests;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AllLeaveRequests.css';  // Add this at the top of your component file\r\n\r\nconst AllLeaveRequests = () => {\r\n  const [leaveRequests, setLeaveRequests] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Fetch all leave requests\r\n  useEffect(() => {\r\n    const fetchLeaveRequests = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:8000/api/leave/all/', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setLeaveRequests(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch leave requests.');\r\n      }\r\n    };\r\n\r\n    fetchLeaveRequests();\r\n  }, [token]);\r\n\r\n  // Fetch all employees\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/users/', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setEmployees(response.data); // Assuming response contains a list of employees\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch employee data.');\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, [token]);\r\n\r\n  // Function to get employee full name based on employee_id\r\n  const getEmployeeFullName = (employeeId) => {\r\n    const employee = employees.find((emp) => emp.id === employeeId);\r\n    return employee ? `${employee.first_name} ${employee.last_name}` : 'Unknown';\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n  <h2 className=\"text-xl font-bold mb-4\">All Leave Requests</h2>\r\n  {error && <p className=\"error-message\">{error}</p>}\r\n  {leaveRequests.length === 0 ? (\r\n    <p className=\"no-leave-message\">No leave requests found.</p>\r\n  ) : (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"min-w-full bg-white shadow rounded\">\r\n        <thead>\r\n          <tr className=\"bg-gray-200\">\r\n            <th className=\"py-2 px-4 border\">Employee</th>\r\n            <th className=\"py-2 px-4 border\">From</th>\r\n            <th className=\"py-2 px-4 border\">To</th>\r\n            <th className=\"py-2 px-4 border\">Reason</th>\r\n            <th className=\"py-2 px-4 border\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaveRequests.map((leave) => (\r\n            <tr key={leave.id} className=\"text-center\">\r\n              <td className=\"py-2 px-4 border\">\r\n                {getEmployeeFullName(leave.employee_id)}\r\n              </td>\r\n              <td className=\"py-2 px-4 border\">{leave.start_date}</td>\r\n              <td className=\"py-2 px-4 border\">{leave.end_date}</td>\r\n              <td className=\"py-2 px-4 border\">{leave.reason}</td>\r\n              <td className={`py-2 px-4 border font-medium \r\n                ${leave.leave_status === 'approved' ? 'status-approved' : \r\n                 leave.leave_status === 'rejected' ? 'status-rejected' : \r\n                 'status-pending'}`}>\r\n                {leave.leave_status || 'Pending'}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default AllLeaveRequests;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACAf,SAAS,CAAC,MAAM;IACd,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,sCAAsC,EAAE;UAClEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QACFL,gBAAgB,CAACS,GAAG,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACZ,KAAK,CAACW,GAAG,CAAC;QAClBV,QAAQ,CAAC,iCAAiC,CAAC;MAC7C;IACF,CAAC;IAEDI,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;;EAEX;EACAb,SAAS,CAAC,MAAM;IACd,MAAMwB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACgB,GAAG,CAAC,kCAAkC,EAAE;UACnEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFH,YAAY,CAACe,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACZ,KAAK,CAACW,GAAG,CAAC;QAClBV,QAAQ,CAAC,gCAAgC,CAAC;MAC5C;IACF,CAAC;IAEDY,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMa,mBAAmB,GAAIC,UAAU,IAAK;IAC1C,MAAMC,QAAQ,GAAGnB,SAAS,CAACoB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,UAAU,CAAC;IAC/D,OAAOC,QAAQ,GAAG,GAAGA,QAAQ,CAACI,UAAU,IAAIJ,QAAQ,CAACK,SAAS,EAAE,GAAG,SAAS;EAC9E,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAClC/B,OAAA;MAAI8B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7D5B,KAAK,iBAAIP,OAAA;MAAG8B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDhC,aAAa,CAACiC,MAAM,KAAK,CAAC,gBACzBpC,OAAA;MAAG8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5DnC,OAAA;MAAK8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B/B,OAAA;QAAO8B,SAAS,EAAC,oCAAoC;QAAAC,QAAA,gBACnD/B,OAAA;UAAA+B,QAAA,eACE/B,OAAA;YAAI8B,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACzB/B,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9CnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1CnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxCnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5CnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRnC,OAAA;UAAA+B,QAAA,EACG5B,aAAa,CAACkC,GAAG,CAAEC,KAAK,iBACvBtC,OAAA;YAAmB8B,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxC/B,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC7BT,mBAAmB,CAACgB,KAAK,CAACC,WAAW;YAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACLnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAEO,KAAK,CAACE;YAAU;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxDnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAEO,KAAK,CAACG;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtDnC,OAAA;cAAI8B,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAEO,KAAK,CAACI;YAAM;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpDnC,OAAA;cAAI8B,SAAS,EAAE;AAC7B,kBAAkBQ,KAAK,CAACK,YAAY,KAAK,UAAU,GAAG,iBAAiB,GACtDL,KAAK,CAACK,YAAY,KAAK,UAAU,GAAG,iBAAiB,GACrD,gBAAgB,EAAG;cAAAZ,QAAA,EACnBO,KAAK,CAACK,YAAY,IAAI;YAAS;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA,GAZEG,KAAK,CAACX,EAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAab,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGN,CAAC;AAACjC,EAAA,CA1FID,gBAAgB;AAAA2C,EAAA,GAAhB3C,gBAAgB;AA4FtB,eAAeA,gBAAgB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}