{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Employees\\\\EmployeeList.jsx\",\n  _s = $RefreshSig$();\n// // // import React, { useState, useEffect } from \"react\";\n// // // import { Link } from \"react-router-dom\";\n// // // import axios from \"axios\";\n\n// // // const EmployeeList = () => {\n// // //     const [employees, setEmployees] = useState([]);\n\n// // //     useEffect(() => {\n// // //     const fetchEmployees = async () => {\n// // //         try {\n// // //         const token = localStorage.getItem(\"token\");\n// // //         const response = await axios.get(\"http://127.0.0.1:8000/api/employees/\", {\n// // //             headers: { Authorization: `Bearer ${token}` },\n// // //         });\n// // //         setEmployees(response.data);\n// // //         } catch (error) {\n// // //         console.error(\"Error fetching employees\", error);\n// // //         }\n// // //     };\n\n// // //     fetchEmployees();\n// // //   }, []);\n\n// // //   return (\n// // //     <div className=\"employee-list\">\n// // //       <h2>Employee List</h2>\n// // //       <table>\n// // //         <thead>\n// // //           <tr>\n// // //             <th>Name</th>\n// // //             <th>Email</th>\n// // //             <th>Role</th>\n// // //             <th>Action</th>\n// // //           </tr>\n// // //         </thead>\n// // //         <tbody>\n// // //           {employees.map((employee) => (\n// // //             <tr key={employee.id}>\n// // //               <td>{employee.name}</td>\n// // //               <td>{employee.email}</td>\n// // //               <td>{employee.role}</td>\n// // //               <td>\n// // //                 <Link to={`/employees/${employee.id}`}>View</Link>\n// // //               </td>\n// // //             </tr>\n// // //           ))}\n// // //         </tbody>\n// // //       </table>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default EmployeeList;\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n\n// //   useEffect(() => {\n// //     const fetchEmployees = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const response = await axios.get('http://localhost:8000/api/users/', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployees(response.data);\n// //       } catch (error) {\n// //         console.error('Failed to fetch employees:', error);\n// //       }\n// //     };\n\n// //     fetchEmployees();\n// //   }, []);\n\n// //   return (\n// //     <div>\n// //       <h2>Employee List</h2>\n// //       <table border=\"1\" cellPadding=\"10\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.map((emp) => (\n// //             <tr key={emp.id}>\n// //               <td>\n// //                 <a href={`/employees/${emp.id}`}>\n// //                     {emp.first_name} {emp.last_name}\n// //                 </a>\n// //               </td>\n\n// //               <td>{emp.email}</td>\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import './EmployeeList.css'; // Make sure this file exists\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n\n// //   useEffect(() => {\n// //     const fetchEmployees = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const response = await axios.get('http://localhost:8000/api/users/', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n\n// //         console.log(\"Fetched Employees:\", response.data); // Debug log\n// //         setEmployees(response.data); // Adjust this if your backend sends { users: [...] }\n// //       } catch (error) {\n// //         console.error('Failed to fetch employees:', error);\n// //       }\n// //     };\n\n// //     fetchEmployees();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Employee List</h2>\n// //       <table className=\"employee-table\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.length > 0 ? (\n// //             employees.map((emp) => (\n// //               <tr key={emp.id}>\n// //                 <td>\n// //                   <a href={`/employees/${emp.id}`}>\n// //                     {emp.first_name} {emp.last_name}\n// //                   </a>\n// //                 </td>\n// //                 <td>{emp.email}</td>\n// //                 <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //               </tr>\n// //             ))\n// //           ) : (\n// //             <tr>\n// //               <td colSpan=\"3\" style={{ textAlign: 'center' }}>\n// //                 No employees found.\n// //               </td>\n// //             </tr>\n// //           )}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { useNavigate } from 'react-router-dom';\n// // import './EmployeeList.css';\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     const fetchEmployees = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const response = await axios.get('http://localhost:8000/api/users/', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n\n// //         console.log(\"Fetched Employees:\", response.data);\n// //         setEmployees(response.data);\n// //       } catch (error) {\n// //         console.error('Failed to fetch employees:', error);\n// //       }\n// //     };\n\n// //     fetchEmployees();\n// //   }, []);\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Employee List</h2>\n// //       <table className=\"employee-table\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //             <th>Actions</th> {/* New Column */}\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.length > 0 ? (\n// //             employees.map((emp) => (\n// //               <tr key={emp.id}>\n// //                 <td>\n// //                   <a href={`/employees/${emp.id}`}>\n// //                     {emp.first_name} {emp.last_name}\n// //                   </a>\n// //                 </td>\n// //                 <td>{emp.email}</td>\n// //                 <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //                 <td>\n// //                   <button\n// //                     className=\"add-salary-button\"\n// //                     onClick={() => navigate(`/salary/add/${emp.id}`)}\n// //                   >\n// //                     Add Salary\n// //                   </button>\n// //                 </td>\n// //               </tr>\n// //             ))\n// //           ) : (\n// //             <tr>\n// //               <td colSpan=\"4\" style={{ textAlign: 'center' }}>\n// //                 No employees found.\n// //               </td>\n// //             </tr>\n// //           )}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { useNavigate } from 'react-router-dom';\n// // import './EmployeeList.css';\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n// //   const [salaryMap, setSalaryMap] = useState({});\n// //   const navigate = useNavigate();\n\n// //   useEffect(() => {\n// //     const token = localStorage.getItem('token');\n\n// //     const fetchEmployeesAndSalaryStatus = async () => {\n// //       try {\n// //         const empRes = await axios.get('http://localhost:8000/api/users/', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployees(empRes.data);\n\n// //         const salaryRes = await axios.get(\n// //           'http://localhost:8000/api/salary/employee_salary_history/',\n// //           {\n// //             headers: { Authorization: `Bearer ${token}` },\n// //           }\n// //         );\n\n// //         const map = {};\n// //         salaryRes.data.forEach((record) => {\n// //           const empId = typeof record.employee === 'object' ? record.employee.id : record.employee;\n// //           map[empId] = record;\n// //         });\n// //         setSalaryMap(map);\n// //       } catch (error) {\n// //         console.error('Error:', error);\n// //       }\n// //     };\n\n// //     fetchEmployeesAndSalaryStatus();\n// //   }, []);\n\n// //   const renderSalaryStatus = (empId) => {\n// //     const record = salaryMap[empId];\n// //     if (record) {\n// //       return record.is_paid ? 'Paid' : 'Pending';\n// //     }\n// //     return 'Not Generated';\n// //   };\n\n// //   const renderActionButton = (empId) => {\n// //     const record = salaryMap[empId];\n\n// //     if (!record) {\n// //       return (\n// //         <button onClick={() => navigate(`/salary/add/${empId}`)}>\n// //           Add Salary\n// //         </button>\n// //       );\n// //     }\n\n// //     if (record.is_paid === false) {\n// //       return (\n// //         <button onClick={() => navigate(`/salary/generate/${empId}`)}>\n// //           Generate Slip\n// //         </button>\n// //       );\n// //     }\n\n// //     return (\n// //       <button onClick={() => navigate(`/salary/history/${empId}`)}>\n// //         View History\n// //       </button>\n// //     );\n// //   };\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Employee List</h2>\n// //       <table className=\"employee-table\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //             <th>Salary Status</th>\n// //             <th>Actions</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.map((emp) => (\n// //             <tr key={emp.id}>\n// //               <td>\n// //                 <a href={`/employees/${emp.id}`}>\n// //                   {emp.first_name} {emp.last_name}\n// //                 </a>\n// //               </td>\n// //               <td>{emp.email}</td>\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //               <td>{renderSalaryStatus(emp.id)}</td>\n// //               <td>{renderActionButton(emp.id)}</td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { useNavigate } from 'react-router-dom';\n// // import './EmployeeList.css';\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n// //   const [salaryMap, setSalaryMap] = useState({});\n// //   const navigate = useNavigate();\n// //   const token = localStorage.getItem('token');\n\n// //   useEffect(() => {\n// //     const fetchEmployees = async () => {\n// //       try {\n// //         const empRes = await axios.get('http://localhost:8000/api/users/', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployees(empRes.data);\n\n// //         // Fetch salary history for each employee\n// //         const salaryMapTemp = {};\n// //         await Promise.all(\n// //           empRes.data.map(async (emp) => {\n// //             try {\n// //               const res = await axios.get(\n// //                 `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\n// //                 {\n// //                   headers: { Authorization: `Bearer ${token}` },\n// //                 }\n// //               );\n\n// //               const history = res.data;\n// //               if (Array.isArray(history) && history.length > 0) {\n// //                 salaryMapTemp[emp.id] = history[0]; // Latest record\n// //               }\n// //             } catch (error) {\n// //               console.warn(`No salary record for user ${emp.id}`);\n// //             }\n// //           })\n// //         );\n\n// //         setSalaryMap(salaryMapTemp);\n// //       } catch (error) {\n// //         console.error('Error fetching employees or salary data', error);\n// //       }\n// //     };\n\n// //     fetchEmployees();\n// //   }, [token]);\n\n// //   const renderSalaryStatus = (empId) => {\n// //     const record = salaryMap[empId];\n// //     if (record) {\n// //       return record.is_paid ? 'Paid' : 'Pending';\n// //     }\n// //     return 'Not Generated';\n// //   };\n\n// //   const renderActionButton = (empId) => {\n// //     const record = salaryMap[empId];\n\n// //     if (!record) {\n// //       return (\n// //         <button onClick={() => navigate(`/salary/add/${empId}`)}>\n// //           Add Salary\n// //         </button>\n// //       );\n// //     }\n\n// //     if (record.is_paid === false) {\n// //       return (\n// //         <button onClick={() => navigate(`/salary/generate/${empId}`)}>\n// //           Generate Slip\n// //         </button>\n// //       );\n// //     }\n\n// //     return (\n// //       <button onClick={() => navigate(`/salary/history/${empId}`)}>\n// //         View History\n// //       </button>\n// //     );\n// //   };\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Employee List</h2>\n// //       <table className=\"employee-table\">\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //             <th>Salary Status</th>\n// //             <th>Actions</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.map((emp) => (\n// //             <tr key={emp.id}>\n// //               <td>\n// //                 <a href={`/employees/${emp.id}`}>\n// //                   {emp.first_name} {emp.last_name}\n// //                 </a>\n// //               </td>\n// //               <td>{emp.email}</td>\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //               <td>{renderSalaryStatus(emp.id)}</td>\n// //               <td>{renderActionButton(emp.id)}</td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { useNavigate } from 'react-router-dom';\n// // import './EmployeeList.css';\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n// //   const [salaryMap, setSalaryMap] = useState({});\n// //   const navigate = useNavigate();\n// //   const token = localStorage.getItem('token');\n\n// //   useEffect(() => {\n// //     const fetchEmployees = async () => {\n// //       try {\n// //         const empRes = await axios.get('http://localhost:8000/api/users/', {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n\n// //         // ✅ Filter only active employees\n// //         const activeEmployees = empRes.data.filter(emp => emp.is_active);\n// //         activeEmployees.sort((a, b) => a.id - b.id);\n// //         setEmployees(activeEmployees);\n\n// //         const salaryMapTemp = {};\n// //         await Promise.all(\n// //           activeEmployees.map(async (emp) => {\n// //             try {\n// //               const res = await axios.get(\n// //                 `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\n// //                 {\n// //                   headers: { Authorization: `Bearer ${token}` },\n// //                 }\n// //               );\n// //               const history = res.data;\n// //               if (Array.isArray(history) && history.length > 0) {\n// //                 salaryMapTemp[emp.id] = history[0];\n// //               }\n// //             } catch (error) {\n// //               console.warn(`No salary record for user ${emp.id}`);\n// //             }\n// //           })\n// //         );\n\n// //         setSalaryMap(salaryMapTemp);\n// //       } catch (error) {\n// //         console.error('Error fetching employees or salary data', error);\n// //       }\n// //     };\n\n// //     fetchEmployees();\n// //   }, [token]);\n\n// //   const renderSalaryStatus = (empId) => {\n// //     const record = salaryMap[empId];\n// //     if (record) {\n// //       return record.is_paid ? 'Paid' : 'Pending';\n// //     }\n// //     return 'Not Generated';\n// //   };\n\n// //   const renderActionButton = (empId) => {\n// //     const record = salaryMap[empId];\n\n// //     if (!record) {\n// //       return (\n// //         <button\n// //           className=\"small-button\"\n// //           onClick={() => navigate(`/salary/add/${empId}`)}\n// //         >\n// //           Add Salary\n// //         </button>\n// //       );\n// //     }\n\n// //     return (\n// //       <div className=\"button-group\">\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-allowance/${empId}`)}>\n// //           Add Allowance\n// //         </button>\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-deduction/${empId}`)}>\n// //           Add Deduction\n// //         </button>\n// //         {record.is_paid === false ? (\n// //           <button className=\"small-button\" onClick={() => navigate(`/salary/generate/${empId}`)}>\n// //             Generate\n// //           </button>\n// //         ) : (\n// //           <button className=\"small-button\" onClick={() => navigate(`/salary/history/${empId}`)}>\n// //             Generate Payslip\n// //           </button>\n// //         )}\n// //       </div>\n// //     );\n// //   };    \n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Employee List</h2>\n// //       <table className=\"employee-table\">\n// //         <thead>\n// //           <tr>\n// //             <th>ID</th>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //             <th>Salary Status</th>\n// //             <th>Actions</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.map((emp) => (\n// //             <tr key={emp.id}>\n// //               <td>{emp.id}</td>\n// //               <td>\n// //                 <a href={`/employees/${emp.id}`}>\n// //                   {emp.first_name} {emp.last_name}\n// //                 </a>\n// //               </td>\n// //               <td>{emp.email}</td>\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //               <td>{renderSalaryStatus(emp.id)}</td>\n// //               <td>{renderActionButton(emp.id)}</td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// // import React, { useEffect, useState } from 'react';\n// // import axios from 'axios';\n// // import { useNavigate } from 'react-router-dom';\n// // import './EmployeeList.css';\n\n// // const EmployeeList = () => {\n// //   const [employees, setEmployees] = useState([]);\n// //   const [salaryMap, setSalaryMap] = useState({});\n// //   const navigate = useNavigate();\n// //   const token = localStorage.getItem('token');\n\n// //   useEffect(() => {\n// //     fetchEmployees();\n// //   }, [token]);\n\n// //   const fetchEmployees = async () => {\n// //     try {\n// //       const empRes = await axios.get('http://localhost:8000/api/users/', {\n// //         headers: { Authorization: `Bearer ${token}` },\n// //       });\n\n// //       const activeEmployees = empRes.data.filter(emp => emp.is_active);\n// //       activeEmployees.sort((a, b) => a.id - b.id);\n// //       setEmployees(activeEmployees);\n\n// //       const salaryMapTemp = {};\n// //       await Promise.all(\n// //         activeEmployees.map(async (emp) => {\n// //           try {\n// //             const res = await axios.get(\n// //               `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\n// //               {\n// //                 headers: { Authorization: `Bearer ${token}` },\n// //               }\n// //             );\n// //             const history = res.data;\n// //             if (Array.isArray(history) && history.length > 0) {\n// //               salaryMapTemp[emp.id] = history[0];\n// //             }\n// //           } catch (error) {\n// //             console.warn(`No salary record for user ${emp.id}`);\n// //           }\n// //         })\n// //       );\n\n// //       setSalaryMap(salaryMapTemp);\n// //     } catch (error) {\n// //       console.error('Error fetching employees or salary data', error);\n// //     }\n// //   };\n\n// //   const handleGeneratePayslip = async (empId) => {\n// //     try {\n// //       await axios.put(\n// //         `http://localhost:8000/api/salary/generate_payslip/${empId}/`,\n// //         {},\n// //         {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         }\n// //       );\n\n// //       // Refresh salary map for updated status\n// //       const res = await axios.get(\n// //         `http://localhost:8000/api/salary/employee_salary_history/${empId}/`,\n// //         {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         }\n// //       );\n// //       const history = res.data;\n// //       if (Array.isArray(history) && history.length > 0) {\n// //         setSalaryMap(prev => ({\n// //           ...prev,\n// //           [empId]: history[0],\n// //         }));\n// //       }\n\n// //       alert(\"Payslip generated and email sent!\");\n// //     } catch (error) {\n// //       console.error('Error generating payslip:', error);\n// //       alert(\"Failed to generate payslip\");\n// //     }\n// //   };\n\n// //   const renderSalaryStatus = (empId) => {\n// //     const record = salaryMap[empId];\n// //     if (record) {\n// //       return record.is_paid ? 'Paid' : 'Pending';\n// //     }\n// //     return 'Not Generated';\n// //   };\n\n// //   const renderActionButton = (empId) => {\n// //     const record = salaryMap[empId];\n\n// //     if (!record) {\n// //       return (\n// //         <button\n// //           className=\"small-button\"\n// //           onClick={() => navigate(`/salary/add/${empId}`)}\n// //         >\n// //           Add Salary\n// //         </button>\n// //       );\n// //     }\n\n// //     return (\n// //       <div className=\"button-group\">\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-allowance/${empId}`)}>\n// //           Add Allowance\n// //         </button>\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-deduction/${empId}`)}>\n// //           Add Deduction\n// //         </button>\n// //         {record.is_paid === false ? (\n// //           <button className=\"small-button\" onClick={() => handleGeneratePayslip(empId)}>\n// //             Generate\n// //           </button>\n// //         ) : (\n// //           <button className=\"small-button\" onClick={() => navigate(`/salary/history/${empId}`)}>\n// //             Generate Payslip\n// //           </button>\n// //         )}\n// //       </div>\n// //     );\n// //   };\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Employee List</h2>\n// //       <table className=\"employee-table\">\n// //         <thead>\n// //           <tr>\n// //             <th>ID</th>\n// //             <th>Name</th>\n// //             <th>Email</th>\n// //             <th>Status</th>\n// //             <th>Salary Status</th>\n// //             <th>Actions</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {employees.map((emp) => (\n// //             <tr key={emp.id}>\n// //               <td>{emp.id}</td>\n// //               <td>\n// //                 <a href={`/employees/${emp.id}`}>\n// //                   {emp.first_name} {emp.last_name}\n// //                 </a>\n// //               </td>\n// //               <td>{emp.email}</td>\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n// //               <td>{renderSalaryStatus(emp.id)}</td>\n// //               <td>{renderActionButton(emp.id)}</td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default EmployeeList;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './EmployeeList.css';\n\n// const EmployeeList = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [salaryMap, setSalaryMap] = useState({});\n//   const navigate = useNavigate();\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchEmployees();\n//   }, [token]);\n\n//   const fetchEmployees = async () => {\n//     try {\n//       const empRes = await axios.get('http://localhost:8000/api/users/', {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       const activeEmployees = empRes.data.filter(emp => emp.is_active);\n//       activeEmployees.sort((a, b) => a.id - b.id);\n//       setEmployees(activeEmployees);\n\n//       const salaryMapTemp = {};\n//       await Promise.all(\n//         activeEmployees.map(async (emp) => {\n//           try {\n//             const res = await axios.get(\n//               `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\n//               {\n//                 headers: { Authorization: `Bearer ${token}` },\n//               }\n//             );\n//             const history = res.data;\n//             if (Array.isArray(history) && history.length > 0) {\n//               salaryMapTemp[emp.id] = history[0];\n//             }\n//           } catch (error) {\n//             console.warn(`No salary record for user ${emp.id}`);\n//           }\n//         })\n//       );\n\n//       setSalaryMap(salaryMapTemp);\n//     } catch (error) {\n//       console.error('Error fetching employees or salary data', error);\n//     }\n//   };\n\n//   const handleGeneratePayslip = async (empId) => {\n//     try {\n//       await axios.put(\n//         `http://localhost:8000/api/salary/generate_payslip/${empId}/`,\n//         {},\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n\n//       // Refresh salary record after generation\n//       const res = await axios.get(\n//         `http://localhost:8000/api/salary/employee_salary_history/${empId}/`,\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n//       const history = res.data;\n//       if (Array.isArray(history) && history.length > 0) {\n//         setSalaryMap(prev => ({\n//           ...prev,\n//           [empId]: history[0],\n//         }));\n//       }\n\n//       alert(\"Payslip generated and email sent!\");\n//     } catch (error) {\n//       console.error('Error generating payslip:', error);\n//       alert(\"Failed to generate payslip\");\n//     }\n//   };\n\n//   const renderSalaryStatus = (empId) => {\n//     const record = salaryMap[empId];\n//     if (record) {\n//       const status = record.salary_status?.toLowerCase();\n//       if (status === 'paid') return 'Paid';\n//       if (status === 'pending') return 'Pending';\n//     }\n//     return 'Not Generated';\n//   };\n\n//   const renderActionButton = (empId) => {\n//     const record = salaryMap[empId];\n\n//     // No salary record yet\n//     if (!record) {\n//       return (\n//         <button\n//           className=\"small-button\"\n//           onClick={() => navigate(`/salary/add/${empId}`)}\n//         >\n//           Add Salary\n//         </button>\n//       );\n//     }\n\n//     const status = record.salary_status?.toLowerCase();\n\n//     if (status === 'paid') {\n//       return null; // Show nothing\n//     }\n\n//     return (\n//       <div className=\"button-group\">\n//         <button className=\"small-button\" onClick={() => navigate(`/salary/add-allowance/${empId}`)}>\n//           Add Allowance\n//         </button>\n//         <button className=\"small-button\" onClick={() => navigate(`/salary/add-deduction/${empId}`)}>\n//           Add Deduction\n//         </button>\n//         <button className=\"small-button\" onClick={() => handleGeneratePayslip(empId)}>\n//           Generate Payslip\n//         </button>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"employee-list-container\">\n//       <h2>Employee List</h2>\n//       <table className=\"employee-table\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Status</th>\n//             <th>Salary Status</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {employees.map((emp) => (\n//             <tr key={emp.id}>\n//               <td>{emp.id}</td>\n//               <td>\n//                 <a href={`/employees/${emp.id}`}>\n//                   {emp.first_name} {emp.last_name}\n//                 </a>\n//               </td>\n//               <td>{emp.email}</td>\n//               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\n//               <td>{renderSalaryStatus(emp.id)}</td>\n//               <td>{renderActionButton(emp.id)}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './EmployeeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [salaryMap, setSalaryMap] = useState({});\n  const navigate = useNavigate();\n  const fetchEmployees = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/user/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEmployees(response.data);\n\n      // Fetch salary records for current month\n      const salaryResponse = await axios.get('http://127.0.0.1:8000/api/salary/current_month_salaries/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const map = {};\n      salaryResponse.data.forEach(record => {\n        map[record.employee_id] = {\n          is_paid: record.salary_status === 'Paid',\n          ...record\n        };\n      });\n      setSalaryMap(map);\n    } catch (error) {\n      console.error('Error fetching employees or salaries:', error);\n    }\n  };\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  useEffect(() => {\n    const handleFocus = () => fetchEmployees();\n    window.addEventListener('focus', handleFocus);\n    return () => window.removeEventListener('focus', handleFocus);\n  }, []);\n  const renderActionButton = empId => {\n    const record = salaryMap[empId];\n    if (!record) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => navigate(`/salary/add/${empId}`),\n        children: \"Add Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 9\n      }, this);\n    }\n    if (record.is_paid) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => navigate(`/salary/add-allowance/${empId}`),\n        children: \"Add Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => navigate(`/salary/add-deduction/${empId}`),\n        children: \"Add Deduction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => navigate(`/salary/history/${empId}`),\n        children: \"Generate Payslip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"employee-list-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(emp => {\n          var _salaryMap$emp$id;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_salaryMap$emp$id = salaryMap[emp.id]) !== null && _salaryMap$emp$id !== void 0 && _salaryMap$emp$id.is_paid ? 'Paid' : 'Not Paid'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: renderActionButton(emp.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 15\n            }, this)]\n          }, emp.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1051,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"XnEfFTvgqqCaHafOi1qRPjmN63c=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","salaryMap","setSalaryMap","navigate","fetchEmployees","token","localStorage","getItem","response","get","headers","Authorization","data","salaryResponse","map","forEach","record","employee_id","is_paid","salary_status","error","console","handleFocus","window","addEventListener","removeEventListener","renderActionButton","empId","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","emp","_salaryMap$emp$id","name","email","id","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Employees/EmployeeList.jsx"],"sourcesContent":["// // // import React, { useState, useEffect } from \"react\";\r\n// // // import { Link } from \"react-router-dom\";\r\n// // // import axios from \"axios\";\r\n\r\n// // // const EmployeeList = () => {\r\n// // //     const [employees, setEmployees] = useState([]);\r\n\r\n// // //     useEffect(() => {\r\n// // //     const fetchEmployees = async () => {\r\n// // //         try {\r\n// // //         const token = localStorage.getItem(\"token\");\r\n// // //         const response = await axios.get(\"http://127.0.0.1:8000/api/employees/\", {\r\n// // //             headers: { Authorization: `Bearer ${token}` },\r\n// // //         });\r\n// // //         setEmployees(response.data);\r\n// // //         } catch (error) {\r\n// // //         console.error(\"Error fetching employees\", error);\r\n// // //         }\r\n// // //     };\r\n\r\n// // //     fetchEmployees();\r\n// // //   }, []);\r\n\r\n// // //   return (\r\n// // //     <div className=\"employee-list\">\r\n// // //       <h2>Employee List</h2>\r\n// // //       <table>\r\n// // //         <thead>\r\n// // //           <tr>\r\n// // //             <th>Name</th>\r\n// // //             <th>Email</th>\r\n// // //             <th>Role</th>\r\n// // //             <th>Action</th>\r\n// // //           </tr>\r\n// // //         </thead>\r\n// // //         <tbody>\r\n// // //           {employees.map((employee) => (\r\n// // //             <tr key={employee.id}>\r\n// // //               <td>{employee.name}</td>\r\n// // //               <td>{employee.email}</td>\r\n// // //               <td>{employee.role}</td>\r\n// // //               <td>\r\n// // //                 <Link to={`/employees/${employee.id}`}>View</Link>\r\n// // //               </td>\r\n// // //             </tr>\r\n// // //           ))}\r\n// // //         </tbody>\r\n// // //       </table>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default EmployeeList;\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployees = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const response = await axios.get('http://localhost:8000/api/users/', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployees(response.data);\r\n// //       } catch (error) {\r\n// //         console.error('Failed to fetch employees:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployees();\r\n// //   }, []);\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Employee List</h2>\r\n// //       <table border=\"1\" cellPadding=\"10\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.map((emp) => (\r\n// //             <tr key={emp.id}>\r\n// //               <td>\r\n// //                 <a href={`/employees/${emp.id}`}>\r\n// //                     {emp.first_name} {emp.last_name}\r\n// //                 </a>\r\n// //               </td>\r\n\r\n// //               <td>{emp.email}</td>\r\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import './EmployeeList.css'; // Make sure this file exists\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployees = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const response = await axios.get('http://localhost:8000/api/users/', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n\r\n// //         console.log(\"Fetched Employees:\", response.data); // Debug log\r\n// //         setEmployees(response.data); // Adjust this if your backend sends { users: [...] }\r\n// //       } catch (error) {\r\n// //         console.error('Failed to fetch employees:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployees();\r\n// //   }, []);\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Employee List</h2>\r\n// //       <table className=\"employee-table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.length > 0 ? (\r\n// //             employees.map((emp) => (\r\n// //               <tr key={emp.id}>\r\n// //                 <td>\r\n// //                   <a href={`/employees/${emp.id}`}>\r\n// //                     {emp.first_name} {emp.last_name}\r\n// //                   </a>\r\n// //                 </td>\r\n// //                 <td>{emp.email}</td>\r\n// //                 <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //               </tr>\r\n// //             ))\r\n// //           ) : (\r\n// //             <tr>\r\n// //               <td colSpan=\"3\" style={{ textAlign: 'center' }}>\r\n// //                 No employees found.\r\n// //               </td>\r\n// //             </tr>\r\n// //           )}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './EmployeeList.css';\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployees = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const response = await axios.get('http://localhost:8000/api/users/', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n\r\n// //         console.log(\"Fetched Employees:\", response.data);\r\n// //         setEmployees(response.data);\r\n// //       } catch (error) {\r\n// //         console.error('Failed to fetch employees:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployees();\r\n// //   }, []);\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Employee List</h2>\r\n// //       <table className=\"employee-table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //             <th>Actions</th> {/* New Column */}\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.length > 0 ? (\r\n// //             employees.map((emp) => (\r\n// //               <tr key={emp.id}>\r\n// //                 <td>\r\n// //                   <a href={`/employees/${emp.id}`}>\r\n// //                     {emp.first_name} {emp.last_name}\r\n// //                   </a>\r\n// //                 </td>\r\n// //                 <td>{emp.email}</td>\r\n// //                 <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //                 <td>\r\n// //                   <button\r\n// //                     className=\"add-salary-button\"\r\n// //                     onClick={() => navigate(`/salary/add/${emp.id}`)}\r\n// //                   >\r\n// //                     Add Salary\r\n// //                   </button>\r\n// //                 </td>\r\n// //               </tr>\r\n// //             ))\r\n// //           ) : (\r\n// //             <tr>\r\n// //               <td colSpan=\"4\" style={{ textAlign: 'center' }}>\r\n// //                 No employees found.\r\n// //               </td>\r\n// //             </tr>\r\n// //           )}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './EmployeeList.css';\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n// //   const [salaryMap, setSalaryMap] = useState({});\r\n// //   const navigate = useNavigate();\r\n\r\n// //   useEffect(() => {\r\n// //     const token = localStorage.getItem('token');\r\n  \r\n// //     const fetchEmployeesAndSalaryStatus = async () => {\r\n// //       try {\r\n// //         const empRes = await axios.get('http://localhost:8000/api/users/', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployees(empRes.data);\r\n  \r\n// //         const salaryRes = await axios.get(\r\n// //           'http://localhost:8000/api/salary/employee_salary_history/',\r\n// //           {\r\n// //             headers: { Authorization: `Bearer ${token}` },\r\n// //           }\r\n// //         );\r\n  \r\n// //         const map = {};\r\n// //         salaryRes.data.forEach((record) => {\r\n// //           const empId = typeof record.employee === 'object' ? record.employee.id : record.employee;\r\n// //           map[empId] = record;\r\n// //         });\r\n// //         setSalaryMap(map);\r\n// //       } catch (error) {\r\n// //         console.error('Error:', error);\r\n// //       }\r\n// //     };\r\n  \r\n// //     fetchEmployeesAndSalaryStatus();\r\n// //   }, []);\r\n  \r\n\r\n// //   const renderSalaryStatus = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n// //     if (record) {\r\n// //       return record.is_paid ? 'Paid' : 'Pending';\r\n// //     }\r\n// //     return 'Not Generated';\r\n// //   };\r\n\r\n// //   const renderActionButton = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n\r\n// //     if (!record) {\r\n// //       return (\r\n// //         <button onClick={() => navigate(`/salary/add/${empId}`)}>\r\n// //           Add Salary\r\n// //         </button>\r\n// //       );\r\n// //     }\r\n\r\n// //     if (record.is_paid === false) {\r\n// //       return (\r\n// //         <button onClick={() => navigate(`/salary/generate/${empId}`)}>\r\n// //           Generate Slip\r\n// //         </button>\r\n// //       );\r\n// //     }\r\n\r\n// //     return (\r\n// //       <button onClick={() => navigate(`/salary/history/${empId}`)}>\r\n// //         View History\r\n// //       </button>\r\n// //     );\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Employee List</h2>\r\n// //       <table className=\"employee-table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //             <th>Salary Status</th>\r\n// //             <th>Actions</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.map((emp) => (\r\n// //             <tr key={emp.id}>\r\n// //               <td>\r\n// //                 <a href={`/employees/${emp.id}`}>\r\n// //                   {emp.first_name} {emp.last_name}\r\n// //                 </a>\r\n// //               </td>\r\n// //               <td>{emp.email}</td>\r\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //               <td>{renderSalaryStatus(emp.id)}</td>\r\n// //               <td>{renderActionButton(emp.id)}</td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './EmployeeList.css';\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n// //   const [salaryMap, setSalaryMap] = useState({});\r\n// //   const navigate = useNavigate();\r\n// //   const token = localStorage.getItem('token');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployees = async () => {\r\n// //       try {\r\n// //         const empRes = await axios.get('http://localhost:8000/api/users/', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployees(empRes.data);\r\n\r\n// //         // Fetch salary history for each employee\r\n// //         const salaryMapTemp = {};\r\n// //         await Promise.all(\r\n// //           empRes.data.map(async (emp) => {\r\n// //             try {\r\n// //               const res = await axios.get(\r\n// //                 `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\r\n// //                 {\r\n// //                   headers: { Authorization: `Bearer ${token}` },\r\n// //                 }\r\n// //               );\r\n\r\n// //               const history = res.data;\r\n// //               if (Array.isArray(history) && history.length > 0) {\r\n// //                 salaryMapTemp[emp.id] = history[0]; // Latest record\r\n// //               }\r\n// //             } catch (error) {\r\n// //               console.warn(`No salary record for user ${emp.id}`);\r\n// //             }\r\n// //           })\r\n// //         );\r\n\r\n// //         setSalaryMap(salaryMapTemp);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching employees or salary data', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployees();\r\n// //   }, [token]);\r\n\r\n// //   const renderSalaryStatus = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n// //     if (record) {\r\n// //       return record.is_paid ? 'Paid' : 'Pending';\r\n// //     }\r\n// //     return 'Not Generated';\r\n// //   };\r\n\r\n// //   const renderActionButton = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n\r\n// //     if (!record) {\r\n// //       return (\r\n// //         <button onClick={() => navigate(`/salary/add/${empId}`)}>\r\n// //           Add Salary\r\n// //         </button>\r\n// //       );\r\n// //     }\r\n\r\n// //     if (record.is_paid === false) {\r\n// //       return (\r\n// //         <button onClick={() => navigate(`/salary/generate/${empId}`)}>\r\n// //           Generate Slip\r\n// //         </button>\r\n// //       );\r\n// //     }\r\n\r\n// //     return (\r\n// //       <button onClick={() => navigate(`/salary/history/${empId}`)}>\r\n// //         View History\r\n// //       </button>\r\n// //     );\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Employee List</h2>\r\n// //       <table className=\"employee-table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //             <th>Salary Status</th>\r\n// //             <th>Actions</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.map((emp) => (\r\n// //             <tr key={emp.id}>\r\n// //               <td>\r\n// //                 <a href={`/employees/${emp.id}`}>\r\n// //                   {emp.first_name} {emp.last_name}\r\n// //                 </a>\r\n// //               </td>\r\n// //               <td>{emp.email}</td>\r\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //               <td>{renderSalaryStatus(emp.id)}</td>\r\n// //               <td>{renderActionButton(emp.id)}</td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './EmployeeList.css';\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n// //   const [salaryMap, setSalaryMap] = useState({});\r\n// //   const navigate = useNavigate();\r\n// //   const token = localStorage.getItem('token');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployees = async () => {\r\n// //       try {\r\n// //         const empRes = await axios.get('http://localhost:8000/api/users/', {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n  \r\n// //         // ✅ Filter only active employees\r\n// //         const activeEmployees = empRes.data.filter(emp => emp.is_active);\r\n// //         activeEmployees.sort((a, b) => a.id - b.id);\r\n// //         setEmployees(activeEmployees);\r\n  \r\n// //         const salaryMapTemp = {};\r\n// //         await Promise.all(\r\n// //           activeEmployees.map(async (emp) => {\r\n// //             try {\r\n// //               const res = await axios.get(\r\n// //                 `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\r\n// //                 {\r\n// //                   headers: { Authorization: `Bearer ${token}` },\r\n// //                 }\r\n// //               );\r\n// //               const history = res.data;\r\n// //               if (Array.isArray(history) && history.length > 0) {\r\n// //                 salaryMapTemp[emp.id] = history[0];\r\n// //               }\r\n// //             } catch (error) {\r\n// //               console.warn(`No salary record for user ${emp.id}`);\r\n// //             }\r\n// //           })\r\n// //         );\r\n  \r\n// //         setSalaryMap(salaryMapTemp);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching employees or salary data', error);\r\n// //       }\r\n// //     };\r\n  \r\n// //     fetchEmployees();\r\n// //   }, [token]);\r\n  \r\n\r\n// //   const renderSalaryStatus = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n// //     if (record) {\r\n// //       return record.is_paid ? 'Paid' : 'Pending';\r\n// //     }\r\n// //     return 'Not Generated';\r\n// //   };\r\n\r\n// //   const renderActionButton = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n  \r\n// //     if (!record) {\r\n// //       return (\r\n// //         <button\r\n// //           className=\"small-button\"\r\n// //           onClick={() => navigate(`/salary/add/${empId}`)}\r\n// //         >\r\n// //           Add Salary\r\n// //         </button>\r\n// //       );\r\n// //     }\r\n  \r\n// //     return (\r\n// //       <div className=\"button-group\">\r\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-allowance/${empId}`)}>\r\n// //           Add Allowance\r\n// //         </button>\r\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-deduction/${empId}`)}>\r\n// //           Add Deduction\r\n// //         </button>\r\n// //         {record.is_paid === false ? (\r\n// //           <button className=\"small-button\" onClick={() => navigate(`/salary/generate/${empId}`)}>\r\n// //             Generate\r\n// //           </button>\r\n// //         ) : (\r\n// //           <button className=\"small-button\" onClick={() => navigate(`/salary/history/${empId}`)}>\r\n// //             Generate Payslip\r\n// //           </button>\r\n// //         )}\r\n// //       </div>\r\n// //     );\r\n// //   };    \r\n  \r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Employee List</h2>\r\n// //       <table className=\"employee-table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>ID</th>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //             <th>Salary Status</th>\r\n// //             <th>Actions</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.map((emp) => (\r\n// //             <tr key={emp.id}>\r\n// //               <td>{emp.id}</td>\r\n// //               <td>\r\n// //                 <a href={`/employees/${emp.id}`}>\r\n// //                   {emp.first_name} {emp.last_name}\r\n// //                 </a>\r\n// //               </td>\r\n// //               <td>{emp.email}</td>\r\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //               <td>{renderSalaryStatus(emp.id)}</td>\r\n// //               <td>{renderActionButton(emp.id)}</td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import './EmployeeList.css';\r\n\r\n// // const EmployeeList = () => {\r\n// //   const [employees, setEmployees] = useState([]);\r\n// //   const [salaryMap, setSalaryMap] = useState({});\r\n// //   const navigate = useNavigate();\r\n// //   const token = localStorage.getItem('token');\r\n\r\n// //   useEffect(() => {\r\n// //     fetchEmployees();\r\n// //   }, [token]);\r\n\r\n// //   const fetchEmployees = async () => {\r\n// //     try {\r\n// //       const empRes = await axios.get('http://localhost:8000/api/users/', {\r\n// //         headers: { Authorization: `Bearer ${token}` },\r\n// //       });\r\n\r\n// //       const activeEmployees = empRes.data.filter(emp => emp.is_active);\r\n// //       activeEmployees.sort((a, b) => a.id - b.id);\r\n// //       setEmployees(activeEmployees);\r\n\r\n// //       const salaryMapTemp = {};\r\n// //       await Promise.all(\r\n// //         activeEmployees.map(async (emp) => {\r\n// //           try {\r\n// //             const res = await axios.get(\r\n// //               `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\r\n// //               {\r\n// //                 headers: { Authorization: `Bearer ${token}` },\r\n// //               }\r\n// //             );\r\n// //             const history = res.data;\r\n// //             if (Array.isArray(history) && history.length > 0) {\r\n// //               salaryMapTemp[emp.id] = history[0];\r\n// //             }\r\n// //           } catch (error) {\r\n// //             console.warn(`No salary record for user ${emp.id}`);\r\n// //           }\r\n// //         })\r\n// //       );\r\n\r\n// //       setSalaryMap(salaryMapTemp);\r\n// //     } catch (error) {\r\n// //       console.error('Error fetching employees or salary data', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleGeneratePayslip = async (empId) => {\r\n// //     try {\r\n// //       await axios.put(\r\n// //         `http://localhost:8000/api/salary/generate_payslip/${empId}/`,\r\n// //         {},\r\n// //         {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         }\r\n// //       );\r\n\r\n// //       // Refresh salary map for updated status\r\n// //       const res = await axios.get(\r\n// //         `http://localhost:8000/api/salary/employee_salary_history/${empId}/`,\r\n// //         {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         }\r\n// //       );\r\n// //       const history = res.data;\r\n// //       if (Array.isArray(history) && history.length > 0) {\r\n// //         setSalaryMap(prev => ({\r\n// //           ...prev,\r\n// //           [empId]: history[0],\r\n// //         }));\r\n// //       }\r\n\r\n// //       alert(\"Payslip generated and email sent!\");\r\n// //     } catch (error) {\r\n// //       console.error('Error generating payslip:', error);\r\n// //       alert(\"Failed to generate payslip\");\r\n// //     }\r\n// //   };\r\n\r\n// //   const renderSalaryStatus = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n// //     if (record) {\r\n// //       return record.is_paid ? 'Paid' : 'Pending';\r\n// //     }\r\n// //     return 'Not Generated';\r\n// //   };\r\n\r\n// //   const renderActionButton = (empId) => {\r\n// //     const record = salaryMap[empId];\r\n\r\n// //     if (!record) {\r\n// //       return (\r\n// //         <button\r\n// //           className=\"small-button\"\r\n// //           onClick={() => navigate(`/salary/add/${empId}`)}\r\n// //         >\r\n// //           Add Salary\r\n// //         </button>\r\n// //       );\r\n// //     }\r\n\r\n// //     return (\r\n// //       <div className=\"button-group\">\r\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-allowance/${empId}`)}>\r\n// //           Add Allowance\r\n// //         </button>\r\n// //         <button className=\"small-button\" onClick={() => navigate(`/salary/add-deduction/${empId}`)}>\r\n// //           Add Deduction\r\n// //         </button>\r\n// //         {record.is_paid === false ? (\r\n// //           <button className=\"small-button\" onClick={() => handleGeneratePayslip(empId)}>\r\n// //             Generate\r\n// //           </button>\r\n// //         ) : (\r\n// //           <button className=\"small-button\" onClick={() => navigate(`/salary/history/${empId}`)}>\r\n// //             Generate Payslip\r\n// //           </button>\r\n// //         )}\r\n// //       </div>\r\n// //     );\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Employee List</h2>\r\n// //       <table className=\"employee-table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>ID</th>\r\n// //             <th>Name</th>\r\n// //             <th>Email</th>\r\n// //             <th>Status</th>\r\n// //             <th>Salary Status</th>\r\n// //             <th>Actions</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {employees.map((emp) => (\r\n// //             <tr key={emp.id}>\r\n// //               <td>{emp.id}</td>\r\n// //               <td>\r\n// //                 <a href={`/employees/${emp.id}`}>\r\n// //                   {emp.first_name} {emp.last_name}\r\n// //                 </a>\r\n// //               </td>\r\n// //               <td>{emp.email}</td>\r\n// //               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n// //               <td>{renderSalaryStatus(emp.id)}</td>\r\n// //               <td>{renderActionButton(emp.id)}</td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EmployeeList;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './EmployeeList.css';\r\n\r\n// const EmployeeList = () => {\r\n//   const [employees, setEmployees] = useState([]);\r\n//   const [salaryMap, setSalaryMap] = useState({});\r\n//   const navigate = useNavigate();\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     fetchEmployees();\r\n//   }, [token]);\r\n\r\n//   const fetchEmployees = async () => {\r\n//     try {\r\n//       const empRes = await axios.get('http://localhost:8000/api/users/', {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       const activeEmployees = empRes.data.filter(emp => emp.is_active);\r\n//       activeEmployees.sort((a, b) => a.id - b.id);\r\n//       setEmployees(activeEmployees);\r\n\r\n//       const salaryMapTemp = {};\r\n//       await Promise.all(\r\n//         activeEmployees.map(async (emp) => {\r\n//           try {\r\n//             const res = await axios.get(\r\n//               `http://localhost:8000/api/salary/employee_salary_history/${emp.id}/`,\r\n//               {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//               }\r\n//             );\r\n//             const history = res.data;\r\n//             if (Array.isArray(history) && history.length > 0) {\r\n//               salaryMapTemp[emp.id] = history[0];\r\n//             }\r\n//           } catch (error) {\r\n//             console.warn(`No salary record for user ${emp.id}`);\r\n//           }\r\n//         })\r\n//       );\r\n\r\n//       setSalaryMap(salaryMapTemp);\r\n//     } catch (error) {\r\n//       console.error('Error fetching employees or salary data', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGeneratePayslip = async (empId) => {\r\n//     try {\r\n//       await axios.put(\r\n//         `http://localhost:8000/api/salary/generate_payslip/${empId}/`,\r\n//         {},\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n\r\n//       // Refresh salary record after generation\r\n//       const res = await axios.get(\r\n//         `http://localhost:8000/api/salary/employee_salary_history/${empId}/`,\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n//       const history = res.data;\r\n//       if (Array.isArray(history) && history.length > 0) {\r\n//         setSalaryMap(prev => ({\r\n//           ...prev,\r\n//           [empId]: history[0],\r\n//         }));\r\n//       }\r\n\r\n//       alert(\"Payslip generated and email sent!\");\r\n//     } catch (error) {\r\n//       console.error('Error generating payslip:', error);\r\n//       alert(\"Failed to generate payslip\");\r\n//     }\r\n//   };\r\n\r\n//   const renderSalaryStatus = (empId) => {\r\n//     const record = salaryMap[empId];\r\n//     if (record) {\r\n//       const status = record.salary_status?.toLowerCase();\r\n//       if (status === 'paid') return 'Paid';\r\n//       if (status === 'pending') return 'Pending';\r\n//     }\r\n//     return 'Not Generated';\r\n//   };\r\n\r\n//   const renderActionButton = (empId) => {\r\n//     const record = salaryMap[empId];\r\n\r\n//     // No salary record yet\r\n//     if (!record) {\r\n//       return (\r\n//         <button\r\n//           className=\"small-button\"\r\n//           onClick={() => navigate(`/salary/add/${empId}`)}\r\n//         >\r\n//           Add Salary\r\n//         </button>\r\n//       );\r\n//     }\r\n\r\n//     const status = record.salary_status?.toLowerCase();\r\n\r\n//     if (status === 'paid') {\r\n//       return null; // Show nothing\r\n//     }\r\n\r\n//     return (\r\n//       <div className=\"button-group\">\r\n//         <button className=\"small-button\" onClick={() => navigate(`/salary/add-allowance/${empId}`)}>\r\n//           Add Allowance\r\n//         </button>\r\n//         <button className=\"small-button\" onClick={() => navigate(`/salary/add-deduction/${empId}`)}>\r\n//           Add Deduction\r\n//         </button>\r\n//         <button className=\"small-button\" onClick={() => handleGeneratePayslip(empId)}>\r\n//           Generate Payslip\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"employee-list-container\">\r\n//       <h2>Employee List</h2>\r\n//       <table className=\"employee-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//             <th>Status</th>\r\n//             <th>Salary Status</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {employees.map((emp) => (\r\n//             <tr key={emp.id}>\r\n//               <td>{emp.id}</td>\r\n//               <td>\r\n//                 <a href={`/employees/${emp.id}`}>\r\n//                   {emp.first_name} {emp.last_name}\r\n//                 </a>\r\n//               </td>\r\n//               <td>{emp.email}</td>\r\n//               <td>{emp.is_active ? 'Active' : 'Inactive'}</td>\r\n//               <td>{renderSalaryStatus(emp.id)}</td>\r\n//               <td>{renderActionButton(emp.id)}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EmployeeList;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './EmployeeList.css';\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [salaryMap, setSalaryMap] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const fetchEmployees = async () => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const response = await axios.get('http://127.0.0.1:8000/api/user/', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setEmployees(response.data);\r\n\r\n      // Fetch salary records for current month\r\n      const salaryResponse = await axios.get(\r\n        'http://127.0.0.1:8000/api/salary/current_month_salaries/',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const map = {};\r\n      salaryResponse.data.forEach((record) => {\r\n        map[record.employee_id] = {\r\n          is_paid: record.salary_status === 'Paid',\r\n          ...record,\r\n        };\r\n      });\r\n      setSalaryMap(map);\r\n    } catch (error) {\r\n      console.error('Error fetching employees or salaries:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleFocus = () => fetchEmployees();\r\n    window.addEventListener('focus', handleFocus);\r\n    return () => window.removeEventListener('focus', handleFocus);\r\n  }, []);\r\n\r\n  const renderActionButton = (empId) => {\r\n    const record = salaryMap[empId];\r\n\r\n    if (!record) {\r\n      return (\r\n        <button\r\n          className=\"small-button\"\r\n          onClick={() => navigate(`/salary/add/${empId}`)}\r\n        >\r\n          Add Salary\r\n        </button>\r\n      );\r\n    }\r\n\r\n    if (record.is_paid) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"button-group\">\r\n        <button\r\n          className=\"small-button\"\r\n          onClick={() => navigate(`/salary/add-allowance/${empId}`)}\r\n        >\r\n          Add Allowance\r\n        </button>\r\n        <button\r\n          className=\"small-button\"\r\n          onClick={() => navigate(`/salary/add-deduction/${empId}`)}\r\n        >\r\n          Add Deduction\r\n        </button>\r\n        <button\r\n          className=\"small-button\"\r\n          onClick={() => navigate(`/salary/history/${empId}`)}\r\n        >\r\n          Generate Payslip\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"employee-list-container\">\r\n      <h2>Employee List</h2>\r\n      <table className=\"employee-list-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Salary Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map((emp) => (\r\n            <tr key={emp.id}>\r\n              <td>{emp.name}</td>\r\n              <td>{emp.email}</td>\r\n              <td>\r\n                {salaryMap[emp.id]?.is_paid ? 'Paid' : 'Not Paid'}\r\n              </td>\r\n              <td>{renderActionButton(emp.id)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,EAAE;QAClEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CAAC,CAAC;MACFL,YAAY,CAACQ,QAAQ,CAACI,IAAI,CAAC;;MAE3B;MACA,MAAMC,cAAc,GAAG,MAAMnB,KAAK,CAACe,GAAG,CACpC,0DAA0D,EAC1D;QACEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CACF,CAAC;MAED,MAAMS,GAAG,GAAG,CAAC,CAAC;MACdD,cAAc,CAACD,IAAI,CAACG,OAAO,CAAEC,MAAM,IAAK;QACtCF,GAAG,CAACE,MAAM,CAACC,WAAW,CAAC,GAAG;UACxBC,OAAO,EAAEF,MAAM,CAACG,aAAa,KAAK,MAAM;UACxC,GAAGH;QACL,CAAC;MACH,CAAC,CAAC;MACFd,YAAY,CAACY,GAAG,CAAC;IACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACda,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,MAAM+B,WAAW,GAAGA,CAAA,KAAMlB,cAAc,CAAC,CAAC;IAC1CmB,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAC7C,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMX,MAAM,GAAGf,SAAS,CAAC0B,KAAK,CAAC;IAE/B,IAAI,CAACX,MAAM,EAAE;MACX,oBACEpB,OAAA;QACEgC,SAAS,EAAC,cAAc;QACxBC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,eAAewB,KAAK,EAAE,CAAE;QAAAG,QAAA,EACjD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAEb;IAEA,IAAIlB,MAAM,CAACE,OAAO,EAAE;MAClB,OAAO,IAAI;IACb;IAEA,oBACEtB,OAAA;MAAKgC,SAAS,EAAC,cAAc;MAAAE,QAAA,gBAC3BlC,OAAA;QACEgC,SAAS,EAAC,cAAc;QACxBC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,yBAAyBwB,KAAK,EAAE,CAAE;QAAAG,QAAA,EAC3D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QACEgC,SAAS,EAAC,cAAc;QACxBC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,yBAAyBwB,KAAK,EAAE,CAAE;QAAAG,QAAA,EAC3D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QACEgC,SAAS,EAAC,cAAc;QACxBC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,mBAAmBwB,KAAK,EAAE,CAAE;QAAAG,QAAA,EACrD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV,CAAC;EAED,oBACEtC,OAAA;IAAKgC,SAAS,EAAC,yBAAyB;IAAAE,QAAA,gBACtClC,OAAA;MAAAkC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtC,OAAA;MAAOgC,SAAS,EAAC,qBAAqB;MAAAE,QAAA,gBACpClC,OAAA;QAAAkC,QAAA,eACElC,OAAA;UAAAkC,QAAA,gBACElC,OAAA;YAAAkC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbtC,OAAA;YAAAkC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdtC,OAAA;YAAAkC,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBtC,OAAA;YAAAkC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRtC,OAAA;QAAAkC,QAAA,EACG/B,SAAS,CAACe,GAAG,CAAEqB,GAAG;UAAA,IAAAC,iBAAA;UAAA,oBACjBxC,OAAA;YAAAkC,QAAA,gBACElC,OAAA;cAAAkC,QAAA,EAAKK,GAAG,CAACE;YAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBtC,OAAA;cAAAkC,QAAA,EAAKK,GAAG,CAACG;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBtC,OAAA;cAAAkC,QAAA,EACG,CAAAM,iBAAA,GAAAnC,SAAS,CAACkC,GAAG,CAACI,EAAE,CAAC,cAAAH,iBAAA,eAAjBA,iBAAA,CAAmBlB,OAAO,GAAG,MAAM,GAAG;YAAU;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACLtC,OAAA;cAAAkC,QAAA,EAAKJ,kBAAkB,CAACS,GAAG,CAACI,EAAE;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAN9BC,GAAG,CAACI,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOX,CAAC;QAAA,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACpC,EAAA,CArHID,YAAY;EAAA,QAGCJ,WAAW;AAAA;AAAA+C,EAAA,GAHxB3C,YAAY;AAuHlB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}