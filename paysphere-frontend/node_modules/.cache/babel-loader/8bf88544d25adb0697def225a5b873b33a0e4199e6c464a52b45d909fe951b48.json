{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./Profile.css\";\n\n// const HRProfile = () => {\n//     const [profile, setProfile] = useState({\n//         name: \"\",\n//         email: \"\",\n//         role: \"HR\",\n//     });\n//     const [message, setMessage] = useState(\"\");\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem(\"token\");\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/hr/profile/\", {\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n//                 setProfile(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching HR profile\", error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleChange = (e) => {\n//         setProfile({ ...profile, [e.target.name]: e.target.value });\n//     };\n\n//     const handleUpdate = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.patch(\"http://127.0.0.1:8000/api/hr/profile/update/\", profile, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setMessage(\"Profile updated successfully!\");\n//         } catch (error) {\n//             console.error(\"Error updating profile\", error);\n//             setMessage(\"Failed to update profile.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>HR Profile</h2>\n//             {message && <p>{message}</p>}\n//             <form onSubmit={handleUpdate}>\n//                 <label>Name:</label>\n//                 <input type=\"text\" name=\"name\" value={profile.name} onChange={handleChange} required />\n\n//                 <label>Email:</label>\n//                 <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} required disabled />\n\n//                 <button type=\"submit\">Update Profile</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default HRProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const HRProfile = () => {\n//   const [profileData, setProfileData] = useState(null);\n//   const [updatedProfile, setUpdatedProfile] = useState({});\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     if (!token) {\n//       setError('Please log in to view your profile.');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchProfileData = async () => {\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/hr/profile/', {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n\n//         if (response.status === 200) {\n//           setProfileData(response.data);\n//         } else {\n//           setError('Unexpected response from the server.');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching profile data:', err);\n//         setError('Failed to fetch profile data. Please try again later.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [token]);\n\n//   const handleEditClick = () => {\n//     setIsEditing(true);\n//     setUpdatedProfile(profileData);  // Pre-fill the form with current data\n//   };\n\n//   const handleCancelClick = () => {\n//     setIsEditing(false);\n//     setUpdatedProfile({});\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdatedProfile((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSaveClick = async () => {\n//     try {\n//       const response = await axios.patch(\n//         'http://127.0.0.1:8000/api/hr/profile/update/',\n//         updatedProfile,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         setProfileData(response.data); // Update the profile data with the response\n//         setIsEditing(false);\n//         setError('');\n//       } else {\n//         setError('Failed to update profile.');\n//       }\n//     } catch (err) {\n//       console.error('Error updating profile:', err);\n//       setError('Failed to update profile. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"profile-container\">\n//       <h2>HR Profile</h2>\n\n//       {loading && <p>Loading profile...</p>}\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {profileData && !loading && !error && !isEditing ? (\n//         <div className=\"profile-info\">\n//           <p><strong>Name:</strong> {profileData.name}</p>\n//           <p><strong>Email:</strong> {profileData.email}</p>\n//           <p><strong>Phone Number:</strong> {profileData.phone_number}</p>\n//           <p><strong>Role:</strong> {profileData.role}</p>\n//           <button onClick={handleEditClick}>Edit Profile</button>\n//         </div>\n//       ) : isEditing ? (\n//         <div className=\"profile-edit\">\n//           <div>\n//             <label htmlFor=\"name\">Name:</label>\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               name=\"name\"\n//               value={updatedProfile.name || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"email\">Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={updatedProfile.email || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"phone_number\">Phone Number:</label>\n//             <input\n//               type=\"text\"\n//               id=\"phone_number\"\n//               name=\"phone_number\"\n//               value={updatedProfile.phone_number || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"role\">Role:</label>\n//             <input\n//               type=\"text\"\n//               id=\"role\"\n//               name=\"role\"\n//               value={updatedProfile.role || ''}\n//               onChange={handleChange}\n//               disabled\n//             />\n//           </div>\n//           <button onClick={handleSaveClick}>Save</button>\n//           <button onClick={handleCancelClick}>Cancel</button>\n//         </div>\n//       ) : (\n//         <p>No profile data available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default HRProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import jwt_decode from 'jwt-decode';\n// import './Profile.css'; // Import the CSS file\n\n// const HRProfile = () => {\n//   const [profileData, setProfileData] = useState({\n//     first_name: '',\n//     last_name: '',\n//     email: '',\n//     phone_number: '',\n//   });\n\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState(null);\n\n//   const getUserIdFromToken = () => {\n//     const token = localStorage.getItem('token');\n//     if (!token) return null;\n//     const decoded = jwt_decode(token);\n//     return decoded.user_id;\n//   };\n\n//   const userId = getUserIdFromToken();\n\n//   useEffect(() => {\n//     if (!userId) {\n//       setError('User not authenticated');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchProfileData = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\n//           headers: {\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setProfileData(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Failed to load profile data');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [userId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.patch(\n//         `http://127.0.0.1:8000/api/update-user/${userId}/`,\n//         profileData,\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         }\n//       );\n//       setSuccessMessage('Profile updated successfully');\n//     } catch (err) {\n//       setError('Failed to update profile');\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setProfileData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"error\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Update HR Profile</h2>\n//       {successMessage && <div className=\"message\">{successMessage}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>First Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"first_name\"\n//             value={profileData.first_name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Last Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"last_name\"\n//             value={profileData.last_name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={profileData.email}\n//             onChange={handleChange}\n//             disabled\n//           />\n//         </div>\n//         <div>\n//           <label>Phone Number</label>\n//           <input\n//             type=\"text\"\n//             name=\"phone_number\"\n//             value={profileData.phone_number}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Update Profile</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default HRProfile;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState('');\n  const token = localStorage.getItem('token');\n  const userId = localStorage.getItem('user_id'); // Get ID from localStorage\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/user/${userId}/`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        setUser(response.data);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch user profile. Please try again.');\n      }\n    };\n    if (userId) fetchUserProfile();\n  }, [userId, token]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 21\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading profile...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.profile_pic ? `http://localhost:8000${user.profile_pic}` : '/default-profile.png',\n      alt: \"Profile\",\n      width: \"120\",\n      className: \"rounded-full mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 10\n      }, this), \" \", user.first_name, \" \", user.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 10\n      }, this), \" \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 10\n      }, this), \" \", user.phone_no]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"DOB:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 10\n      }, this), \" \", user.dob]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 10\n      }, this), \" \", user.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 10\n      }, this), \" \", user.department]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Designation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 10\n      }, this), \" \", user.designation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Leaves:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 10\n      }, this), \" \", user.total_leaves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Leaves Taken:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 10\n      }, this), \" \", user.leaves_taken]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"y7o+bDqUIRfVCOMIUxEW86ybSBQ=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Profile","_s","user","setUser","error","setError","token","localStorage","getItem","userId","fetchUserProfile","response","get","headers","Authorization","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profile_pic","alt","width","first_name","last_name","email","phone_no","dob","gender","department","designation","total_leaves","leaves_taken","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Profile/Profile.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./Profile.css\";\r\n\r\n// const HRProfile = () => {\r\n//     const [profile, setProfile] = useState({\r\n//         name: \"\",\r\n//         email: \"\",\r\n//         role: \"HR\",\r\n//     });\r\n//     const [message, setMessage] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         const fetchProfile = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem(\"token\");\r\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/hr/profile/\", {\r\n//                     headers: { Authorization: `Bearer ${token}` },\r\n//                 });\r\n//                 setProfile(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching HR profile\", error);\r\n//             }\r\n//         };\r\n//         fetchProfile();\r\n//     }, []);\r\n\r\n//     const handleChange = (e) => {\r\n//         setProfile({ ...profile, [e.target.name]: e.target.value });\r\n//     };\r\n\r\n//     const handleUpdate = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.patch(\"http://127.0.0.1:8000/api/hr/profile/update/\", profile, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setMessage(\"Profile updated successfully!\");\r\n//         } catch (error) {\r\n//             console.error(\"Error updating profile\", error);\r\n//             setMessage(\"Failed to update profile.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>HR Profile</h2>\r\n//             {message && <p>{message}</p>}\r\n//             <form onSubmit={handleUpdate}>\r\n//                 <label>Name:</label>\r\n//                 <input type=\"text\" name=\"name\" value={profile.name} onChange={handleChange} required />\r\n\r\n//                 <label>Email:</label>\r\n//                 <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} required disabled />\r\n\r\n//                 <button type=\"submit\">Update Profile</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const HRProfile = () => {\r\n//   const [profileData, setProfileData] = useState(null);\r\n//   const [updatedProfile, setUpdatedProfile] = useState({});\r\n//   const [error, setError] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     if (!token) {\r\n//       setError('Please log in to view your profile.');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchProfileData = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://127.0.0.1:8000/api/hr/profile/', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n\r\n//         if (response.status === 200) {\r\n//           setProfileData(response.data);\r\n//         } else {\r\n//           setError('Unexpected response from the server.');\r\n//         }\r\n//       } catch (err) {\r\n//         console.error('Error fetching profile data:', err);\r\n//         setError('Failed to fetch profile data. Please try again later.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfileData();\r\n//   }, [token]);\r\n\r\n//   const handleEditClick = () => {\r\n//     setIsEditing(true);\r\n//     setUpdatedProfile(profileData);  // Pre-fill the form with current data\r\n//   };\r\n\r\n//   const handleCancelClick = () => {\r\n//     setIsEditing(false);\r\n//     setUpdatedProfile({});\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setUpdatedProfile((prevState) => ({\r\n//       ...prevState,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSaveClick = async () => {\r\n//     try {\r\n//       const response = await axios.patch(\r\n//         'http://127.0.0.1:8000/api/hr/profile/update/',\r\n//         updatedProfile,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       if (response.status === 200) {\r\n//         setProfileData(response.data); // Update the profile data with the response\r\n//         setIsEditing(false);\r\n//         setError('');\r\n//       } else {\r\n//         setError('Failed to update profile.');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error('Error updating profile:', err);\r\n//       setError('Failed to update profile. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <h2>HR Profile</h2>\r\n\r\n//       {loading && <p>Loading profile...</p>}\r\n//       {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n//       {profileData && !loading && !error && !isEditing ? (\r\n//         <div className=\"profile-info\">\r\n//           <p><strong>Name:</strong> {profileData.name}</p>\r\n//           <p><strong>Email:</strong> {profileData.email}</p>\r\n//           <p><strong>Phone Number:</strong> {profileData.phone_number}</p>\r\n//           <p><strong>Role:</strong> {profileData.role}</p>\r\n//           <button onClick={handleEditClick}>Edit Profile</button>\r\n//         </div>\r\n//       ) : isEditing ? (\r\n//         <div className=\"profile-edit\">\r\n//           <div>\r\n//             <label htmlFor=\"name\">Name:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"name\"\r\n//               name=\"name\"\r\n//               value={updatedProfile.name || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"email\">Email:</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               value={updatedProfile.email || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"phone_number\">Phone Number:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"phone_number\"\r\n//               name=\"phone_number\"\r\n//               value={updatedProfile.phone_number || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"role\">Role:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"role\"\r\n//               name=\"role\"\r\n//               value={updatedProfile.role || ''}\r\n//               onChange={handleChange}\r\n//               disabled\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleSaveClick}>Save</button>\r\n//           <button onClick={handleCancelClick}>Cancel</button>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No profile data available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import jwt_decode from 'jwt-decode';\r\n// import './Profile.css'; // Import the CSS file\r\n\r\n// const HRProfile = () => {\r\n//   const [profileData, setProfileData] = useState({\r\n//     first_name: '',\r\n//     last_name: '',\r\n//     email: '',\r\n//     phone_number: '',\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n//   const getUserIdFromToken = () => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) return null;\r\n//     const decoded = jwt_decode(token);\r\n//     return decoded.user_id;\r\n//   };\r\n\r\n//   const userId = getUserIdFromToken();\r\n\r\n//   useEffect(() => {\r\n//     if (!userId) {\r\n//       setError('User not authenticated');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchProfileData = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//         setProfileData(response.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         setError('Failed to load profile data');\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfileData();\r\n//   }, [userId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.patch(\r\n//         `http://127.0.0.1:8000/api/update-user/${userId}/`,\r\n//         profileData,\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       setSuccessMessage('Profile updated successfully');\r\n//     } catch (err) {\r\n//       setError('Failed to update profile');\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setProfileData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"error\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>Update HR Profile</h2>\r\n//       {successMessage && <div className=\"message\">{successMessage}</div>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"first_name\"\r\n//             value={profileData.first_name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"last_name\"\r\n//             value={profileData.last_name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={profileData.email}\r\n//             onChange={handleChange}\r\n//             disabled\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Phone Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"phone_number\"\r\n//             value={profileData.phone_number}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Update Profile</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const token = localStorage.getItem('token');\r\n  const userId = localStorage.getItem('user_id'); // Get ID from localStorage\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/api/user/${userId}/`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        setUser(response.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch user profile. Please try again.');\r\n      }\r\n    };\r\n\r\n    if (userId) fetchUserProfile();\r\n  }, [userId, token]);\r\n\r\n  if (error) return <p className=\"text-red-500\">{error}</p>;\r\n  if (!user) return <p>Loading profile...</p>;\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-xl font-bold mb-4\">My Profile</h2>\r\n      <img\r\n        src={user.profile_pic ? `http://localhost:8000${user.profile_pic}` : '/default-profile.png'}\r\n        alt=\"Profile\"\r\n        width=\"120\"\r\n        className=\"rounded-full mb-4\"\r\n      />\r\n      <p><strong>Name:</strong> {user.first_name} {user.last_name}</p>\r\n      <p><strong>Email:</strong> {user.email}</p>\r\n      <p><strong>Phone:</strong> {user.phone_no}</p>\r\n      <p><strong>DOB:</strong> {user.dob}</p>\r\n      <p><strong>Gender:</strong> {user.gender}</p>\r\n      <p><strong>Department:</strong> {user.department}</p>\r\n      <p><strong>Designation:</strong> {user.designation}</p>\r\n      <p><strong>Total Leaves:</strong> {user.total_leaves}</p>\r\n      <p><strong>Leaves Taken:</strong> {user.leaves_taken}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;;EAEhDb,SAAS,CAAC,MAAM;IACd,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,kCAAkCH,MAAM,GAAG,EAAE;UAC5EI,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUR,KAAK,EAAE;YAChC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFH,OAAO,CAACQ,QAAQ,CAACI,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACb,KAAK,CAACY,GAAG,CAAC;QAClBX,QAAQ,CAAC,iDAAiD,CAAC;MAC7D;IACF,CAAC;IAED,IAAII,MAAM,EAAEC,gBAAgB,CAAC,CAAC;EAChC,CAAC,EAAE,CAACD,MAAM,EAAEH,KAAK,CAAC,CAAC;EAEnB,IAAIF,KAAK,EAAE,oBAAOL,OAAA;IAAGmB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAAEf;EAAK;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACzD,IAAI,CAACrB,IAAI,EAAE,oBAAOH,OAAA;IAAAoB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE3C,oBACExB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAImB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDxB,OAAA;MACEyB,GAAG,EAAEtB,IAAI,CAACuB,WAAW,GAAG,wBAAwBvB,IAAI,CAACuB,WAAW,EAAE,GAAG,sBAAuB;MAC5FC,GAAG,EAAC,SAAS;MACbC,KAAK,EAAC,KAAK;MACXT,SAAS,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAAC0B,UAAU,EAAC,GAAC,EAAC1B,IAAI,CAAC2B,SAAS;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChExB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAAC4B,KAAK;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAAC6B,QAAQ;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAAC8B,GAAG;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAAC+B,MAAM;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAACgC,UAAU;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAACiC,WAAW;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAACkC,YAAY;IAAA;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDxB,OAAA;MAAAoB,QAAA,gBAAGpB,OAAA;QAAAoB,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAACmC,YAAY;IAAA;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhDID,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAkDb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}