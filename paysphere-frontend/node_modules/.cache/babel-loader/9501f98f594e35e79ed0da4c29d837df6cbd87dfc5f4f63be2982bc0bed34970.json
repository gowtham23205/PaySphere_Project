{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Salary\\\\AddSalary.jsx\",\n  _s = $RefreshSig$();\n// // // import React, { useEffect, useState } from 'react';\n// // // import { useParams } from 'react-router-dom';\n// // // import axios from 'axios';\n\n// // // const AddSalary = () => {\n// // //   const { id } = useParams();\n// // //   const [employee, setEmployee] = useState(null);\n// // //   const [salaryData, setSalaryData] = useState({\n// // //     basic_salary: '',\n// // //     allowances: '',\n// // //     deductions: '',\n// // //   });\n\n// // //   useEffect(() => {\n// // //     const fetchEmployee = async () => {\n// // //       const token = localStorage.getItem('token');\n// // //       try {\n// // //         const response = await axios.get(`http://localhost:8000/api/user/${id}/`, {\n// // //           headers: { Authorization: `Bearer ${token}` },\n// // //         });\n// // //         setEmployee(response.data);\n// // //       } catch (error) {\n// // //         console.error('Error fetching employee:', error);\n// // //       }\n// // //     };\n\n// // //     fetchEmployee();\n// // //   }, [id]);\n\n// // //   const handleChange = (e) => {\n// // //     setSalaryData({ ...salaryData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const token = localStorage.getItem('token');\n// // //     const payload = {\n// // //       employee: id,\n// // //       ...salaryData,\n// // //     };\n\n// // //     try {\n// // //       await axios.post('http://localhost:8000/api/salary/create/', payload, {\n// // //         headers: { Authorization: `Bearer ${token}` },\n// // //       });\n// // //       alert('Salary added successfully!');\n// // //     } catch (error) {\n// // //       alert('Error adding salary: ' + (error.response?.data?.error || 'Something went wrong'));\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"employee-list-container\">\n// // //       <h2>Add Salary</h2>\n// // //       {employee ? (\n// // //         <div>\n// // //           <h3>{employee.first_name} {employee.last_name}</h3>\n// // //           <form onSubmit={handleSubmit}>\n// // //             <label>Basic Salary:</label>\n// // //             <input type=\"number\" name=\"basic_salary\" onChange={handleChange} required />\n\n// // //             <label>Allowances:</label>\n// // //             <input type=\"number\" name=\"allowances\" onChange={handleChange} required />\n\n// // //             <label>Deductions:</label>\n// // //             <input type=\"number\" name=\"deductions\" onChange={handleChange} required />\n\n// // //             <button type=\"submit\">Submit Salary</button>\n// // //           </form>\n// // //         </div>\n// // //       ) : (\n// // //         <p>Loading employee data...</p>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default AddSalary;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import axios from 'axios';\n\n// // const AddSalary = () => {\n// //   const { employeeId } = useParams();\n// //   const navigate = useNavigate();\n\n// //   const [employee, setEmployee] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [basicSalary, setBasicSalary] = useState('');\n// //   const [allowances, setAllowances] = useState('');\n// //   const [deductions, setDeductions] = useState('');\n// //   const [error, setError] = useState('');\n\n// //   useEffect(() => {\n// //     const fetchEmployee = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\n// //           headers: {\n// //             Authorization: `Bearer ${token}`,\n// //           },\n// //         });\n// //         setEmployee(res.data);\n// //       } catch (err) {\n// //         console.error('Failed to load employee details:', err);\n// //         setError('Failed to load employee details.');\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchEmployee();\n// //   }, [employeeId]);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const token = localStorage.getItem('token');\n\n// //     try {\n// //       await axios.post(\n// //         'http://localhost:8000/api/salary/create/',\n// //         {\n// //           employee: employeeId,\n// //           basic_salary: parseFloat(basicSalary),\n// //           allowances: parseFloat(allowances),\n// //           deductions: parseFloat(deductions),\n// //         },\n// //         {\n// //           headers: {\n// //             Authorization: `Bearer ${token}`,\n// //           },\n// //         }\n// //       );\n\n// //       alert('Salary added successfully!');\n// //       navigate('/employees'); // redirect after success\n// //     } catch (err) {\n// //       console.error('Error creating salary:', err.response?.data || err.message);\n// //       setError(err.response?.data?.error || 'Failed to create salary.');\n// //     }\n// //   };\n\n// //   if (loading) return <div>Loading employee info...</div>;\n// //   if (error) return <div>{error}</div>;\n\n// //   return (\n// //     <div style={{ padding: '20px', maxWidth: '500px', margin: 'auto' }}>\n// //       <h2>Add Salary</h2>\n// //       <p>\n// //         <strong>Employee:</strong> {employee.first_name} {employee.last_name}\n// //       </p>\n\n// //       <form onSubmit={handleSubmit}>\n// //         <div style={{ marginBottom: '10px' }}>\n// //           <label>Basic Salary: </label>\n// //           <input\n// //             type=\"number\"\n// //             value={basicSalary}\n// //             onChange={(e) => setBasicSalary(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n\n// //         <div style={{ marginBottom: '10px' }}>\n// //           <label>Allowances: </label>\n// //           <input\n// //             type=\"number\"\n// //             value={allowances}\n// //             onChange={(e) => setAllowances(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n\n// //         <div style={{ marginBottom: '10px' }}>\n// //           <label>Deductions: </label>\n// //           <input\n// //             type=\"number\"\n// //             value={deductions}\n// //             onChange={(e) => setDeductions(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n\n// //         {error && <p style={{ color: 'red' }}>{error}</p>}\n\n// //         <button type=\"submit\">Submit</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default AddSalary;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import axios from 'axios';\n// // import './AddSalary.css'; // CSS file\n\n// // const AddSalary = () => {\n// //   const { id: employeeId } = useParams();\n// //   const navigate = useNavigate();\n\n// //   const [employee, setEmployee] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [basicSalary, setBasicSalary] = useState('');\n// //   const [allowances, setAllowances] = useState('');\n// //   const [deductions, setDeductions] = useState('');\n// //   const [error, setError] = useState('');\n\n// //   useEffect(() => {\n// //     const fetchEmployee = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployee(res.data);\n// //       } catch (err) {\n// //         console.error('Error fetching employee:', err);\n// //         setError('Failed to load employee details.');\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchEmployee();\n// //   }, [employeeId]);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const token = localStorage.getItem('token');\n\n// //     try {\n// //       await axios.post(\n// //         'http://localhost:8000/api/salary/create/',\n// //         {\n// //           employee: employeeId,\n// //           basic_salary: parseFloat(basicSalary),\n// //           allowances: parseFloat(allowances),\n// //           deductions: parseFloat(deductions),\n// //         },\n// //         {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         }\n// //       );\n\n// //       alert('Salary added successfully!');\n// //       navigate('/employees');\n// //     } catch (err) {\n// //       console.error('Salary creation failed:', err.response?.data || err.message);\n// //       setError(err.response?.data?.error || 'Failed to create salary.');\n// //     }\n// //   };\n\n// //   if (loading) return <p>Loading employee info...</p>;\n// //   if (error && !employee) return <p className=\"error-message\">{error}</p>;\n\n// //   return (\n// //     <div className=\"add-salary-container\">\n// //       <h2>Add Salary</h2>\n// //       <p className=\"employee-name\">\n// //         Employee: {employee?.first_name} {employee?.last_name}\n// //       </p>\n\n// //       <form onSubmit={handleSubmit} className=\"salary-form\">\n// //         <label>Basic Salary:</label>\n// //         <input\n// //           type=\"number\"\n// //           value={basicSalary}\n// //           onChange={(e) => setBasicSalary(e.target.value)}\n// //           required\n// //         />\n\n// //         <label>Allowances:</label>\n// //         <input\n// //           type=\"number\"\n// //           value={allowances}\n// //           onChange={(e) => setAllowances(e.target.value)}\n// //           required\n// //         />\n\n// //         <label>Deductions:</label>\n// //         <input\n// //           type=\"number\"\n// //           value={deductions}\n// //           onChange={(e) => setDeductions(e.target.value)}\n// //           required\n// //         />\n\n// //         {error && <p className=\"error-message\">{error}</p>}\n\n// //         <button type=\"submit\">Submit</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default AddSalary;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useParams} from 'react-router-dom';\n// // import axios from 'axios';\n\n// // const AddSalary = () => {\n// //   const { id: employeeId } = useParams();\n// // //   const navigate = useNavigate();\n\n// //   const [employee, setEmployee] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [basicSalary, setBasicSalary] = useState('');\n// //   const [allowances, setAllowances] = useState('');\n// //   const [deductions, setDeductions] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [success, setSuccess] = useState('');\n\n// //   useEffect(() => {\n// //     const fetchEmployee = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployee(res.data);\n// //       } catch (err) {\n// //         console.error('Error fetching employee:', err.response?.data || err.message);\n// //         setError('Failed to load employee details.');\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n\n// //     fetchEmployee();\n// //   }, [employeeId]);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setError('');\n// //     setSuccess('');\n\n// //     const token = localStorage.getItem('token');\n\n// //     try {\n// //       await axios.post(\n// //         'http://localhost:8000/api/salary/create/',\n// //         {\n// //           employee: employeeId,\n// //           basic_salary: parseFloat(basicSalary),\n// //           allowances: parseFloat(allowances),\n// //           deductions: parseFloat(deductions),\n// //         },\n// //         {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         }\n// //       );\n\n// //       setSuccess('Salary added successfully!');\n// //       setBasicSalary('');\n// //       setAllowances('');\n// //       setDeductions('');\n// //     } catch (err) {\n// //       console.error('Salary creation failed:', err.response?.data || err.message);\n// //       setError(err.response?.data?.error || 'Failed to create salary.');\n// //     }\n// //   };\n\n// //   if (loading) return <p>Loading employee info...</p>;\n\n// //   return (\n// //     <div style={styles.container}>\n// //       <h2>Add Salary</h2>\n\n// //       {success && <p style={styles.success}>{success}</p>}\n// //       {error && <p style={styles.error}>{error}</p>}\n\n// //       <p>\n// //         <strong>Employee:</strong> {employee?.first_name} {employee?.last_name}\n// //       </p>\n\n// //       <form onSubmit={handleSubmit}>\n// //         <div style={styles.inputGroup}>\n// //           <label>Basic Salary:</label>\n// //           <input\n// //             type=\"number\"\n// //             value={basicSalary}\n// //             onChange={(e) => setBasicSalary(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n\n// //         <div style={styles.inputGroup}>\n// //           <label>Allowances:</label>\n// //           <input\n// //             type=\"number\"\n// //             value={allowances}\n// //             onChange={(e) => setAllowances(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n\n// //         <div style={styles.inputGroup}>\n// //           <label>Deductions:</label>\n// //           <input\n// //             type=\"number\"\n// //             value={deductions}\n// //             onChange={(e) => setDeductions(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n\n// //         <button type=\"submit\" style={styles.button}>Submit</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // const styles = {\n// //   container: {\n// //     padding: '20px',\n// //     maxWidth: '500px',\n// //     margin: 'auto',\n// //     border: '1px solid #ccc',\n// //     borderRadius: '8px',\n// //     boxShadow: '0 0 10px rgba(0,0,0,0.1)',\n// //     backgroundColor: '#f9f9f9',\n// //   },\n// //   inputGroup: {\n// //     marginBottom: '12px',\n// //     display: 'flex',\n// //     flexDirection: 'column',\n// //   },\n// //   button: {\n// //     padding: '10px 20px',\n// //     backgroundColor: '#4CAF50',\n// //     color: 'white',\n// //     border: 'none',\n// //     borderRadius: '6px',\n// //     cursor: 'pointer',\n// //   },\n// //   error: {\n// //     color: 'red',\n// //     marginBottom: '10px',\n// //     fontWeight: 'bold',\n// //   },\n// //   success: {\n// //     color: 'green',\n// //     marginBottom: '10px',\n// //     fontWeight: 'bold',\n// //   },\n// // };\n\n// // export default AddSalary;\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import {\n// //   Box,\n// //   Button,\n// //   TextField,\n// //   Typography,\n// //   Tabs,\n// //   Tab\n// // } from '@mui/material';\n// // import AddAllowance from './AddAllowance';\n// // import AddDeduction from './AddDeduction';\n\n// // function CustomTabPanel({ children, value, index }) {\n// //   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\n// // }\n\n// // function a11yProps(index) {\n// //   return {\n// //     id: `tab-${index}`,\n// //     'aria-controls': `tabpanel-${index}`,\n// //   };\n// // }\n\n// // const AddSalary = () => {\n// //   const [employeeId, setEmployeeId] = useState('');\n// //   const [basicSalary, setBasicSalary] = useState('');\n// //   const [responseMsg, setResponseMsg] = useState('');\n// //   const [value, setValue] = useState(0);\n\n// //   const token = localStorage.getItem('token');\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       await axios.post(\n// //         'http://localhost:8000/api/salary/create/',\n// //         {\n// //           employee: employeeId,\n// //           basic_salary: parseFloat(basicSalary),\n// //         },\n// //         {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         }\n// //       );\n// //       setResponseMsg('Salary added successfully!');\n// //       setBasicSalary('');\n// //     } catch (error) {\n// //       const errMsg = error.response?.data?.error || 'Failed to add salary.';\n// //       setResponseMsg(errMsg);\n// //     }\n// //   };\n\n// //   const handleTabChange = (event, newValue) => {\n// //     setValue(newValue);\n// //   };\n\n// //   return (\n// //     <Box sx={{ width: '100%' }}>\n// //       {responseMsg && (\n// //         <Typography variant=\"subtitle1\" sx={{ color: 'green', m: 2 }}>\n// //           {responseMsg}\n// //         </Typography>\n// //       )}\n\n// //       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n// //         <Tabs value={value} onChange={handleTabChange} aria-label=\"Add Salary Tabs\">\n// //           <Tab label=\"Add Salary\" {...a11yProps(0)} />\n// //           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\n// //           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\n// //         </Tabs>\n// //       </Box>\n\n// //       <CustomTabPanel value={value} index={0}>\n// //         <form onSubmit={handleSubmit}>\n// //           <Box sx={{ mb: 2 }}>\n// //             <TextField\n// //               label=\"Employee ID\"\n// //               value={employeeId}\n// //               onChange={(e) => setEmployeeId(e.target.value)}\n// //               fullWidth\n// //               required\n// //             />\n// //           </Box>\n// //           <Box sx={{ mb: 2 }}>\n// //             <TextField\n// //               label=\"Basic Salary\"\n// //               type=\"number\"\n// //               value={basicSalary}\n// //               onChange={(e) => setBasicSalary(e.target.value)}\n// //               fullWidth\n// //               required\n// //             />\n// //           </Box>\n// //           <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n// //             Submit Salary\n// //           </Button>\n// //         </form>\n// //       </CustomTabPanel>\n\n// //       <CustomTabPanel value={value} index={1}>\n// //         <AddAllowance employeeId={employeeId} />\n// //       </CustomTabPanel>\n\n// //       <CustomTabPanel value={value} index={2}>\n// //         <AddDeduction employeeId={employeeId} />\n// //       </CustomTabPanel>\n// //     </Box>\n// //   );\n// // };\n\n// // export default AddSalary;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   Tabs,\n//   Tab\n// } from '@mui/material';\n// import AddAllowance from './AddAllowance';\n// import AddDeduction from './AddDeduction';\n\n// function CustomTabPanel({ children, value, index }) {\n//   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\n// }\n\n// function a11yProps(index) {\n//   return {\n//     id: `tab-${index}`,\n//     'aria-controls': `tabpanel-${index}`,\n//   };\n// }\n\n// const AddSalary = () => {\n//   const [employeeId, setEmployeeId] = useState('');\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const [value, setValue] = useState(0);\n\n//   const token = localStorage.getItem('token');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n//       setResponseMsg('Salary added successfully!');\n//       setBasicSalary('');\n//     } catch (error) {\n//       const errMsg = error.response?.data?.error || 'Failed to add salary.';\n//       setResponseMsg(errMsg);\n//     }\n//   };\n\n//   const handleTabChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n\n//   return (\n//     <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\n//       {responseMsg && (\n//         <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\n//           {responseMsg}\n//         </Typography>\n//       )}\n\n//       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n//         <Tabs value={value} onChange={handleTabChange} aria-label=\"Add Salary Tabs\" variant=\"fullWidth\">\n//           <Tab label=\"Add Salary\" {...a11yProps(0)} />\n//           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\n//           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\n//         </Tabs>\n//       </Box>\n\n//       <CustomTabPanel value={value} index={0}>\n//         <form onSubmit={handleSubmit}>\n//           <Box sx={{ mb: 3 }}>\n//             <TextField\n//               label=\"Employee ID\"\n//               value={employeeId}\n//               onChange={(e) => setEmployeeId(e.target.value)}\n//               fullWidth\n//               required\n//             />\n//           </Box>\n//           <Box sx={{ mb: 3 }}>\n//             <TextField\n//               label=\"Basic Salary\"\n//               type=\"number\"\n//               value={basicSalary}\n//               onChange={(e) => setBasicSalary(e.target.value)}\n//               fullWidth\n//               required\n//             />\n//           </Box>\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\n//             Submit Salary\n//           </Button>\n//         </form>\n//       </CustomTabPanel>\n\n//       <CustomTabPanel value={value} index={1}>\n//         <AddAllowance employeeId={employeeId} />\n//       </CustomTabPanel>\n\n//       <CustomTabPanel value={value} index={2}>\n//         <AddDeduction employeeId={employeeId} />\n//       </CustomTabPanel>\n//     </Box>\n//   );\n// };\n\n// export default AddSalary;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   Tabs,\n//   Tab\n// } from '@mui/material';\n// import AddAllowance from './AddAllowance';\n// import AddDeduction from './AddDeduction';\n\n// function CustomTabPanel({ children, value, index }) {\n//   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\n// }\n\n// function a11yProps(index) {\n//   return {\n//     id: `tab-${index}`,\n//     'aria-controls': `tabpanel-${index}`,\n//   };\n// }\n\n// const AddSalary = () => {\n//   const [employeeId, setEmployeeId] = useState('');\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const [value, setValue] = useState(0);\n//   const [isHR, setIsHR] = useState(false);\n\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     // Get user profile to auto-fill employee ID\n//     const fetchProfile = async () => {\n//       try {\n//         const res = await axios.get('http://localhost:8000/api/users/', {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//         const user = res.data;\n//         if (user.role === 'HR') {\n//           setIsHR(true); // Show input field for HR\n//         } else {\n//           setEmployeeId(user.id); // Auto-fill for employee\n//         }\n//       } catch (err) {\n//         console.error('Failed to fetch profile', err);\n//       }\n//     };\n\n//     fetchProfile();\n//   }, [token]);\n\n//   const handleTabChange = (event, newValue) => {\n//     setValue(newValue);\n//     setResponseMsg('');\n//   };\n\n//   const handleSalarySubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n//       setResponseMsg('✅ Salary added successfully!');\n//       setBasicSalary('');\n//     } catch (error) {\n//       const errMsg = error.response?.data?.error || '❌ Failed to add salary.';\n//       setResponseMsg(errMsg);\n//     }\n//   };\n\n//   return (\n//     <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\n//       {responseMsg && (\n//         <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\n//           {responseMsg}\n//         </Typography>\n//       )}\n\n//       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n//         <Tabs value={value} onChange={handleTabChange} variant=\"fullWidth\">\n//           <Tab label=\"Add Salary\" {...a11yProps(0)} />\n//           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\n//           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\n//         </Tabs>\n//       </Box>\n\n//       <CustomTabPanel value={value} index={0}>\n//         <form onSubmit={handleSalarySubmit}>\n//           {isHR && (\n//             <Box sx={{ mb: 3 }}>\n//               <TextField\n//                 label=\"Employee ID\"\n//                 value={employeeId}\n//                 onChange={(e) => setEmployeeId(e.target.value)}\n//                 fullWidth\n//                 required\n//               />\n//             </Box>\n//           )}\n\n//           <Box sx={{ mb: 3 }}>\n//             <TextField\n//               label=\"Basic Salary\"\n//               type=\"number\"\n//               value={basicSalary}\n//               onChange={(e) => setBasicSalary(e.target.value)}\n//               fullWidth\n//               required\n//             />\n//           </Box>\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\n//             Add Salary\n//           </Button>\n//         </form>\n//       </CustomTabPanel>\n\n//       <CustomTabPanel value={value} index={1}>\n//         <AddAllowance employeeId={employeeId} />\n//       </CustomTabPanel>\n\n//       <CustomTabPanel value={value} index={2}>\n//         <AddDeduction employeeId={employeeId} />\n//       </CustomTabPanel>\n//     </Box>\n//   );\n// };\n\n// export default AddSalary;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   Tabs,\n//   Tab\n// } from '@mui/material';\n// import AddAllowance from './AddAllowance';\n// import AddDeduction from './AddDeduction';\n\n// function CustomTabPanel({ children, value, index }) {\n//   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\n// }\n\n// function a11yProps(index) {\n//   return {\n//     id: `tab-${index}`,\n//     'aria-controls': `tabpanel-${index}`,\n//   };\n// }\n\n// const AddSalary = () => {\n//   const [employeeId, setEmployeeId] = useState('');\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const [value, setValue] = useState(0);\n//   const [isHR, setIsHR] = useState(false);\n\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchProfile = async () => {\n//       try {\n//         const res = await axios.get('http://localhost:8000/api/users/', {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//         const user = res.data;\n//         if (user.role === 'HR') {\n//           setIsHR(true);\n//         } else {\n//           setEmployeeId(user.id);  // This is User.id\n//         }\n//       } catch (err) {\n//         console.error('Failed to fetch profile', err);\n//       }\n//     };\n\n//     fetchProfile();\n//   }, [token]);\n\n//   const handleTabChange = (event, newValue) => {\n//     setValue(newValue);\n//     setResponseMsg('');\n//   };\n\n//   const handleSalarySubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n//       setResponseMsg('✅ Salary added successfully!');\n//       setBasicSalary('');\n//     } catch (error) {\n//       const errMsg = error.response?.data?.error || '❌ Failed to add salary.';\n//       setResponseMsg(errMsg);\n//     }\n//   };\n\n//   return (\n//     <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\n//       {responseMsg && (\n//         <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\n//           {responseMsg}\n//         </Typography>\n//       )}\n\n//       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n//         <Tabs value={value} onChange={handleTabChange} variant=\"fullWidth\">\n//           <Tab label=\"Add Salary\" {...a11yProps(0)} />\n//           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\n//           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\n//         </Tabs>\n//       </Box>\n\n//       <CustomTabPanel value={value} index={0}>\n//         <form onSubmit={handleSalarySubmit}>\n//           {isHR && (\n//             <Box sx={{ mb: 3 }}>\n//               <TextField\n//                 label=\"Employee ID\"\n//                 value={employeeId}\n//                 onChange={(e) => setEmployeeId(e.target.value)}\n//                 fullWidth\n//                 required\n//               />\n//             </Box>\n//           )}\n\n//           <Box sx={{ mb: 3 }}>\n//             <TextField\n//               label=\"Basic Salary\"\n//               type=\"number\"\n//               value={basicSalary}\n//               onChange={(e) => setBasicSalary(e.target.value)}\n//               fullWidth\n//               required\n//             />\n//           </Box>\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\n//             Add Salary\n//           </Button>\n//         </form>\n//       </CustomTabPanel>\n\n//       <CustomTabPanel value={value} index={1}>\n//         <AddAllowance employeeId={employeeId} />\n//       </CustomTabPanel>\n\n//       <CustomTabPanel value={value} index={2}>\n//         <AddDeduction employeeId={employeeId} />\n//       </CustomTabPanel>\n//     </Box>\n//   );\n// };\n\n// export default AddSalary;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, TextField, Typography, Tabs, Tab } from '@mui/material';\nimport AddAllowance from './AddAllowance';\nimport AddDeduction from './AddDeduction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomTabPanel({\n  children,\n  value,\n  index\n}) {\n  return value === index && /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 986,\n    columnNumber: 29\n  }, this);\n}\n_c = CustomTabPanel;\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`\n  };\n}\nconst AddSalary = () => {\n  _s();\n  const [employee_id, setEmployeeId] = useState('');\n  const [basicSalary, setBasicSalary] = useState('');\n  const [responseMsg, setResponseMsg] = useState('');\n  const [value, setValue] = useState(0);\n  const [isHR, setIsHR] = useState(false);\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const res = await axios.get('http://localhost:8000/api/users/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const user = res.data;\n        if (user.role.toLowerCase() === 'hr') {\n          setIsHR(true);\n        }\n      } catch (err) {\n        console.error('Failed to fetch profile', err);\n      }\n    };\n    fetchProfile();\n  }, [token]);\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n    setResponseMsg('');\n  };\n  const handleSalarySubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8000/api/salary/create/', {\n        employee: parseInt(employee_id),\n        // 👈 Convert string to integer\n        basic_salary: parseFloat(basicSalary),\n        allowances: 0,\n        deductions: 0\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setResponseMsg('✅ Salary added successfully!');\n      setBasicSalary('');\n      setEmployeeId('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || '❌ Failed to add salary.';\n      setResponseMsg(errMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4,\n      bgcolor: '#fff',\n      boxShadow: 3,\n      borderRadius: 2,\n      p: 3\n    },\n    children: [responseMsg && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      sx: {\n        color: 'green',\n        mb: 2,\n        textAlign: 'center'\n      },\n      children: responseMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleTabChange,\n        variant: \"fullWidth\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Add Salary\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Add Allowance\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Add Deduction\",\n          ...a11yProps(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomTabPanel, {\n      value: value,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSalarySubmit,\n        children: [isHR && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Employee ID\",\n            value: employeeId,\n            onChange: e => setEmployeeId(e.target.value),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Basic Salary\",\n            type: \"number\",\n            value: basicSalary,\n            onChange: e => setBasicSalary(e.target.value),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          sx: {\n            py: 1.5\n          },\n          children: \"Add Salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomTabPanel, {\n      value: value,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(AddAllowance, {\n        employeeId: employeeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomTabPanel, {\n      value: value,\n      index: 2,\n      children: /*#__PURE__*/_jsxDEV(AddDeduction, {\n        employeeId: employeeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1053,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSalary, \"e5Qct/b9sPXse1USf4jSorAEk6Y=\");\n_c2 = AddSalary;\nexport default AddSalary;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTabPanel\");\n$RefreshReg$(_c2, \"AddSalary\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Button","TextField","Typography","Tabs","Tab","AddAllowance","AddDeduction","jsxDEV","_jsxDEV","CustomTabPanel","children","value","index","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","a11yProps","id","AddSalary","_s","employee_id","setEmployeeId","basicSalary","setBasicSalary","responseMsg","setResponseMsg","setValue","isHR","setIsHR","token","localStorage","getItem","fetchProfile","res","get","headers","Authorization","user","data","role","toLowerCase","err","console","error","handleTabChange","event","newValue","handleSalarySubmit","e","preventDefault","post","employee","parseInt","basic_salary","parseFloat","allowances","deductions","_error$response","_error$response$data","errMsg","response","width","maxWidth","mx","mt","bgcolor","boxShadow","borderRadius","variant","color","mb","textAlign","borderBottom","borderColor","onChange","label","onSubmit","employeeId","target","fullWidth","required","type","py","_c2","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Salary/AddSalary.jsx"],"sourcesContent":["// // // import React, { useEffect, useState } from 'react';\r\n// // // import { useParams } from 'react-router-dom';\r\n// // // import axios from 'axios';\r\n\r\n// // // const AddSalary = () => {\r\n// // //   const { id } = useParams();\r\n// // //   const [employee, setEmployee] = useState(null);\r\n// // //   const [salaryData, setSalaryData] = useState({\r\n// // //     basic_salary: '',\r\n// // //     allowances: '',\r\n// // //     deductions: '',\r\n// // //   });\r\n\r\n// // //   useEffect(() => {\r\n// // //     const fetchEmployee = async () => {\r\n// // //       const token = localStorage.getItem('token');\r\n// // //       try {\r\n// // //         const response = await axios.get(`http://localhost:8000/api/user/${id}/`, {\r\n// // //           headers: { Authorization: `Bearer ${token}` },\r\n// // //         });\r\n// // //         setEmployee(response.data);\r\n// // //       } catch (error) {\r\n// // //         console.error('Error fetching employee:', error);\r\n// // //       }\r\n// // //     };\r\n\r\n// // //     fetchEmployee();\r\n// // //   }, [id]);\r\n\r\n// // //   const handleChange = (e) => {\r\n// // //     setSalaryData({ ...salaryData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const token = localStorage.getItem('token');\r\n// // //     const payload = {\r\n// // //       employee: id,\r\n// // //       ...salaryData,\r\n// // //     };\r\n\r\n// // //     try {\r\n// // //       await axios.post('http://localhost:8000/api/salary/create/', payload, {\r\n// // //         headers: { Authorization: `Bearer ${token}` },\r\n// // //       });\r\n// // //       alert('Salary added successfully!');\r\n// // //     } catch (error) {\r\n// // //       alert('Error adding salary: ' + (error.response?.data?.error || 'Something went wrong'));\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"employee-list-container\">\r\n// // //       <h2>Add Salary</h2>\r\n// // //       {employee ? (\r\n// // //         <div>\r\n// // //           <h3>{employee.first_name} {employee.last_name}</h3>\r\n// // //           <form onSubmit={handleSubmit}>\r\n// // //             <label>Basic Salary:</label>\r\n// // //             <input type=\"number\" name=\"basic_salary\" onChange={handleChange} required />\r\n\r\n// // //             <label>Allowances:</label>\r\n// // //             <input type=\"number\" name=\"allowances\" onChange={handleChange} required />\r\n\r\n// // //             <label>Deductions:</label>\r\n// // //             <input type=\"number\" name=\"deductions\" onChange={handleChange} required />\r\n\r\n// // //             <button type=\"submit\">Submit Salary</button>\r\n// // //           </form>\r\n// // //         </div>\r\n// // //       ) : (\r\n// // //         <p>Loading employee data...</p>\r\n// // //       )}\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default AddSalary;\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useParams, useNavigate } from 'react-router-dom';\r\n// // import axios from 'axios';\r\n\r\n// // const AddSalary = () => {\r\n// //   const { employeeId } = useParams();\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const [employee, setEmployee] = useState(null);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [basicSalary, setBasicSalary] = useState('');\r\n// //   const [allowances, setAllowances] = useState('');\r\n// //   const [deductions, setDeductions] = useState('');\r\n// //   const [error, setError] = useState('');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployee = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\r\n// //           headers: {\r\n// //             Authorization: `Bearer ${token}`,\r\n// //           },\r\n// //         });\r\n// //         setEmployee(res.data);\r\n// //       } catch (err) {\r\n// //         console.error('Failed to load employee details:', err);\r\n// //         setError('Failed to load employee details.');\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployee();\r\n// //   }, [employeeId]);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const token = localStorage.getItem('token');\r\n\r\n// //     try {\r\n// //       await axios.post(\r\n// //         'http://localhost:8000/api/salary/create/',\r\n// //         {\r\n// //           employee: employeeId,\r\n// //           basic_salary: parseFloat(basicSalary),\r\n// //           allowances: parseFloat(allowances),\r\n// //           deductions: parseFloat(deductions),\r\n// //         },\r\n// //         {\r\n// //           headers: {\r\n// //             Authorization: `Bearer ${token}`,\r\n// //           },\r\n// //         }\r\n// //       );\r\n\r\n// //       alert('Salary added successfully!');\r\n// //       navigate('/employees'); // redirect after success\r\n// //     } catch (err) {\r\n// //       console.error('Error creating salary:', err.response?.data || err.message);\r\n// //       setError(err.response?.data?.error || 'Failed to create salary.');\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) return <div>Loading employee info...</div>;\r\n// //   if (error) return <div>{error}</div>;\r\n\r\n// //   return (\r\n// //     <div style={{ padding: '20px', maxWidth: '500px', margin: 'auto' }}>\r\n// //       <h2>Add Salary</h2>\r\n// //       <p>\r\n// //         <strong>Employee:</strong> {employee.first_name} {employee.last_name}\r\n// //       </p>\r\n\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <div style={{ marginBottom: '10px' }}>\r\n// //           <label>Basic Salary: </label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             value={basicSalary}\r\n// //             onChange={(e) => setBasicSalary(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div style={{ marginBottom: '10px' }}>\r\n// //           <label>Allowances: </label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             value={allowances}\r\n// //             onChange={(e) => setAllowances(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div style={{ marginBottom: '10px' }}>\r\n// //           <label>Deductions: </label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             value={deductions}\r\n// //             onChange={(e) => setDeductions(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n// //         <button type=\"submit\">Submit</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AddSalary;\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useParams, useNavigate } from 'react-router-dom';\r\n// // import axios from 'axios';\r\n// // import './AddSalary.css'; // CSS file\r\n\r\n// // const AddSalary = () => {\r\n// //   const { id: employeeId } = useParams();\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const [employee, setEmployee] = useState(null);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [basicSalary, setBasicSalary] = useState('');\r\n// //   const [allowances, setAllowances] = useState('');\r\n// //   const [deductions, setDeductions] = useState('');\r\n// //   const [error, setError] = useState('');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployee = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployee(res.data);\r\n// //       } catch (err) {\r\n// //         console.error('Error fetching employee:', err);\r\n// //         setError('Failed to load employee details.');\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployee();\r\n// //   }, [employeeId]);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const token = localStorage.getItem('token');\r\n\r\n// //     try {\r\n// //       await axios.post(\r\n// //         'http://localhost:8000/api/salary/create/',\r\n// //         {\r\n// //           employee: employeeId,\r\n// //           basic_salary: parseFloat(basicSalary),\r\n// //           allowances: parseFloat(allowances),\r\n// //           deductions: parseFloat(deductions),\r\n// //         },\r\n// //         {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         }\r\n// //       );\r\n\r\n// //       alert('Salary added successfully!');\r\n// //       navigate('/employees');\r\n// //     } catch (err) {\r\n// //       console.error('Salary creation failed:', err.response?.data || err.message);\r\n// //       setError(err.response?.data?.error || 'Failed to create salary.');\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) return <p>Loading employee info...</p>;\r\n// //   if (error && !employee) return <p className=\"error-message\">{error}</p>;\r\n\r\n// //   return (\r\n// //     <div className=\"add-salary-container\">\r\n// //       <h2>Add Salary</h2>\r\n// //       <p className=\"employee-name\">\r\n// //         Employee: {employee?.first_name} {employee?.last_name}\r\n// //       </p>\r\n\r\n// //       <form onSubmit={handleSubmit} className=\"salary-form\">\r\n// //         <label>Basic Salary:</label>\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           value={basicSalary}\r\n// //           onChange={(e) => setBasicSalary(e.target.value)}\r\n// //           required\r\n// //         />\r\n\r\n// //         <label>Allowances:</label>\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           value={allowances}\r\n// //           onChange={(e) => setAllowances(e.target.value)}\r\n// //           required\r\n// //         />\r\n\r\n// //         <label>Deductions:</label>\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           value={deductions}\r\n// //           onChange={(e) => setDeductions(e.target.value)}\r\n// //           required\r\n// //         />\r\n\r\n// //         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n// //         <button type=\"submit\">Submit</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AddSalary;\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useParams} from 'react-router-dom';\r\n// // import axios from 'axios';\r\n\r\n// // const AddSalary = () => {\r\n// //   const { id: employeeId } = useParams();\r\n// // //   const navigate = useNavigate();\r\n\r\n// //   const [employee, setEmployee] = useState(null);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [basicSalary, setBasicSalary] = useState('');\r\n// //   const [allowances, setAllowances] = useState('');\r\n// //   const [deductions, setDeductions] = useState('');\r\n// //   const [error, setError] = useState('');\r\n// //   const [success, setSuccess] = useState('');\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployee = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployee(res.data);\r\n// //       } catch (err) {\r\n// //         console.error('Error fetching employee:', err.response?.data || err.message);\r\n// //         setError('Failed to load employee details.');\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployee();\r\n// //   }, [employeeId]);\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError('');\r\n// //     setSuccess('');\r\n\r\n// //     const token = localStorage.getItem('token');\r\n\r\n// //     try {\r\n// //       await axios.post(\r\n// //         'http://localhost:8000/api/salary/create/',\r\n// //         {\r\n// //           employee: employeeId,\r\n// //           basic_salary: parseFloat(basicSalary),\r\n// //           allowances: parseFloat(allowances),\r\n// //           deductions: parseFloat(deductions),\r\n// //         },\r\n// //         {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         }\r\n// //       );\r\n\r\n// //       setSuccess('Salary added successfully!');\r\n// //       setBasicSalary('');\r\n// //       setAllowances('');\r\n// //       setDeductions('');\r\n// //     } catch (err) {\r\n// //       console.error('Salary creation failed:', err.response?.data || err.message);\r\n// //       setError(err.response?.data?.error || 'Failed to create salary.');\r\n// //     }\r\n// //   };\r\n\r\n// //   if (loading) return <p>Loading employee info...</p>;\r\n\r\n// //   return (\r\n// //     <div style={styles.container}>\r\n// //       <h2>Add Salary</h2>\r\n\r\n// //       {success && <p style={styles.success}>{success}</p>}\r\n// //       {error && <p style={styles.error}>{error}</p>}\r\n\r\n// //       <p>\r\n// //         <strong>Employee:</strong> {employee?.first_name} {employee?.last_name}\r\n// //       </p>\r\n\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <div style={styles.inputGroup}>\r\n// //           <label>Basic Salary:</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             value={basicSalary}\r\n// //             onChange={(e) => setBasicSalary(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div style={styles.inputGroup}>\r\n// //           <label>Allowances:</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             value={allowances}\r\n// //             onChange={(e) => setAllowances(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <div style={styles.inputGroup}>\r\n// //           <label>Deductions:</label>\r\n// //           <input\r\n// //             type=\"number\"\r\n// //             value={deductions}\r\n// //             onChange={(e) => setDeductions(e.target.value)}\r\n// //             required\r\n// //           />\r\n// //         </div>\r\n\r\n// //         <button type=\"submit\" style={styles.button}>Submit</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // const styles = {\r\n// //   container: {\r\n// //     padding: '20px',\r\n// //     maxWidth: '500px',\r\n// //     margin: 'auto',\r\n// //     border: '1px solid #ccc',\r\n// //     borderRadius: '8px',\r\n// //     boxShadow: '0 0 10px rgba(0,0,0,0.1)',\r\n// //     backgroundColor: '#f9f9f9',\r\n// //   },\r\n// //   inputGroup: {\r\n// //     marginBottom: '12px',\r\n// //     display: 'flex',\r\n// //     flexDirection: 'column',\r\n// //   },\r\n// //   button: {\r\n// //     padding: '10px 20px',\r\n// //     backgroundColor: '#4CAF50',\r\n// //     color: 'white',\r\n// //     border: 'none',\r\n// //     borderRadius: '6px',\r\n// //     cursor: 'pointer',\r\n// //   },\r\n// //   error: {\r\n// //     color: 'red',\r\n// //     marginBottom: '10px',\r\n// //     fontWeight: 'bold',\r\n// //   },\r\n// //   success: {\r\n// //     color: 'green',\r\n// //     marginBottom: '10px',\r\n// //     fontWeight: 'bold',\r\n// //   },\r\n// // };\r\n\r\n// // export default AddSalary;\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import {\r\n// //   Box,\r\n// //   Button,\r\n// //   TextField,\r\n// //   Typography,\r\n// //   Tabs,\r\n// //   Tab\r\n// // } from '@mui/material';\r\n// // import AddAllowance from './AddAllowance';\r\n// // import AddDeduction from './AddDeduction';\r\n\r\n// // function CustomTabPanel({ children, value, index }) {\r\n// //   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\r\n// // }\r\n\r\n// // function a11yProps(index) {\r\n// //   return {\r\n// //     id: `tab-${index}`,\r\n// //     'aria-controls': `tabpanel-${index}`,\r\n// //   };\r\n// // }\r\n\r\n// // const AddSalary = () => {\r\n// //   const [employeeId, setEmployeeId] = useState('');\r\n// //   const [basicSalary, setBasicSalary] = useState('');\r\n// //   const [responseMsg, setResponseMsg] = useState('');\r\n// //   const [value, setValue] = useState(0);\r\n\r\n// //   const token = localStorage.getItem('token');\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       await axios.post(\r\n// //         'http://localhost:8000/api/salary/create/',\r\n// //         {\r\n// //           employee: employeeId,\r\n// //           basic_salary: parseFloat(basicSalary),\r\n// //         },\r\n// //         {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         }\r\n// //       );\r\n// //       setResponseMsg('Salary added successfully!');\r\n// //       setBasicSalary('');\r\n// //     } catch (error) {\r\n// //       const errMsg = error.response?.data?.error || 'Failed to add salary.';\r\n// //       setResponseMsg(errMsg);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleTabChange = (event, newValue) => {\r\n// //     setValue(newValue);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <Box sx={{ width: '100%' }}>\r\n// //       {responseMsg && (\r\n// //         <Typography variant=\"subtitle1\" sx={{ color: 'green', m: 2 }}>\r\n// //           {responseMsg}\r\n// //         </Typography>\r\n// //       )}\r\n\r\n// //       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n// //         <Tabs value={value} onChange={handleTabChange} aria-label=\"Add Salary Tabs\">\r\n// //           <Tab label=\"Add Salary\" {...a11yProps(0)} />\r\n// //           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\r\n// //           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\r\n// //         </Tabs>\r\n// //       </Box>\r\n\r\n// //       <CustomTabPanel value={value} index={0}>\r\n// //         <form onSubmit={handleSubmit}>\r\n// //           <Box sx={{ mb: 2 }}>\r\n// //             <TextField\r\n// //               label=\"Employee ID\"\r\n// //               value={employeeId}\r\n// //               onChange={(e) => setEmployeeId(e.target.value)}\r\n// //               fullWidth\r\n// //               required\r\n// //             />\r\n// //           </Box>\r\n// //           <Box sx={{ mb: 2 }}>\r\n// //             <TextField\r\n// //               label=\"Basic Salary\"\r\n// //               type=\"number\"\r\n// //               value={basicSalary}\r\n// //               onChange={(e) => setBasicSalary(e.target.value)}\r\n// //               fullWidth\r\n// //               required\r\n// //             />\r\n// //           </Box>\r\n// //           <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n// //             Submit Salary\r\n// //           </Button>\r\n// //         </form>\r\n// //       </CustomTabPanel>\r\n\r\n// //       <CustomTabPanel value={value} index={1}>\r\n// //         <AddAllowance employeeId={employeeId} />\r\n// //       </CustomTabPanel>\r\n\r\n// //       <CustomTabPanel value={value} index={2}>\r\n// //         <AddDeduction employeeId={employeeId} />\r\n// //       </CustomTabPanel>\r\n// //     </Box>\r\n// //   );\r\n// // };\r\n\r\n// // export default AddSalary;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   TextField,\r\n//   Typography,\r\n//   Tabs,\r\n//   Tab\r\n// } from '@mui/material';\r\n// import AddAllowance from './AddAllowance';\r\n// import AddDeduction from './AddDeduction';\r\n\r\n// function CustomTabPanel({ children, value, index }) {\r\n//   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\r\n// }\r\n\r\n// function a11yProps(index) {\r\n//   return {\r\n//     id: `tab-${index}`,\r\n//     'aria-controls': `tabpanel-${index}`,\r\n//   };\r\n// }\r\n\r\n// const AddSalary = () => {\r\n//   const [employeeId, setEmployeeId] = useState('');\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [responseMsg, setResponseMsg] = useState('');\r\n//   const [value, setValue] = useState(0);\r\n\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n//       setResponseMsg('Salary added successfully!');\r\n//       setBasicSalary('');\r\n//     } catch (error) {\r\n//       const errMsg = error.response?.data?.error || 'Failed to add salary.';\r\n//       setResponseMsg(errMsg);\r\n//     }\r\n//   };\r\n\r\n//   const handleTabChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\r\n//       {responseMsg && (\r\n//         <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\r\n//           {responseMsg}\r\n//         </Typography>\r\n//       )}\r\n\r\n//       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n//         <Tabs value={value} onChange={handleTabChange} aria-label=\"Add Salary Tabs\" variant=\"fullWidth\">\r\n//           <Tab label=\"Add Salary\" {...a11yProps(0)} />\r\n//           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\r\n//           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\r\n//         </Tabs>\r\n//       </Box>\r\n\r\n//       <CustomTabPanel value={value} index={0}>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <Box sx={{ mb: 3 }}>\r\n//             <TextField\r\n//               label=\"Employee ID\"\r\n//               value={employeeId}\r\n//               onChange={(e) => setEmployeeId(e.target.value)}\r\n//               fullWidth\r\n//               required\r\n//             />\r\n//           </Box>\r\n//           <Box sx={{ mb: 3 }}>\r\n//             <TextField\r\n//               label=\"Basic Salary\"\r\n//               type=\"number\"\r\n//               value={basicSalary}\r\n//               onChange={(e) => setBasicSalary(e.target.value)}\r\n//               fullWidth\r\n//               required\r\n//             />\r\n//           </Box>\r\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\r\n//             Submit Salary\r\n//           </Button>\r\n//         </form>\r\n//       </CustomTabPanel>\r\n\r\n//       <CustomTabPanel value={value} index={1}>\r\n//         <AddAllowance employeeId={employeeId} />\r\n//       </CustomTabPanel>\r\n\r\n//       <CustomTabPanel value={value} index={2}>\r\n//         <AddDeduction employeeId={employeeId} />\r\n//       </CustomTabPanel>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   TextField,\r\n//   Typography,\r\n//   Tabs,\r\n//   Tab\r\n// } from '@mui/material';\r\n// import AddAllowance from './AddAllowance';\r\n// import AddDeduction from './AddDeduction';\r\n\r\n// function CustomTabPanel({ children, value, index }) {\r\n//   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\r\n// }\r\n\r\n// function a11yProps(index) {\r\n//   return {\r\n//     id: `tab-${index}`,\r\n//     'aria-controls': `tabpanel-${index}`,\r\n//   };\r\n// }\r\n\r\n// const AddSalary = () => {\r\n//   const [employeeId, setEmployeeId] = useState('');\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [responseMsg, setResponseMsg] = useState('');\r\n//   const [value, setValue] = useState(0);\r\n//   const [isHR, setIsHR] = useState(false);\r\n\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     // Get user profile to auto-fill employee ID\r\n//     const fetchProfile = async () => {\r\n//       try {\r\n//         const res = await axios.get('http://localhost:8000/api/users/', {\r\n//           headers: { Authorization: `Bearer ${token}` }\r\n//         });\r\n//         const user = res.data;\r\n//         if (user.role === 'HR') {\r\n//           setIsHR(true); // Show input field for HR\r\n//         } else {\r\n//           setEmployeeId(user.id); // Auto-fill for employee\r\n//         }\r\n//       } catch (err) {\r\n//         console.error('Failed to fetch profile', err);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfile();\r\n//   }, [token]);\r\n\r\n//   const handleTabChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//     setResponseMsg('');\r\n//   };\r\n\r\n//   const handleSalarySubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n//       setResponseMsg('✅ Salary added successfully!');\r\n//       setBasicSalary('');\r\n//     } catch (error) {\r\n//       const errMsg = error.response?.data?.error || '❌ Failed to add salary.';\r\n//       setResponseMsg(errMsg);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\r\n//       {responseMsg && (\r\n//         <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\r\n//           {responseMsg}\r\n//         </Typography>\r\n//       )}\r\n\r\n//       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n//         <Tabs value={value} onChange={handleTabChange} variant=\"fullWidth\">\r\n//           <Tab label=\"Add Salary\" {...a11yProps(0)} />\r\n//           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\r\n//           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\r\n//         </Tabs>\r\n//       </Box>\r\n\r\n//       <CustomTabPanel value={value} index={0}>\r\n//         <form onSubmit={handleSalarySubmit}>\r\n//           {isHR && (\r\n//             <Box sx={{ mb: 3 }}>\r\n//               <TextField\r\n//                 label=\"Employee ID\"\r\n//                 value={employeeId}\r\n//                 onChange={(e) => setEmployeeId(e.target.value)}\r\n//                 fullWidth\r\n//                 required\r\n//               />\r\n//             </Box>\r\n//           )}\r\n\r\n//           <Box sx={{ mb: 3 }}>\r\n//             <TextField\r\n//               label=\"Basic Salary\"\r\n//               type=\"number\"\r\n//               value={basicSalary}\r\n//               onChange={(e) => setBasicSalary(e.target.value)}\r\n//               fullWidth\r\n//               required\r\n//             />\r\n//           </Box>\r\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\r\n//             Add Salary\r\n//           </Button>\r\n//         </form>\r\n//       </CustomTabPanel>\r\n\r\n//       <CustomTabPanel value={value} index={1}>\r\n//         <AddAllowance employeeId={employeeId} />\r\n//       </CustomTabPanel>\r\n\r\n//       <CustomTabPanel value={value} index={2}>\r\n//         <AddDeduction employeeId={employeeId} />\r\n//       </CustomTabPanel>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   TextField,\r\n//   Typography,\r\n//   Tabs,\r\n//   Tab\r\n// } from '@mui/material';\r\n// import AddAllowance from './AddAllowance';\r\n// import AddDeduction from './AddDeduction';\r\n\r\n// function CustomTabPanel({ children, value, index }) {\r\n//   return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\r\n// }\r\n\r\n// function a11yProps(index) {\r\n//   return {\r\n//     id: `tab-${index}`,\r\n//     'aria-controls': `tabpanel-${index}`,\r\n//   };\r\n// }\r\n\r\n// const AddSalary = () => {\r\n//   const [employeeId, setEmployeeId] = useState('');\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [responseMsg, setResponseMsg] = useState('');\r\n//   const [value, setValue] = useState(0);\r\n//   const [isHR, setIsHR] = useState(false);\r\n\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchProfile = async () => {\r\n//       try {\r\n//         const res = await axios.get('http://localhost:8000/api/users/', {\r\n//           headers: { Authorization: `Bearer ${token}` }\r\n//         });\r\n//         const user = res.data;\r\n//         if (user.role === 'HR') {\r\n//           setIsHR(true);\r\n//         } else {\r\n//           setEmployeeId(user.id);  // This is User.id\r\n//         }\r\n//       } catch (err) {\r\n//         console.error('Failed to fetch profile', err);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfile();\r\n//   }, [token]);\r\n\r\n//   const handleTabChange = (event, newValue) => {\r\n//     setValue(newValue);\r\n//     setResponseMsg('');\r\n//   };\r\n\r\n//   const handleSalarySubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n//       setResponseMsg('✅ Salary added successfully!');\r\n//       setBasicSalary('');\r\n//     } catch (error) {\r\n//       const errMsg = error.response?.data?.error || '❌ Failed to add salary.';\r\n//       setResponseMsg(errMsg);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\r\n//       {responseMsg && (\r\n//         <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\r\n//           {responseMsg}\r\n//         </Typography>\r\n//       )}\r\n\r\n//       <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n//         <Tabs value={value} onChange={handleTabChange} variant=\"fullWidth\">\r\n//           <Tab label=\"Add Salary\" {...a11yProps(0)} />\r\n//           <Tab label=\"Add Allowance\" {...a11yProps(1)} />\r\n//           <Tab label=\"Add Deduction\" {...a11yProps(2)} />\r\n//         </Tabs>\r\n//       </Box>\r\n\r\n//       <CustomTabPanel value={value} index={0}>\r\n//         <form onSubmit={handleSalarySubmit}>\r\n//           {isHR && (\r\n//             <Box sx={{ mb: 3 }}>\r\n//               <TextField\r\n//                 label=\"Employee ID\"\r\n//                 value={employeeId}\r\n//                 onChange={(e) => setEmployeeId(e.target.value)}\r\n//                 fullWidth\r\n//                 required\r\n//               />\r\n//             </Box>\r\n//           )}\r\n\r\n//           <Box sx={{ mb: 3 }}>\r\n//             <TextField\r\n//               label=\"Basic Salary\"\r\n//               type=\"number\"\r\n//               value={basicSalary}\r\n//               onChange={(e) => setBasicSalary(e.target.value)}\r\n//               fullWidth\r\n//               required\r\n//             />\r\n//           </Box>\r\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\r\n//             Add Salary\r\n//           </Button>\r\n//         </form>\r\n//       </CustomTabPanel>\r\n\r\n//       <CustomTabPanel value={value} index={1}>\r\n//         <AddAllowance employeeId={employeeId} />\r\n//       </CustomTabPanel>\r\n\r\n//       <CustomTabPanel value={value} index={2}>\r\n//         <AddDeduction employeeId={employeeId} />\r\n//       </CustomTabPanel>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Tabs,\r\n  Tab\r\n} from '@mui/material';\r\nimport AddAllowance from './AddAllowance';\r\nimport AddDeduction from './AddDeduction';\r\n\r\nfunction CustomTabPanel({ children, value, index }) {\r\n  return value === index && <Box sx={{ p: 3 }}>{children}</Box>;\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `tab-${index}`,\r\n    'aria-controls': `tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst AddSalary = () => {\r\n  const [employee_id, setEmployeeId] = useState('');\r\n  const [basicSalary, setBasicSalary] = useState('');\r\n  const [responseMsg, setResponseMsg] = useState('');\r\n  const [value, setValue] = useState(0);\r\n  const [isHR, setIsHR] = useState(false);\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:8000/api/users/', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        const user = res.data;\r\n        if (user.role.toLowerCase() === 'hr') {\r\n          setIsHR(true);\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch profile', err);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [token]);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    setResponseMsg('');\r\n  };\r\n\r\n  const handleSalarySubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\r\n        'http://localhost:8000/api/salary/create/',\r\n        {\r\n          employee: parseInt(employee_id), // 👈 Convert string to integer\r\n          basic_salary: parseFloat(basicSalary),\r\n          allowances: 0,\r\n          deductions: 0,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setResponseMsg('✅ Salary added successfully!');\r\n      setBasicSalary('');\r\n      setEmployeeId('');\r\n    } catch (error) {\r\n      const errMsg = error.response?.data?.error || '❌ Failed to add salary.';\r\n      setResponseMsg(errMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4, bgcolor: '#fff', boxShadow: 3, borderRadius: 2, p: 3 }}>\r\n      {responseMsg && (\r\n        <Typography variant=\"subtitle1\" sx={{ color: 'green', mb: 2, textAlign: 'center' }}>\r\n          {responseMsg}\r\n        </Typography>\r\n      )}\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleTabChange} variant=\"fullWidth\">\r\n          <Tab label=\"Add Salary\" {...a11yProps(0)} />\r\n          <Tab label=\"Add Allowance\" {...a11yProps(1)} />\r\n          <Tab label=\"Add Deduction\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      <CustomTabPanel value={value} index={0}>\r\n        <form onSubmit={handleSalarySubmit}>\r\n          {isHR && (\r\n            <Box sx={{ mb: 3 }}>\r\n              <TextField\r\n                label=\"Employee ID\"\r\n                value={employeeId}\r\n                onChange={(e) => setEmployeeId(e.target.value)}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Box>\r\n          )}\r\n\r\n          <Box sx={{ mb: 3 }}>\r\n            <TextField\r\n              label=\"Basic Salary\"\r\n              type=\"number\"\r\n              value={basicSalary}\r\n              onChange={(e) => setBasicSalary(e.target.value)}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Box>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ py: 1.5 }}>\r\n            Add Salary\r\n          </Button>\r\n        </form>\r\n      </CustomTabPanel>\r\n\r\n      <CustomTabPanel value={value} index={1}>\r\n        <AddAllowance employeeId={employeeId} />\r\n      </CustomTabPanel>\r\n\r\n      <CustomTabPanel value={value} index={2}>\r\n        <AddDeduction employeeId={employeeId} />\r\n      </CustomTabPanel>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddSalary;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,GAAG,QACE,eAAe;AACtB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAClD,OAAOD,KAAK,KAAKC,KAAK,iBAAIJ,OAAA,CAACT,GAAG;IAACc,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAJ,QAAA,EAAEA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC/D;AAACC,EAAA,G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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}