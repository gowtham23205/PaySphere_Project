{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// // import React from \"react\";\n// // import { useState } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(null);\n// //   const navigate = useNavigate();\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await axios.post(\"/api/login/\", { email, password });\n\n// //       if (response.data.token) {\n// //         localStorage.setItem(\"token\", response.data.token);\n// //         navigate(\"/dashboard\");\n// //       } else {\n// //         setError(\"Invalid credentials\");\n// //       }\n// //     } catch (err) {\n// //       setError(\"Invalid credentials or server error\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Login</h2>\n// //       {error && <p style={{ color: \"red\" }}>{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n// //         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // // export default Login;\n// // import React, { useState } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n// // import \"../../App.css\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", { email, password });\n\n// //       localStorage.setItem(\"token\", response.data.token);\n// //       localStorage.setItem(\"role\", response.data.role); // Store user role\n// //       localStorage.setItem(\"userId\", response.data.id); // Store user ID\n\n// //       // Redirect based on role\n// //       if (response.data.role === \"HR\") {\n// //         navigate(\"/dashboard\"); // HR Dashboard\n// //       } else {\n// //         navigate(\"/dashboard\"); // Employee Dashboard\n// //       }\n// //     } catch (error) {\n// //       setError(error.response?.data?.error || \"Invalid credentials\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"auth-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error\">{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n// //         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// // import React, { useState } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n\n// // const Login = ({ setToken, setRole }) => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n\n// //     try {\n// //       const response = await axios.post(\"http://localhost:8000/api/login/\", { email, password });\n// //       const { token, role } = response.data;\n\n// //       localStorage.setItem(\"token\", token);\n// //       localStorage.setItem(\"role\", role);  // Ensure role is saved properly\n// //       setToken(token);\n// //       setRole(role);\n\n// //       if (role === \"HR\") {\n// //         navigate(\"/dashboard/hr\");\n// //       } else if (role === \"Employee\") {\n// //         navigate(\"/dashboard/employee\");\n// //       } else {\n// //         navigate(\"/login\");\n// //       }\n// //     } catch (err) {\n// //       setError(\"Invalid email or password\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Login</h2>\n// //       {error && <p style={{ color: \"red\" }}>{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n// //         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n// // import React, { useState, useEffect } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n\n// //   // ✅ Redirect if already logged in\n// //   useEffect(() => {\n// //     const token = localStorage.getItem(\"token\");\n// //     const role = localStorage.getItem(\"role\");\n\n// //     if (token && role) {\n// //       if (role === \"HR\") {\n// //         navigate(\"/dashboard/hr\");\n// //       } else if (role === \"Employee\") {\n// //         navigate(\"/dashboard/employee\");\n// //       }\n// //     }\n// //   }, [navigate]);\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n\n// //     try {\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n// //         email,\n// //         password,\n// //       });\n\n// //       console.log(\"Login Response:\", response.data); // ✅ Debug API response\n\n// //       const { token, role } = response.data;\n\n// //       if (!token || !role) {\n// //         throw new Error(\"Invalid response from server\");\n// //       }\n\n// //       localStorage.setItem(\"token\", token);\n// //       localStorage.setItem(\"role\", role);\n\n// //       if (role === \"HR\") {\n// //         navigate(\"/dashboard/hr\");\n// //       } else if (role === \"Employee\") {\n// //         navigate(\"/dashboard/employee\");\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\n// //       setError(\"Invalid email or password\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error\">{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n// // import \"./Login.css\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n\n// //   // ✅ Redirect if already logged in\n// //   useEffect(() => {\n// //     const token = localStorage.getItem(\"token\");\n// //     const role = localStorage.getItem(\"role\");\n\n// //     if (token && role) {\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     }\n// //   }, [navigate]);\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n\n// //     try {\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n// //         email,\n// //         password,\n// //       });\n\n// //       console.log(\"Login Response:\", response.data); // ✅ Debug API response\n\n// //       const { token, role } = response.data;\n// //       if (!token || !role) {\n// //         throw new Error(\"Invalid response from server\");\n// //       }\n\n// //       localStorage.setItem(\"token\", token);\n// //       localStorage.setItem(\"role\", role.toLowerCase()); // ✅ Normalize role case\n\n// //       // ✅ Redirect based on role\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\n// //       setError(\"Invalid email or password\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error\">{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// // // import { useEffect, useCallback } from \"react\";\n// // import React, { useState, useEffect,useCallback, useRef } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n// //   const didRedirect = useRef(false); // ✅ Prevents infinite redirects\n\n// //   const navigateUser = useCallback(() => {\n// //     const token = localStorage.getItem(\"token\");\n// //     const role = localStorage.getItem(\"role\");\n\n// //     if (token && role) {\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     }\n// //   }, [navigate]);\n\n// //   useEffect(() => {\n// //     navigateUser();\n// //   }, [navigateUser]);\n\n// //   // useEffect(() => {\n// //   //   if (didRedirect.current) return; // ✅ Prevents multiple re-renders\n\n// //   //   const token = localStorage.getItem(\"token\");\n// //   //   const role = localStorage.getItem(\"role\");\n\n// //   //   if (token && role) {\n// //   //     didRedirect.current = true; // ✅ Avoids unnecessary re-renders\n// //   //     if (role.toLowerCase() === \"hr\") {\n// //   //       navigate(\"/dashboard/hr\", { replace: true });\n// //   //     } else if (role.toLowerCase() === \"employee\") {\n// //   //       navigate(\"/dashboard/employee\", { replace: true });\n// //   //     }\n// //   //   }\n// //   // }, []);\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n\n// //     try {\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n// //         email,\n// //         password,\n// //       });\n\n// //       console.log(\"Login Response:\", response.data);\n// //       const { token, role } = response.data;\n// //       if (!token || !role) {\n// //         throw new Error(\"Invalid response from server\");\n// //       }\n\n// //       localStorage.setItem(\"token\", token);\n// //       localStorage.setItem(\"role\", role.toLowerCase());\n\n// //       didRedirect.current = true; // ✅ Ensures only one redirect\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\n// //       setError(\"Invalid email or password\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error\">{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// // import React, { useState, useEffect, useRef } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n// //   const didRedirect = useRef(false); // ✅ Prevents infinite redirects\n\n// //   useEffect(() => {\n// //     if (didRedirect.current) return; // ✅ Prevents multiple re-renders\n\n// //     const token = localStorage.getItem(\"token\");\n// //     const role = localStorage.getItem(\"role\");\n\n// //     if (token && role) {\n// //       didRedirect.current = true; // ✅ Avoids unnecessary re-renders\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     }\n// //   }, []); // ✅ Runs only once on mount\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n\n// //     try {\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n// //         email,\n// //         password,\n// //       });\n\n// //       console.log(\"Login Response:\", response.data);\n// //       const { token, role } = response.data;\n// //       if (!token || !role) {\n// //         throw new Error(\"Invalid response from server\");\n// //       }\n\n// //       localStorage.setItem(\"token\", token);\n// //       localStorage.setItem(\"role\", role.toLowerCase());\n\n// //       didRedirect.current = true; // ✅ Ensures only one redirect\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     } catch (error) {\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\n// //       setError(\"Invalid email or password\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error\">{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// // import React, { useState, useEffect, useRef } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n\n// // const Login = () => {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [error, setError] = useState(\"\");\n// //   const navigate = useNavigate();\n// //   const didRedirect = useRef(false);\n\n// //   useEffect(() => {\n// //     if (didRedirect.current) return;\n\n// //     const token = localStorage.getItem(\"token\");\n// //     const role = localStorage.getItem(\"role\");\n\n// //     if (token && role) {\n// //       didRedirect.current = true;\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n// //     }\n// //   }, [navigate]); // ✅ Fixes ESLint warning\n\n// //   const handleLogin = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n\n// //     try {\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n// //         email,\n// //         password,\n// //       });\n\n// //       const { token, role } = response.data;\n// //       if (!token || !role) {\n// //         throw new Error(\"Invalid response from server\");\n// //       }\n\n// //       localStorage.setItem(\"token\", token);\n// //       localStorage.setItem(\"role\", role.toLowerCase());\n\n// //       didRedirect.current = true;\n// //       if (role.toLowerCase() === \"hr\") {\n// //         navigate(\"/dashboard/hr\", { replace: true });\n// //       } else if (role.toLowerCase() === \"employee\") {\n// //         navigate(\"/dashboard/employee\", { replace: true });\n// //       }\n\n// //       // Optional: Reset form\n// //       setEmail(\"\");\n// //       setPassword(\"\");\n// //     } catch (error) {\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\n// //       setError(\"Invalid email or password\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"login-container\">\n// //       <h2>Login</h2>\n// //       {error && <p className=\"error\">{error}</p>}\n// //       <form onSubmit={handleLogin}>\n// //         <input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"password\"\n// //           placeholder=\"Password\"\n// //           value={password}\n// //           onChange={(e) => setPassword(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Login;\n\n// import React, { useState, useEffect, useRef, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { AuthContext } from \"../../context/AuthContext\";\n\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n//   const didRedirect = useRef(false);\n//   const { login, role } = useContext(AuthContext); // ✅ use auth context\n\n//   useEffect(() => {\n//     if (didRedirect.current || !role) return;\n\n//     didRedirect.current = true;\n//     if (role === \"hr\") {\n//       navigate(\"/dashboard/hr\", { replace: true });\n//     } else if (role === \"employee\") {\n//       navigate(\"/dashboard/employee\", { replace: true });\n//     }\n//   }, [navigate, role]);\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n\n//     try {\n//       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\n//         email,\n//         password,\n//       });\n\n//       const { token, role } = response.data;\n//       if (!token || !role) {\n//         throw new Error(\"Invalid response from server\");\n//       }\n\n//       login(role.toLowerCase(), token); // ✅ updates context + localStorage\n\n//       didRedirect.current = true;\n//       if (role.toLowerCase() === \"hr\") {\n//         navigate(\"/dashboard/hr\", { replace: true });\n//       } else if (role.toLowerCase() === \"employee\") {\n//         navigate(\"/dashboard/employee\", { replace: true });\n//       }\n\n//       setEmail(\"\");\n//       setPassword(\"\");\n//     } catch (error) {\n//       console.error(\"Login Error:\", error.response ? error.response.data : error);\n//       setError(\"Invalid email or password\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Login</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:8000/api/login/', {\n        email,\n        password\n      });\n      const {\n        token,\n        role\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('role', role);\n\n      // Redirect based on role\n      if (role === 'hr') {\n        navigate('/dashboard/hr');\n      } else {\n        navigate('/dashboard/employee');\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 703,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","res","post","token","role","data","localStorage","setItem","err","console","error","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Auth/Login.jsx"],"sourcesContent":["// // import React from \"react\";\r\n// // import { useState } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(null);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const response = await axios.post(\"/api/login/\", { email, password });\r\n  \r\n// //       if (response.data.token) {\r\n// //         localStorage.setItem(\"token\", response.data.token);\r\n// //         navigate(\"/dashboard\");\r\n// //       } else {\r\n// //         setError(\"Invalid credentials\");\r\n// //       }\r\n// //     } catch (err) {\r\n// //       setError(\"Invalid credentials or server error\");\r\n// //     }\r\n// //   };\r\n  \r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Login</h2>\r\n// //       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n// //         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // // export default Login;\r\n// // import React, { useState } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n// // import \"../../App.css\";\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", { email, password });\r\n\r\n// //       localStorage.setItem(\"token\", response.data.token);\r\n// //       localStorage.setItem(\"role\", response.data.role); // Store user role\r\n// //       localStorage.setItem(\"userId\", response.data.id); // Store user ID\r\n\r\n// //       // Redirect based on role\r\n// //       if (response.data.role === \"HR\") {\r\n// //         navigate(\"/dashboard\"); // HR Dashboard\r\n// //       } else {\r\n// //         navigate(\"/dashboard\"); // Employee Dashboard\r\n// //       }\r\n// //     } catch (error) {\r\n// //       setError(error.response?.data?.error || \"Invalid credentials\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"auth-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error\">{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n// //         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n\r\n// // import React, { useState } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n\r\n// // const Login = ({ setToken, setRole }) => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       const response = await axios.post(\"http://localhost:8000/api/login/\", { email, password });\r\n// //       const { token, role } = response.data;\r\n\r\n// //       localStorage.setItem(\"token\", token);\r\n// //       localStorage.setItem(\"role\", role);  // Ensure role is saved properly\r\n// //       setToken(token);\r\n// //       setRole(role);\r\n\r\n// //       if (role === \"HR\") {\r\n// //         navigate(\"/dashboard/hr\");\r\n// //       } else if (role === \"Employee\") {\r\n// //         navigate(\"/dashboard/employee\");\r\n// //       } else {\r\n// //         navigate(\"/login\");\r\n// //       }\r\n// //     } catch (err) {\r\n// //       setError(\"Invalid email or password\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Login</h2>\r\n// //       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n// //         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n\r\n// //   // ✅ Redirect if already logged in\r\n// //   useEffect(() => {\r\n// //     const token = localStorage.getItem(\"token\");\r\n// //     const role = localStorage.getItem(\"role\");\r\n\r\n// //     if (token && role) {\r\n// //       if (role === \"HR\") {\r\n// //         navigate(\"/dashboard/hr\");\r\n// //       } else if (role === \"Employee\") {\r\n// //         navigate(\"/dashboard/employee\");\r\n// //       }\r\n// //     }\r\n// //   }, [navigate]);\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n// //         email,\r\n// //         password,\r\n// //       });\r\n\r\n// //       console.log(\"Login Response:\", response.data); // ✅ Debug API response\r\n\r\n// //       const { token, role } = response.data;\r\n\r\n// //       if (!token || !role) {\r\n// //         throw new Error(\"Invalid response from server\");\r\n// //       }\r\n\r\n// //       localStorage.setItem(\"token\", token);\r\n// //       localStorage.setItem(\"role\", role);\r\n\r\n// //       if (role === \"HR\") {\r\n// //         navigate(\"/dashboard/hr\");\r\n// //       } else if (role === \"Employee\") {\r\n// //         navigate(\"/dashboard/employee\");\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n// //       setError(\"Invalid email or password\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error\">{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"Email\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Password\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n\r\n\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n// // import \"./Login.css\";\r\n\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n\r\n// //   // ✅ Redirect if already logged in\r\n// //   useEffect(() => {\r\n// //     const token = localStorage.getItem(\"token\");\r\n// //     const role = localStorage.getItem(\"role\");\r\n  \r\n// //     if (token && role) {\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     }\r\n// //   }, [navigate]);\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n// //         email,\r\n// //         password,\r\n// //       });\r\n\r\n// //       console.log(\"Login Response:\", response.data); // ✅ Debug API response\r\n\r\n// //       const { token, role } = response.data;\r\n// //       if (!token || !role) {\r\n// //         throw new Error(\"Invalid response from server\");\r\n// //       }\r\n\r\n// //       localStorage.setItem(\"token\", token);\r\n// //       localStorage.setItem(\"role\", role.toLowerCase()); // ✅ Normalize role case\r\n\r\n// //       // ✅ Redirect based on role\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n// //       setError(\"Invalid email or password\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error\">{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"Email\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Password\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n\r\n// // // import { useEffect, useCallback } from \"react\";\r\n// // import React, { useState, useEffect,useCallback, useRef } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n// //   const didRedirect = useRef(false); // ✅ Prevents infinite redirects\r\n\r\n// //   const navigateUser = useCallback(() => {\r\n// //     const token = localStorage.getItem(\"token\");\r\n// //     const role = localStorage.getItem(\"role\");\r\n\r\n// //     if (token && role) {\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     }\r\n// //   }, [navigate]);\r\n\r\n// //   useEffect(() => {\r\n// //     navigateUser();\r\n// //   }, [navigateUser]);\r\n\r\n// //   // useEffect(() => {\r\n// //   //   if (didRedirect.current) return; // ✅ Prevents multiple re-renders\r\n\r\n// //   //   const token = localStorage.getItem(\"token\");\r\n// //   //   const role = localStorage.getItem(\"role\");\r\n\r\n// //   //   if (token && role) {\r\n// //   //     didRedirect.current = true; // ✅ Avoids unnecessary re-renders\r\n// //   //     if (role.toLowerCase() === \"hr\") {\r\n// //   //       navigate(\"/dashboard/hr\", { replace: true });\r\n// //   //     } else if (role.toLowerCase() === \"employee\") {\r\n// //   //       navigate(\"/dashboard/employee\", { replace: true });\r\n// //   //     }\r\n// //   //   }\r\n// //   // }, []);\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n// //         email,\r\n// //         password,\r\n// //       });\r\n\r\n// //       console.log(\"Login Response:\", response.data);\r\n// //       const { token, role } = response.data;\r\n// //       if (!token || !role) {\r\n// //         throw new Error(\"Invalid response from server\");\r\n// //       }\r\n\r\n// //       localStorage.setItem(\"token\", token);\r\n// //       localStorage.setItem(\"role\", role.toLowerCase());\r\n\r\n// //       didRedirect.current = true; // ✅ Ensures only one redirect\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n// //       setError(\"Invalid email or password\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error\">{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"Email\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Password\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n\r\n\r\n// // import React, { useState, useEffect, useRef } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n// //   const didRedirect = useRef(false); // ✅ Prevents infinite redirects\r\n\r\n// //   useEffect(() => {\r\n// //     if (didRedirect.current) return; // ✅ Prevents multiple re-renders\r\n\r\n// //     const token = localStorage.getItem(\"token\");\r\n// //     const role = localStorage.getItem(\"role\");\r\n\r\n// //     if (token && role) {\r\n// //       didRedirect.current = true; // ✅ Avoids unnecessary re-renders\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     }\r\n// //   }, []); // ✅ Runs only once on mount\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n// //         email,\r\n// //         password,\r\n// //       });\r\n\r\n// //       console.log(\"Login Response:\", response.data);\r\n// //       const { token, role } = response.data;\r\n// //       if (!token || !role) {\r\n// //         throw new Error(\"Invalid response from server\");\r\n// //       }\r\n\r\n// //       localStorage.setItem(\"token\", token);\r\n// //       localStorage.setItem(\"role\", role.toLowerCase());\r\n\r\n// //       didRedirect.current = true; // ✅ Ensures only one redirect\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n// //       setError(\"Invalid email or password\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error\">{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"Email\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Password\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n\r\n\r\n// // import React, { useState, useEffect, useRef } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n\r\n// // const Login = () => {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n// //   const didRedirect = useRef(false);\r\n\r\n// //   useEffect(() => {\r\n// //     if (didRedirect.current) return;\r\n\r\n// //     const token = localStorage.getItem(\"token\");\r\n// //     const role = localStorage.getItem(\"role\");\r\n\r\n// //     if (token && role) {\r\n// //       didRedirect.current = true;\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n// //     }\r\n// //   }, [navigate]); // ✅ Fixes ESLint warning\r\n\r\n// //   const handleLogin = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n\r\n// //     try {\r\n// //       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n// //         email,\r\n// //         password,\r\n// //       });\r\n\r\n// //       const { token, role } = response.data;\r\n// //       if (!token || !role) {\r\n// //         throw new Error(\"Invalid response from server\");\r\n// //       }\r\n\r\n// //       localStorage.setItem(\"token\", token);\r\n// //       localStorage.setItem(\"role\", role.toLowerCase());\r\n\r\n// //       didRedirect.current = true;\r\n// //       if (role.toLowerCase() === \"hr\") {\r\n// //         navigate(\"/dashboard/hr\", { replace: true });\r\n// //       } else if (role.toLowerCase() === \"employee\") {\r\n// //         navigate(\"/dashboard/employee\", { replace: true });\r\n// //       }\r\n\r\n// //       // Optional: Reset form\r\n// //       setEmail(\"\");\r\n// //       setPassword(\"\");\r\n// //     } catch (error) {\r\n// //       console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n// //       setError(\"Invalid email or password\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"login-container\">\r\n// //       <h2>Login</h2>\r\n// //       {error && <p className=\"error\">{error}</p>}\r\n// //       <form onSubmit={handleLogin}>\r\n// //         <input\r\n// //           type=\"email\"\r\n// //           placeholder=\"Email\"\r\n// //           value={email}\r\n// //           onChange={(e) => setEmail(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"password\"\r\n// //           placeholder=\"Password\"\r\n// //           value={password}\r\n// //           onChange={(e) => setPassword(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Login;\r\n\r\n// import React, { useState, useEffect, useRef, useContext } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { AuthContext } from \"../../context/AuthContext\";\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const didRedirect = useRef(false);\r\n//   const { login, role } = useContext(AuthContext); // ✅ use auth context\r\n\r\n//   useEffect(() => {\r\n//     if (didRedirect.current || !role) return;\r\n\r\n//     didRedirect.current = true;\r\n//     if (role === \"hr\") {\r\n//       navigate(\"/dashboard/hr\", { replace: true });\r\n//     } else if (role === \"employee\") {\r\n//       navigate(\"/dashboard/employee\", { replace: true });\r\n//     }\r\n//   }, [navigate, role]);\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n//         email,\r\n//         password,\r\n//       });\r\n\r\n//       const { token, role } = response.data;\r\n//       if (!token || !role) {\r\n//         throw new Error(\"Invalid response from server\");\r\n//       }\r\n\r\n//       login(role.toLowerCase(), token); // ✅ updates context + localStorage\r\n\r\n//       didRedirect.current = true;\r\n//       if (role.toLowerCase() === \"hr\") {\r\n//         navigate(\"/dashboard/hr\", { replace: true });\r\n//       } else if (role.toLowerCase() === \"employee\") {\r\n//         navigate(\"/dashboard/employee\", { replace: true });\r\n//       }\r\n\r\n//       setEmail(\"\");\r\n//       setPassword(\"\");\r\n//     } catch (error) {\r\n//       console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n//       setError(\"Invalid email or password\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h2>Login</h2>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//       <form onSubmit={handleLogin}>\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:8000/api/login/', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const { token, role } = res.data;\r\n\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('role', role);\r\n\r\n      // Redirect based on role\r\n      if (role === 'hr') {\r\n        navigate('/dashboard/hr');\r\n      } else {\r\n        navigate('/dashboard/employee');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <h2>Login</h2>\r\n      <input value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAE;QAC/DT,KAAK;QACLE;MACF,CAAC,CAAC;MAEF,MAAM;QAAEQ,KAAK;QAAEC;MAAK,CAAC,GAAGH,GAAG,CAACI,IAAI;MAEhCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAAC;;MAElC;MACA,IAAIA,IAAI,KAAK,IAAI,EAAE;QACjBP,QAAQ,CAAC,eAAe,CAAC;MAC3B,CAAC,MAAM;QACLA,QAAQ,CAAC,qBAAqB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACErB,OAAA;IAAMsB,QAAQ,EAAEd,WAAY;IAAAe,QAAA,gBAC1BvB,OAAA;MAAAuB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd3B,OAAA;MAAO4B,KAAK,EAAEzB,KAAM;MAAC0B,QAAQ,EAAGpB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtF3B,OAAA;MAAOgC,IAAI,EAAC,UAAU;MAACJ,KAAK,EAAEvB,QAAS;MAACwB,QAAQ,EAAGpB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/G3B,OAAA;MAAQgC,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAACzB,EAAA,CAtCID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAAmC,EAAA,GAHxBhC,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}