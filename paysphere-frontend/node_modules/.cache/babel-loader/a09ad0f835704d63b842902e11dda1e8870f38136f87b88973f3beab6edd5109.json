{"ast":null,"code":"// import React from \"react\";\n// import { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"/api/login/\", { email, password });\n//       if (response.data.token) {\n//         localStorage.setItem(\"token\", response.data.token);\n//         navigate(\"/dashboard\");\n//       } else {\n//         setError(\"Invalid credentials\");\n//       }\n//     } catch (err) {\n//       setError(\"Invalid credentials or server error\");\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n// // export default Login;\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../../App.css\";\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", { email, password });\n//       localStorage.setItem(\"token\", response.data.token);\n//       localStorage.setItem(\"role\", response.data.role); // Store user role\n//       localStorage.setItem(\"userId\", response.data.id); // Store user ID\n//       // Redirect based on role\n//       if (response.data.role === \"HR\") {\n//         navigate(\"/dashboard\"); // HR Dashboard\n//       } else {\n//         navigate(\"/dashboard\"); // Employee Dashboard\n//       }\n//     } catch (error) {\n//       setError(error.response?.data?.error || \"Invalid credentials\");\n//     }\n//   };\n//   return (\n//     <div className=\"auth-container\">\n//       <h2>Login</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// const Login = ({ setToken, setRole }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const navigate = useNavigate();\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     try {\n//       const response = await axios.post(\"http://localhost:8000/api/login/\", { email, password });\n//       const { token, role } = response.data;\n//       localStorage.setItem(\"token\", token);\n//       localStorage.setItem(\"role\", role);  // Ensure role is saved properly\n//       setToken(token);\n//       setRole(role);\n//       if (role === \"HR\") {\n//         navigate(\"/dashboard/hr\");\n//       } else if (role === \"Employee\") {\n//         navigate(\"/dashboard/employee\");\n//       } else {\n//         navigate(\"/login\");\n//       }\n//     } catch (err) {\n//       setError(\"Invalid email or password\");\n//     }\n//   };\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\nimport React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();// ✅ Redirect if already logged in\nuseEffect(()=>{const token=localStorage.getItem(\"token\");const role=localStorage.getItem(\"role\");if(token&&role){if(role===\"HR\"){navigate(\"/dashboard/hr\");}else if(role===\"Employee\"){navigate(\"/dashboard/employee\");}}},[navigate]);const handleLogin=async e=>{e.preventDefault();setError(\"\");try{const response=await axios.post(\"http://127.0.0.1:8000/api/login/\",{email,password});console.log(\"Login Response:\",response.data);// ✅ Debug API response\nconst{token,role}=response.data;if(!token||!role){throw new Error(\"Invalid response from server\");}localStorage.setItem(\"token\",token);localStorage.setItem(\"role\",role);if(role===\"HR\"){navigate(\"/dashboard/hr\");}else if(role===\"Employee\"){navigate(\"/dashboard/employee\");}}catch(error){console.error(\"Login Error:\",error.response?error.response.data:error);setError(\"Invalid email or password\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","navigate","token","localStorage","getItem","role","handleLogin","e","preventDefault","response","post","console","log","data","Error","setItem","className","children","onSubmit","type","placeholder","value","onChange","target","required"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Auth/Login.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post(\"/api/login/\", { email, password });\r\n  \r\n//       if (response.data.token) {\r\n//         localStorage.setItem(\"token\", response.data.token);\r\n//         navigate(\"/dashboard\");\r\n//       } else {\r\n//         setError(\"Invalid credentials\");\r\n//       }\r\n//     } catch (err) {\r\n//       setError(\"Invalid credentials or server error\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div>\r\n//       <h2>Login</h2>\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//       <form onSubmit={handleLogin}>\r\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // export default Login;\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"../../App.css\";\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", { email, password });\r\n\r\n//       localStorage.setItem(\"token\", response.data.token);\r\n//       localStorage.setItem(\"role\", response.data.role); // Store user role\r\n//       localStorage.setItem(\"userId\", response.data.id); // Store user ID\r\n\r\n//       // Redirect based on role\r\n//       if (response.data.role === \"HR\") {\r\n//         navigate(\"/dashboard\"); // HR Dashboard\r\n//       } else {\r\n//         navigate(\"/dashboard\"); // Employee Dashboard\r\n//       }\r\n//     } catch (error) {\r\n//       setError(error.response?.data?.error || \"Invalid credentials\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <h2>Login</h2>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//       <form onSubmit={handleLogin}>\r\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Login = ({ setToken, setRole }) => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8000/api/login/\", { email, password });\r\n//       const { token, role } = response.data;\r\n\r\n//       localStorage.setItem(\"token\", token);\r\n//       localStorage.setItem(\"role\", role);  // Ensure role is saved properly\r\n//       setToken(token);\r\n//       setRole(role);\r\n\r\n//       if (role === \"HR\") {\r\n//         navigate(\"/dashboard/hr\");\r\n//       } else if (role === \"Employee\") {\r\n//         navigate(\"/dashboard/employee\");\r\n//       } else {\r\n//         navigate(\"/login\");\r\n//       }\r\n//     } catch (err) {\r\n//       setError(\"Invalid email or password\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Login</h2>\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//       <form onSubmit={handleLogin}>\r\n//         <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Redirect if already logged in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const role = localStorage.getItem(\"role\");\r\n\r\n    if (token && role) {\r\n      if (role === \"HR\") {\r\n        navigate(\"/dashboard/hr\");\r\n      } else if (role === \"Employee\") {\r\n        navigate(\"/dashboard/employee\");\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8000/api/login/\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Login Response:\", response.data); // ✅ Debug API response\r\n\r\n      const { token, role } = response.data;\r\n\r\n      if (!token || !role) {\r\n        throw new Error(\"Invalid response from server\");\r\n      }\r\n\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"role\", role);\r\n\r\n      if (role === \"HR\") {\r\n        navigate(\"/dashboard/hr\");\r\n      } else if (role === \"Employee\") {\r\n        navigate(\"/dashboard/employee\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login Error:\", error.response ? error.response.data : error);\r\n      setError(\"Invalid email or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}