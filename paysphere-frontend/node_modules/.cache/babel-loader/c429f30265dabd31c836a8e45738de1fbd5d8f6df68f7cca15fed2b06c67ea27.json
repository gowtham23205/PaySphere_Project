{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Profile\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./Profile.css\";\n\n// const HRProfile = () => {\n//     const [profile, setProfile] = useState({\n//         name: \"\",\n//         email: \"\",\n//         role: \"HR\",\n//     });\n//     const [message, setMessage] = useState(\"\");\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem(\"token\");\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/hr/profile/\", {\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n//                 setProfile(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching HR profile\", error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleChange = (e) => {\n//         setProfile({ ...profile, [e.target.name]: e.target.value });\n//     };\n\n//     const handleUpdate = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.patch(\"http://127.0.0.1:8000/api/hr/profile/update/\", profile, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setMessage(\"Profile updated successfully!\");\n//         } catch (error) {\n//             console.error(\"Error updating profile\", error);\n//             setMessage(\"Failed to update profile.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>HR Profile</h2>\n//             {message && <p>{message}</p>}\n//             <form onSubmit={handleUpdate}>\n//                 <label>Name:</label>\n//                 <input type=\"text\" name=\"name\" value={profile.name} onChange={handleChange} required />\n\n//                 <label>Email:</label>\n//                 <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} required disabled />\n\n//                 <button type=\"submit\">Update Profile</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default HRProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const HRProfile = () => {\n//   const [profileData, setProfileData] = useState(null);\n//   const [updatedProfile, setUpdatedProfile] = useState({});\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     if (!token) {\n//       setError('Please log in to view your profile.');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchProfileData = async () => {\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/hr/profile/', {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n\n//         if (response.status === 200) {\n//           setProfileData(response.data);\n//         } else {\n//           setError('Unexpected response from the server.');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching profile data:', err);\n//         setError('Failed to fetch profile data. Please try again later.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [token]);\n\n//   const handleEditClick = () => {\n//     setIsEditing(true);\n//     setUpdatedProfile(profileData);  // Pre-fill the form with current data\n//   };\n\n//   const handleCancelClick = () => {\n//     setIsEditing(false);\n//     setUpdatedProfile({});\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdatedProfile((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSaveClick = async () => {\n//     try {\n//       const response = await axios.patch(\n//         'http://127.0.0.1:8000/api/hr/profile/update/',\n//         updatedProfile,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         setProfileData(response.data); // Update the profile data with the response\n//         setIsEditing(false);\n//         setError('');\n//       } else {\n//         setError('Failed to update profile.');\n//       }\n//     } catch (err) {\n//       console.error('Error updating profile:', err);\n//       setError('Failed to update profile. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"profile-container\">\n//       <h2>HR Profile</h2>\n\n//       {loading && <p>Loading profile...</p>}\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {profileData && !loading && !error && !isEditing ? (\n//         <div className=\"profile-info\">\n//           <p><strong>Name:</strong> {profileData.name}</p>\n//           <p><strong>Email:</strong> {profileData.email}</p>\n//           <p><strong>Phone Number:</strong> {profileData.phone_number}</p>\n//           <p><strong>Role:</strong> {profileData.role}</p>\n//           <button onClick={handleEditClick}>Edit Profile</button>\n//         </div>\n//       ) : isEditing ? (\n//         <div className=\"profile-edit\">\n//           <div>\n//             <label htmlFor=\"name\">Name:</label>\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               name=\"name\"\n//               value={updatedProfile.name || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"email\">Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={updatedProfile.email || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"phone_number\">Phone Number:</label>\n//             <input\n//               type=\"text\"\n//               id=\"phone_number\"\n//               name=\"phone_number\"\n//               value={updatedProfile.phone_number || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"role\">Role:</label>\n//             <input\n//               type=\"text\"\n//               id=\"role\"\n//               name=\"role\"\n//               value={updatedProfile.role || ''}\n//               onChange={handleChange}\n//               disabled\n//             />\n//           </div>\n//           <button onClick={handleSaveClick}>Save</button>\n//           <button onClick={handleCancelClick}>Cancel</button>\n//         </div>\n//       ) : (\n//         <p>No profile data available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default HRProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import jwt_decode from 'jwt-decode';\n// import './Profile.css'; // Import the CSS file\n\n// const HRProfile = () => {\n//   const [profileData, setProfileData] = useState({\n//     first_name: '',\n//     last_name: '',\n//     email: '',\n//     phone_number: '',\n//   });\n\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState(null);\n\n//   const getUserIdFromToken = () => {\n//     const token = localStorage.getItem('token');\n//     if (!token) return null;\n//     const decoded = jwt_decode(token);\n//     return decoded.user_id;\n//   };\n\n//   const userId = getUserIdFromToken();\n\n//   useEffect(() => {\n//     if (!userId) {\n//       setError('User not authenticated');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchProfileData = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\n//           headers: {\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setProfileData(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Failed to load profile data');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [userId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.patch(\n//         `http://127.0.0.1:8000/api/update-user/${userId}/`,\n//         profileData,\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         }\n//       );\n//       setSuccessMessage('Profile updated successfully');\n//     } catch (err) {\n//       setError('Failed to update profile');\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setProfileData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"error\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Update HR Profile</h2>\n//       {successMessage && <div className=\"message\">{successMessage}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>First Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"first_name\"\n//             value={profileData.first_name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Last Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"last_name\"\n//             value={profileData.last_name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={profileData.email}\n//             onChange={handleChange}\n//             disabled\n//           />\n//         </div>\n//         <div>\n//           <label>Phone Number</label>\n//           <input\n//             type=\"text\"\n//             name=\"phone_number\"\n//             value={profileData.phone_number}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Update Profile</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default HRProfile;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userDetails, setUserDetails] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [message, setMessage] = useState('');\n  const userId = localStorage.getItem('user_id');\n  useEffect(() => {\n    if (userId) {\n      axios.get(`/api/user/${userId}/`).then(response => {\n        setUserDetails(response.data);\n      }).catch(error => {\n        console.error('Failed to fetch profile:', error);\n        setMessage('Failed to fetch profile.');\n      });\n    }\n  }, [userId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserDetails({\n      ...userDetails,\n      [name]: value\n    });\n  };\n  const handleUpdate = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      phone,\n      address\n    } = userDetails;\n    if (!name || !email || !phone || !address) {\n      setMessage('All fields are required.');\n      return;\n    }\n    axios.patch(`/api/update-user/${userId}/`, userDetails).then(() => {\n      setMessage('Profile updated successfully!');\n      setEditMode(false);\n    }).catch(() => {\n      setMessage('Failed to update profile.');\n    });\n  };\n  if (!userDetails) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your profile...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      className: \"profile-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: userDetails.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: userDetails.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: userDetails.phone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: userDetails.address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditMode(false),\n        className: \"cancel-btn\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 14\n        }, this), \" \", userDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 14\n        }, this), \" \", userDetails.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 14\n        }, this), \" \", userDetails.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 14\n        }, this), \" \", userDetails.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(true),\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"yFA5cMtJXtiQfp2Yp6qaTimBW7w=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","userDetails","setUserDetails","editMode","setEditMode","message","setMessage","userId","localStorage","getItem","get","then","response","data","catch","error","console","handleChange","e","name","value","target","handleUpdate","preventDefault","email","phone","address","patch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Profile/Profile.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./Profile.css\";\r\n\r\n// const HRProfile = () => {\r\n//     const [profile, setProfile] = useState({\r\n//         name: \"\",\r\n//         email: \"\",\r\n//         role: \"HR\",\r\n//     });\r\n//     const [message, setMessage] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         const fetchProfile = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem(\"token\");\r\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/hr/profile/\", {\r\n//                     headers: { Authorization: `Bearer ${token}` },\r\n//                 });\r\n//                 setProfile(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching HR profile\", error);\r\n//             }\r\n//         };\r\n//         fetchProfile();\r\n//     }, []);\r\n\r\n//     const handleChange = (e) => {\r\n//         setProfile({ ...profile, [e.target.name]: e.target.value });\r\n//     };\r\n\r\n//     const handleUpdate = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.patch(\"http://127.0.0.1:8000/api/hr/profile/update/\", profile, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setMessage(\"Profile updated successfully!\");\r\n//         } catch (error) {\r\n//             console.error(\"Error updating profile\", error);\r\n//             setMessage(\"Failed to update profile.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>HR Profile</h2>\r\n//             {message && <p>{message}</p>}\r\n//             <form onSubmit={handleUpdate}>\r\n//                 <label>Name:</label>\r\n//                 <input type=\"text\" name=\"name\" value={profile.name} onChange={handleChange} required />\r\n\r\n//                 <label>Email:</label>\r\n//                 <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} required disabled />\r\n\r\n//                 <button type=\"submit\">Update Profile</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const HRProfile = () => {\r\n//   const [profileData, setProfileData] = useState(null);\r\n//   const [updatedProfile, setUpdatedProfile] = useState({});\r\n//   const [error, setError] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     if (!token) {\r\n//       setError('Please log in to view your profile.');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchProfileData = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://127.0.0.1:8000/api/hr/profile/', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n\r\n//         if (response.status === 200) {\r\n//           setProfileData(response.data);\r\n//         } else {\r\n//           setError('Unexpected response from the server.');\r\n//         }\r\n//       } catch (err) {\r\n//         console.error('Error fetching profile data:', err);\r\n//         setError('Failed to fetch profile data. Please try again later.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfileData();\r\n//   }, [token]);\r\n\r\n//   const handleEditClick = () => {\r\n//     setIsEditing(true);\r\n//     setUpdatedProfile(profileData);  // Pre-fill the form with current data\r\n//   };\r\n\r\n//   const handleCancelClick = () => {\r\n//     setIsEditing(false);\r\n//     setUpdatedProfile({});\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setUpdatedProfile((prevState) => ({\r\n//       ...prevState,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSaveClick = async () => {\r\n//     try {\r\n//       const response = await axios.patch(\r\n//         'http://127.0.0.1:8000/api/hr/profile/update/',\r\n//         updatedProfile,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       if (response.status === 200) {\r\n//         setProfileData(response.data); // Update the profile data with the response\r\n//         setIsEditing(false);\r\n//         setError('');\r\n//       } else {\r\n//         setError('Failed to update profile.');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error('Error updating profile:', err);\r\n//       setError('Failed to update profile. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <h2>HR Profile</h2>\r\n\r\n//       {loading && <p>Loading profile...</p>}\r\n//       {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n//       {profileData && !loading && !error && !isEditing ? (\r\n//         <div className=\"profile-info\">\r\n//           <p><strong>Name:</strong> {profileData.name}</p>\r\n//           <p><strong>Email:</strong> {profileData.email}</p>\r\n//           <p><strong>Phone Number:</strong> {profileData.phone_number}</p>\r\n//           <p><strong>Role:</strong> {profileData.role}</p>\r\n//           <button onClick={handleEditClick}>Edit Profile</button>\r\n//         </div>\r\n//       ) : isEditing ? (\r\n//         <div className=\"profile-edit\">\r\n//           <div>\r\n//             <label htmlFor=\"name\">Name:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"name\"\r\n//               name=\"name\"\r\n//               value={updatedProfile.name || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"email\">Email:</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               value={updatedProfile.email || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"phone_number\">Phone Number:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"phone_number\"\r\n//               name=\"phone_number\"\r\n//               value={updatedProfile.phone_number || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"role\">Role:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"role\"\r\n//               name=\"role\"\r\n//               value={updatedProfile.role || ''}\r\n//               onChange={handleChange}\r\n//               disabled\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleSaveClick}>Save</button>\r\n//           <button onClick={handleCancelClick}>Cancel</button>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No profile data available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import jwt_decode from 'jwt-decode';\r\n// import './Profile.css'; // Import the CSS file\r\n\r\n// const HRProfile = () => {\r\n//   const [profileData, setProfileData] = useState({\r\n//     first_name: '',\r\n//     last_name: '',\r\n//     email: '',\r\n//     phone_number: '',\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n//   const getUserIdFromToken = () => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) return null;\r\n//     const decoded = jwt_decode(token);\r\n//     return decoded.user_id;\r\n//   };\r\n\r\n//   const userId = getUserIdFromToken();\r\n\r\n//   useEffect(() => {\r\n//     if (!userId) {\r\n//       setError('User not authenticated');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchProfileData = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//         setProfileData(response.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         setError('Failed to load profile data');\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfileData();\r\n//   }, [userId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.patch(\r\n//         `http://127.0.0.1:8000/api/update-user/${userId}/`,\r\n//         profileData,\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       setSuccessMessage('Profile updated successfully');\r\n//     } catch (err) {\r\n//       setError('Failed to update profile');\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setProfileData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"error\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>Update HR Profile</h2>\r\n//       {successMessage && <div className=\"message\">{successMessage}</div>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"first_name\"\r\n//             value={profileData.first_name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"last_name\"\r\n//             value={profileData.last_name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={profileData.email}\r\n//             onChange={handleChange}\r\n//             disabled\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Phone Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"phone_number\"\r\n//             value={profileData.phone_number}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Update Profile</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  const [userDetails, setUserDetails] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userId = localStorage.getItem('user_id');\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      axios.get(`/api/user/${userId}/`)\r\n        .then((response) => {\r\n          setUserDetails(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Failed to fetch profile:', error);\r\n          setMessage('Failed to fetch profile.');\r\n        });\r\n    }\r\n  }, [userId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserDetails({ ...userDetails, [name]: value });\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, address } = userDetails;\r\n\r\n    if (!name || !email || !phone || !address) {\r\n      setMessage('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    axios.patch(`/api/update-user/${userId}/`, userDetails)\r\n      .then(() => {\r\n        setMessage('Profile updated successfully!');\r\n        setEditMode(false);\r\n      })\r\n      .catch(() => {\r\n        setMessage('Failed to update profile.');\r\n      });\r\n  };\r\n\r\n  if (!userDetails) return <p>Loading your profile...</p>;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2>Your Profile</h2>\r\n\r\n      {editMode ? (\r\n        <form onSubmit={handleUpdate} className=\"profile-form\">\r\n          <label>Name:</label>\r\n          <input type=\"text\" name=\"name\" value={userDetails.name} onChange={handleChange} required />\r\n\r\n          <label>Email:</label>\r\n          <input type=\"email\" name=\"email\" value={userDetails.email} onChange={handleChange} required />\r\n\r\n          <label>Phone:</label>\r\n          <input type=\"text\" name=\"phone\" value={userDetails.phone} onChange={handleChange} required />\r\n\r\n          <label>Address:</label>\r\n          <input type=\"text\" name=\"address\" value={userDetails.address} onChange={handleChange} required />\r\n\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" onClick={() => setEditMode(false)} className=\"cancel-btn\">Cancel</button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"profile-view\">\r\n          <p><strong>Name:</strong> {userDetails.name}</p>\r\n          <p><strong>Email:</strong> {userDetails.email}</p>\r\n          <p><strong>Phone:</strong> {userDetails.phone}</p>\r\n          <p><strong>Address:</strong> {userDetails.address}</p>\r\n          <button onClick={() => setEditMode(true)}>Edit Profile</button>\r\n        </div>\r\n      )}\r\n\r\n      {message && <p className=\"message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}