{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Salary\\\\AddSalary.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { useParams } from 'react-router-dom';\n// // import axios from 'axios';\n\n// // const AddSalary = () => {\n// //   const { id } = useParams();\n// //   const [employee, setEmployee] = useState(null);\n// //   const [salaryData, setSalaryData] = useState({\n// //     basic_salary: '',\n// //     allowances: '',\n// //     deductions: '',\n// //   });\n\n// //   useEffect(() => {\n// //     const fetchEmployee = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const response = await axios.get(`http://localhost:8000/api/user/${id}/`, {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployee(response.data);\n// //       } catch (error) {\n// //         console.error('Error fetching employee:', error);\n// //       }\n// //     };\n\n// //     fetchEmployee();\n// //   }, [id]);\n\n// //   const handleChange = (e) => {\n// //     setSalaryData({ ...salaryData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const token = localStorage.getItem('token');\n// //     const payload = {\n// //       employee: id,\n// //       ...salaryData,\n// //     };\n\n// //     try {\n// //       await axios.post('http://localhost:8000/api/salary/create/', payload, {\n// //         headers: { Authorization: `Bearer ${token}` },\n// //       });\n// //       alert('Salary added successfully!');\n// //     } catch (error) {\n// //       alert('Error adding salary: ' + (error.response?.data?.error || 'Something went wrong'));\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Add Salary</h2>\n// //       {employee ? (\n// //         <div>\n// //           <h3>{employee.first_name} {employee.last_name}</h3>\n// //           <form onSubmit={handleSubmit}>\n// //             <label>Basic Salary:</label>\n// //             <input type=\"number\" name=\"basic_salary\" onChange={handleChange} required />\n\n// //             <label>Allowances:</label>\n// //             <input type=\"number\" name=\"allowances\" onChange={handleChange} required />\n\n// //             <label>Deductions:</label>\n// //             <input type=\"number\" name=\"deductions\" onChange={handleChange} required />\n\n// //             <button type=\"submit\">Submit Salary</button>\n// //           </form>\n// //         </div>\n// //       ) : (\n// //         <p>Loading employee data...</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default AddSalary;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// const AddSalary = () => {\n//   const { employeeId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [employee, setEmployee] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [allowances, setAllowances] = useState('');\n//   const [deductions, setDeductions] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       const token = localStorage.getItem('token');\n//       try {\n//         const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         setEmployee(res.data);\n//       } catch (err) {\n//         console.error('Failed to load employee details:', err);\n//         setError('Failed to load employee details.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [employeeId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//           allowances: parseFloat(allowances),\n//           deductions: parseFloat(deductions),\n//         },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n\n//       alert('Salary added successfully!');\n//       navigate('/employees'); // redirect after success\n//     } catch (err) {\n//       console.error('Error creating salary:', err.response?.data || err.message);\n//       setError(err.response?.data?.error || 'Failed to create salary.');\n//     }\n//   };\n\n//   if (loading) return <div>Loading employee info...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div style={{ padding: '20px', maxWidth: '500px', margin: 'auto' }}>\n//       <h2>Add Salary</h2>\n//       <p>\n//         <strong>Employee:</strong> {employee.first_name} {employee.last_name}\n//       </p>\n\n//       <form onSubmit={handleSubmit}>\n//         <div style={{ marginBottom: '10px' }}>\n//           <label>Basic Salary: </label>\n//           <input\n//             type=\"number\"\n//             value={basicSalary}\n//             onChange={(e) => setBasicSalary(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div style={{ marginBottom: '10px' }}>\n//           <label>Allowances: </label>\n//           <input\n//             type=\"number\"\n//             value={allowances}\n//             onChange={(e) => setAllowances(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div style={{ marginBottom: '10px' }}>\n//           <label>Deductions: </label>\n//           <input\n//             type=\"number\"\n//             value={deductions}\n//             onChange={(e) => setDeductions(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddSalary;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './AddSalary.css'; // CSS file\n\n// const AddSalary = () => {\n//   const { id: employeeId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [employee, setEmployee] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [allowances, setAllowances] = useState('');\n//   const [deductions, setDeductions] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       const token = localStorage.getItem('token');\n//       try {\n//         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployee(res.data);\n//       } catch (err) {\n//         console.error('Error fetching employee:', err);\n//         setError('Failed to load employee details.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [employeeId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//           allowances: parseFloat(allowances),\n//           deductions: parseFloat(deductions),\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n\n//       alert('Salary added successfully!');\n//       navigate('/employees');\n//     } catch (err) {\n//       console.error('Salary creation failed:', err.response?.data || err.message);\n//       setError(err.response?.data?.error || 'Failed to create salary.');\n//     }\n//   };\n\n//   if (loading) return <p>Loading employee info...</p>;\n//   if (error && !employee) return <p className=\"error-message\">{error}</p>;\n\n//   return (\n//     <div className=\"add-salary-container\">\n//       <h2>Add Salary</h2>\n//       <p className=\"employee-name\">\n//         Employee: {employee?.first_name} {employee?.last_name}\n//       </p>\n\n//       <form onSubmit={handleSubmit} className=\"salary-form\">\n//         <label>Basic Salary:</label>\n//         <input\n//           type=\"number\"\n//           value={basicSalary}\n//           onChange={(e) => setBasicSalary(e.target.value)}\n//           required\n//         />\n\n//         <label>Allowances:</label>\n//         <input\n//           type=\"number\"\n//           value={allowances}\n//           onChange={(e) => setAllowances(e.target.value)}\n//           required\n//         />\n\n//         <label>Deductions:</label>\n//         <input\n//           type=\"number\"\n//           value={deductions}\n//           onChange={(e) => setDeductions(e.target.value)}\n//           required\n//         />\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddSalary;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams} from 'react-router-dom';\n// import axios from 'axios';\n\n// const AddSalary = () => {\n//   const { id: employeeId } = useParams();\n// //   const navigate = useNavigate();\n\n//   const [employee, setEmployee] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [allowances, setAllowances] = useState('');\n//   const [deductions, setDeductions] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       const token = localStorage.getItem('token');\n//       try {\n//         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployee(res.data);\n//       } catch (err) {\n//         console.error('Error fetching employee:', err.response?.data || err.message);\n//         setError('Failed to load employee details.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [employeeId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setSuccess('');\n\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//           allowances: parseFloat(allowances),\n//           deductions: parseFloat(deductions),\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n\n//       setSuccess('Salary added successfully!');\n//       setBasicSalary('');\n//       setAllowances('');\n//       setDeductions('');\n//     } catch (err) {\n//       console.error('Salary creation failed:', err.response?.data || err.message);\n//       setError(err.response?.data?.error || 'Failed to create salary.');\n//     }\n//   };\n\n//   if (loading) return <p>Loading employee info...</p>;\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>Add Salary</h2>\n\n//       {success && <p style={styles.success}>{success}</p>}\n//       {error && <p style={styles.error}>{error}</p>}\n\n//       <p>\n//         <strong>Employee:</strong> {employee?.first_name} {employee?.last_name}\n//       </p>\n\n//       <form onSubmit={handleSubmit}>\n//         <div style={styles.inputGroup}>\n//           <label>Basic Salary:</label>\n//           <input\n//             type=\"number\"\n//             value={basicSalary}\n//             onChange={(e) => setBasicSalary(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div style={styles.inputGroup}>\n//           <label>Allowances:</label>\n//           <input\n//             type=\"number\"\n//             value={allowances}\n//             onChange={(e) => setAllowances(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div style={styles.inputGroup}>\n//           <label>Deductions:</label>\n//           <input\n//             type=\"number\"\n//             value={deductions}\n//             onChange={(e) => setDeductions(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <button type=\"submit\" style={styles.button}>Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     padding: '20px',\n//     maxWidth: '500px',\n//     margin: 'auto',\n//     border: '1px solid #ccc',\n//     borderRadius: '8px',\n//     boxShadow: '0 0 10px rgba(0,0,0,0.1)',\n//     backgroundColor: '#f9f9f9',\n//   },\n//   inputGroup: {\n//     marginBottom: '12px',\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   button: {\n//     padding: '10px 20px',\n//     backgroundColor: '#4CAF50',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//   },\n//   error: {\n//     color: 'red',\n//     marginBottom: '10px',\n//     fontWeight: 'bold',\n//   },\n//   success: {\n//     color: 'green',\n//     marginBottom: '10px',\n//     fontWeight: 'bold',\n//   },\n// };\n\n// export default AddSalary;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Tabs, Tab, Typography, TextField, Button, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomTabPanel({\n  children,\n  value,\n  index,\n  ...other\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n}\n_c = CustomTabPanel;\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\nconst AddSalary = () => {\n  _s();\n  const {\n    id: employeeId\n  } = useParams();\n  const [employee, setEmployee] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [basicSalary, setBasicSalary] = useState('');\n  const [allowances, setAllowances] = useState('');\n  const [deductions, setDeductions] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    const fetchEmployee = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEmployee(res.data);\n      } catch (err) {\n        console.error('Error fetching employee:', err);\n        setError('Failed to load employee details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployee();\n  }, [employeeId]);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    try {\n      await axios.post('http://localhost:8000/api/salary/create/', {\n        employee: employeeId,\n        basic_salary: parseFloat(basicSalary),\n        allowances: parseFloat(allowances),\n        deductions: parseFloat(deductions)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess('Salary added successfully!');\n      setError('');\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('Salary creation failed:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to create salary.');\n      setSuccess('');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading employee info...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 557,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: [\"Add Salary for: \", employee === null || employee === void 0 ? void 0 : employee.first_name, \" \", employee === null || employee === void 0 ? void 0 : employee.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider',\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"salary tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Add Salary\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Add Allowances\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Add Deductions\",\n          ...a11yProps(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CustomTabPanel, {\n        value: value,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Basic Salary\",\n          type: \"number\",\n          value: basicSalary,\n          onChange: e => setBasicSalary(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomTabPanel, {\n        value: value,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Allowances\",\n          type: \"number\",\n          value: allowances,\n          onChange: e => setAllowances(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomTabPanel, {\n        value: value,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Deductions\",\n          type: \"number\",\n          value: deductions,\n          onChange: e => setDeductions(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 560,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSalary, \"cfohlfk1HC3uhwZA52y9pc2ENH0=\", false, function () {\n  return [useParams];\n});\n_c2 = AddSalary;\nexport default AddSalary;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTabPanel\");\n$RefreshReg$(_c2, \"AddSalary\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Box","Tabs","Tab","Typography","TextField","Button","Alert","jsxDEV","_jsxDEV","CustomTabPanel","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","a11yProps","AddSalary","_s","employeeId","employee","setEmployee","loading","setLoading","basicSalary","setBasicSalary","allowances","setAllowances","deductions","setDeductions","error","setError","success","setSuccess","setValue","fetchEmployee","token","localStorage","getItem","res","get","headers","Authorization","data","err","console","handleChange","event","newValue","handleSubmit","e","preventDefault","post","basic_salary","parseFloat","_err$response","_err$response2","_err$response2$data","response","message","width","maxWidth","mx","mt","variant","gutterBottom","first_name","last_name","severity","borderBottom","borderColor","onChange","label","onSubmit","fullWidth","type","target","required","color","_c2","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Salary/AddSalary.jsx"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import { useParams } from 'react-router-dom';\r\n// // import axios from 'axios';\r\n\r\n// // const AddSalary = () => {\r\n// //   const { id } = useParams();\r\n// //   const [employee, setEmployee] = useState(null);\r\n// //   const [salaryData, setSalaryData] = useState({\r\n// //     basic_salary: '',\r\n// //     allowances: '',\r\n// //     deductions: '',\r\n// //   });\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployee = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const response = await axios.get(`http://localhost:8000/api/user/${id}/`, {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployee(response.data);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching employee:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployee();\r\n// //   }, [id]);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setSalaryData({ ...salaryData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const token = localStorage.getItem('token');\r\n// //     const payload = {\r\n// //       employee: id,\r\n// //       ...salaryData,\r\n// //     };\r\n\r\n// //     try {\r\n// //       await axios.post('http://localhost:8000/api/salary/create/', payload, {\r\n// //         headers: { Authorization: `Bearer ${token}` },\r\n// //       });\r\n// //       alert('Salary added successfully!');\r\n// //     } catch (error) {\r\n// //       alert('Error adding salary: ' + (error.response?.data?.error || 'Something went wrong'));\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Add Salary</h2>\r\n// //       {employee ? (\r\n// //         <div>\r\n// //           <h3>{employee.first_name} {employee.last_name}</h3>\r\n// //           <form onSubmit={handleSubmit}>\r\n// //             <label>Basic Salary:</label>\r\n// //             <input type=\"number\" name=\"basic_salary\" onChange={handleChange} required />\r\n\r\n// //             <label>Allowances:</label>\r\n// //             <input type=\"number\" name=\"allowances\" onChange={handleChange} required />\r\n\r\n// //             <label>Deductions:</label>\r\n// //             <input type=\"number\" name=\"deductions\" onChange={handleChange} required />\r\n\r\n// //             <button type=\"submit\">Submit Salary</button>\r\n// //           </form>\r\n// //         </div>\r\n// //       ) : (\r\n// //         <p>Loading employee data...</p>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AddSalary;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const AddSalary = () => {\r\n//   const { employeeId } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [employee, setEmployee] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [allowances, setAllowances] = useState('');\r\n//   const [deductions, setDeductions] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchEmployee = async () => {\r\n//       const token = localStorage.getItem('token');\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n//         setEmployee(res.data);\r\n//       } catch (err) {\r\n//         console.error('Failed to load employee details:', err);\r\n//         setError('Failed to load employee details.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchEmployee();\r\n//   }, [employeeId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//           allowances: parseFloat(allowances),\r\n//           deductions: parseFloat(deductions),\r\n//         },\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       alert('Salary added successfully!');\r\n//       navigate('/employees'); // redirect after success\r\n//     } catch (err) {\r\n//       console.error('Error creating salary:', err.response?.data || err.message);\r\n//       setError(err.response?.data?.error || 'Failed to create salary.');\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <div>Loading employee info...</div>;\r\n//   if (error) return <div>{error}</div>;\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxWidth: '500px', margin: 'auto' }}>\r\n//       <h2>Add Salary</h2>\r\n//       <p>\r\n//         <strong>Employee:</strong> {employee.first_name} {employee.last_name}\r\n//       </p>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div style={{ marginBottom: '10px' }}>\r\n//           <label>Basic Salary: </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={basicSalary}\r\n//             onChange={(e) => setBasicSalary(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={{ marginBottom: '10px' }}>\r\n//           <label>Allowances: </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={allowances}\r\n//             onChange={(e) => setAllowances(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={{ marginBottom: '10px' }}>\r\n//           <label>Deductions: </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={deductions}\r\n//             onChange={(e) => setDeductions(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './AddSalary.css'; // CSS file\r\n\r\n// const AddSalary = () => {\r\n//   const { id: employeeId } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [employee, setEmployee] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [allowances, setAllowances] = useState('');\r\n//   const [deductions, setDeductions] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchEmployee = async () => {\r\n//       const token = localStorage.getItem('token');\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setEmployee(res.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching employee:', err);\r\n//         setError('Failed to load employee details.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchEmployee();\r\n//   }, [employeeId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//           allowances: parseFloat(allowances),\r\n//           deductions: parseFloat(deductions),\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n\r\n//       alert('Salary added successfully!');\r\n//       navigate('/employees');\r\n//     } catch (err) {\r\n//       console.error('Salary creation failed:', err.response?.data || err.message);\r\n//       setError(err.response?.data?.error || 'Failed to create salary.');\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p>Loading employee info...</p>;\r\n//   if (error && !employee) return <p className=\"error-message\">{error}</p>;\r\n\r\n//   return (\r\n//     <div className=\"add-salary-container\">\r\n//       <h2>Add Salary</h2>\r\n//       <p className=\"employee-name\">\r\n//         Employee: {employee?.first_name} {employee?.last_name}\r\n//       </p>\r\n\r\n//       <form onSubmit={handleSubmit} className=\"salary-form\">\r\n//         <label>Basic Salary:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={basicSalary}\r\n//           onChange={(e) => setBasicSalary(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <label>Allowances:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={allowances}\r\n//           onChange={(e) => setAllowances(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <label>Deductions:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={deductions}\r\n//           onChange={(e) => setDeductions(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams} from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const AddSalary = () => {\r\n//   const { id: employeeId } = useParams();\r\n// //   const navigate = useNavigate();\r\n\r\n//   const [employee, setEmployee] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [allowances, setAllowances] = useState('');\r\n//   const [deductions, setDeductions] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [success, setSuccess] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchEmployee = async () => {\r\n//       const token = localStorage.getItem('token');\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setEmployee(res.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching employee:', err.response?.data || err.message);\r\n//         setError('Failed to load employee details.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchEmployee();\r\n//   }, [employeeId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     setSuccess('');\r\n\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//           allowances: parseFloat(allowances),\r\n//           deductions: parseFloat(deductions),\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n\r\n//       setSuccess('Salary added successfully!');\r\n//       setBasicSalary('');\r\n//       setAllowances('');\r\n//       setDeductions('');\r\n//     } catch (err) {\r\n//       console.error('Salary creation failed:', err.response?.data || err.message);\r\n//       setError(err.response?.data?.error || 'Failed to create salary.');\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p>Loading employee info...</p>;\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>Add Salary</h2>\r\n\r\n//       {success && <p style={styles.success}>{success}</p>}\r\n//       {error && <p style={styles.error}>{error}</p>}\r\n\r\n//       <p>\r\n//         <strong>Employee:</strong> {employee?.first_name} {employee?.last_name}\r\n//       </p>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div style={styles.inputGroup}>\r\n//           <label>Basic Salary:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={basicSalary}\r\n//             onChange={(e) => setBasicSalary(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={styles.inputGroup}>\r\n//           <label>Allowances:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={allowances}\r\n//             onChange={(e) => setAllowances(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={styles.inputGroup}>\r\n//           <label>Deductions:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={deductions}\r\n//             onChange={(e) => setDeductions(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" style={styles.button}>Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     padding: '20px',\r\n//     maxWidth: '500px',\r\n//     margin: 'auto',\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '8px',\r\n//     boxShadow: '0 0 10px rgba(0,0,0,0.1)',\r\n//     backgroundColor: '#f9f9f9',\r\n//   },\r\n//   inputGroup: {\r\n//     marginBottom: '12px',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//   },\r\n//   button: {\r\n//     padding: '10px 20px',\r\n//     backgroundColor: '#4CAF50',\r\n//     color: 'white',\r\n//     border: 'none',\r\n//     borderRadius: '6px',\r\n//     cursor: 'pointer',\r\n//   },\r\n//   error: {\r\n//     color: 'red',\r\n//     marginBottom: '10px',\r\n//     fontWeight: 'bold',\r\n//   },\r\n//   success: {\r\n//     color: 'green',\r\n//     marginBottom: '10px',\r\n//     fontWeight: 'bold',\r\n//   },\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Alert,\r\n} from '@mui/material';\r\n\r\nfunction CustomTabPanel({ children, value, index, ...other }) {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst AddSalary = () => {\r\n  const { id: employeeId } = useParams();\r\n  const [employee, setEmployee] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [basicSalary, setBasicSalary] = useState('');\r\n  const [allowances, setAllowances] = useState('');\r\n  const [deductions, setDeductions] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployee = async () => {\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setEmployee(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching employee:', err);\r\n        setError('Failed to load employee details.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmployee();\r\n  }, [employeeId]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n\r\n    try {\r\n      await axios.post(\r\n        'http://localhost:8000/api/salary/create/',\r\n        {\r\n          employee: employeeId,\r\n          basic_salary: parseFloat(basicSalary),\r\n          allowances: parseFloat(allowances),\r\n          deductions: parseFloat(deductions),\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      setSuccess('Salary added successfully!');\r\n      setError('');\r\n    } catch (err) {\r\n      console.error('Salary creation failed:', err.response?.data || err.message);\r\n      setError(err.response?.data?.error || 'Failed to create salary.');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading employee info...</p>;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', maxWidth: 600, mx: 'auto', mt: 4 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Add Salary for: {employee?.first_name} {employee?.last_name}\r\n      </Typography>\r\n\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      {success && <Alert severity=\"success\">{success}</Alert>}\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mt: 2 }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"salary tabs\">\r\n          <Tab label=\"Add Salary\" {...a11yProps(0)} />\r\n          <Tab label=\"Add Allowances\" {...a11yProps(1)} />\r\n          <Tab label=\"Add Deductions\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <CustomTabPanel value={value} index={0}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Basic Salary\"\r\n            type=\"number\"\r\n            value={basicSalary}\r\n            onChange={(e) => setBasicSalary(e.target.value)}\r\n            required\r\n          />\r\n        </CustomTabPanel>\r\n\r\n        <CustomTabPanel value={value} index={1}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Allowances\"\r\n            type=\"number\"\r\n            value={allowances}\r\n            onChange={(e) => setAllowances(e.target.value)}\r\n            required\r\n          />\r\n        </CustomTabPanel>\r\n\r\n        <CustomTabPanel value={value} index={2}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Deductions\"\r\n            type=\"number\"\r\n            value={deductions}\r\n            onChange={(e) => setDeductions(e.target.value)}\r\n            required\r\n          />\r\n        </CustomTabPanel>\r\n\r\n        <Box sx={{ mt: 2 }}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\r\n            Submit\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddSalary;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,IAAI,EACJC,GAAG,EACHC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,KAAK,QACA,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,EAAE;EAC5D,oBACEL,OAAA;IACEM,IAAI,EAAC,UAAU;IACfC,MAAM,EAAEJ,KAAK,KAAKC,KAAM;IACxBI,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}