{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Profile\\\\HRProfile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./Profile.css\";\n\n// const HRProfile = () => {\n//     const [profile, setProfile] = useState({\n//         name: \"\",\n//         email: \"\",\n//         role: \"HR\",\n//     });\n//     const [message, setMessage] = useState(\"\");\n\n//     useEffect(() => {\n//         const fetchProfile = async () => {\n//             try {\n//                 const token = localStorage.getItem(\"token\");\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/hr/profile/\", {\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n//                 setProfile(response.data);\n//             } catch (error) {\n//                 console.error(\"Error fetching HR profile\", error);\n//             }\n//         };\n//         fetchProfile();\n//     }, []);\n\n//     const handleChange = (e) => {\n//         setProfile({ ...profile, [e.target.name]: e.target.value });\n//     };\n\n//     const handleUpdate = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.patch(\"http://127.0.0.1:8000/api/hr/profile/update/\", profile, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setMessage(\"Profile updated successfully!\");\n//         } catch (error) {\n//             console.error(\"Error updating profile\", error);\n//             setMessage(\"Failed to update profile.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>HR Profile</h2>\n//             {message && <p>{message}</p>}\n//             <form onSubmit={handleUpdate}>\n//                 <label>Name:</label>\n//                 <input type=\"text\" name=\"name\" value={profile.name} onChange={handleChange} required />\n\n//                 <label>Email:</label>\n//                 <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} required disabled />\n\n//                 <button type=\"submit\">Update Profile</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default HRProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const HRProfile = () => {\n//   const [profileData, setProfileData] = useState(null);\n//   const [updatedProfile, setUpdatedProfile] = useState({});\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     if (!token) {\n//       setError('Please log in to view your profile.');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchProfileData = async () => {\n//       try {\n//         const response = await axios.get('http://127.0.0.1:8000/api/hr/profile/', {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n\n//         if (response.status === 200) {\n//           setProfileData(response.data);\n//         } else {\n//           setError('Unexpected response from the server.');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching profile data:', err);\n//         setError('Failed to fetch profile data. Please try again later.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [token]);\n\n//   const handleEditClick = () => {\n//     setIsEditing(true);\n//     setUpdatedProfile(profileData);  // Pre-fill the form with current data\n//   };\n\n//   const handleCancelClick = () => {\n//     setIsEditing(false);\n//     setUpdatedProfile({});\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setUpdatedProfile((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSaveClick = async () => {\n//     try {\n//       const response = await axios.patch(\n//         'http://127.0.0.1:8000/api/hr/profile/update/',\n//         updatedProfile,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         setProfileData(response.data); // Update the profile data with the response\n//         setIsEditing(false);\n//         setError('');\n//       } else {\n//         setError('Failed to update profile.');\n//       }\n//     } catch (err) {\n//       console.error('Error updating profile:', err);\n//       setError('Failed to update profile. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"profile-container\">\n//       <h2>HR Profile</h2>\n\n//       {loading && <p>Loading profile...</p>}\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {profileData && !loading && !error && !isEditing ? (\n//         <div className=\"profile-info\">\n//           <p><strong>Name:</strong> {profileData.name}</p>\n//           <p><strong>Email:</strong> {profileData.email}</p>\n//           <p><strong>Phone Number:</strong> {profileData.phone_number}</p>\n//           <p><strong>Role:</strong> {profileData.role}</p>\n//           <button onClick={handleEditClick}>Edit Profile</button>\n//         </div>\n//       ) : isEditing ? (\n//         <div className=\"profile-edit\">\n//           <div>\n//             <label htmlFor=\"name\">Name:</label>\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               name=\"name\"\n//               value={updatedProfile.name || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"email\">Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={updatedProfile.email || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"phone_number\">Phone Number:</label>\n//             <input\n//               type=\"text\"\n//               id=\"phone_number\"\n//               name=\"phone_number\"\n//               value={updatedProfile.phone_number || ''}\n//               onChange={handleChange}\n//             />\n//           </div>\n//           <div>\n//             <label htmlFor=\"role\">Role:</label>\n//             <input\n//               type=\"text\"\n//               id=\"role\"\n//               name=\"role\"\n//               value={updatedProfile.role || ''}\n//               onChange={handleChange}\n//               disabled\n//             />\n//           </div>\n//           <button onClick={handleSaveClick}>Save</button>\n//           <button onClick={handleCancelClick}>Cancel</button>\n//         </div>\n//       ) : (\n//         <p>No profile data available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default HRProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import jwt_decode from 'jwt-decode';\n// import './Profile.css'; // Import the CSS file\n\n// const HRProfile = () => {\n//   const [profileData, setProfileData] = useState({\n//     first_name: '',\n//     last_name: '',\n//     email: '',\n//     phone_number: '',\n//   });\n\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [successMessage, setSuccessMessage] = useState(null);\n\n//   const getUserIdFromToken = () => {\n//     const token = localStorage.getItem('token');\n//     if (!token) return null;\n//     const decoded = jwt_decode(token);\n//     return decoded.user_id;\n//   };\n\n//   const userId = getUserIdFromToken();\n\n//   useEffect(() => {\n//     if (!userId) {\n//       setError('User not authenticated');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchProfileData = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\n//           headers: {\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setProfileData(response.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setError('Failed to load profile data');\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProfileData();\n//   }, [userId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.patch(\n//         `http://127.0.0.1:8000/api/update-user/${userId}/`,\n//         profileData,\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         }\n//       );\n//       setSuccessMessage('Profile updated successfully');\n//     } catch (err) {\n//       setError('Failed to update profile');\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setProfileData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div className=\"error\">{error}</div>;\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Update HR Profile</h2>\n//       {successMessage && <div className=\"message\">{successMessage}</div>}\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>First Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"first_name\"\n//             value={profileData.first_name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Last Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"last_name\"\n//             value={profileData.last_name}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={profileData.email}\n//             onChange={handleChange}\n//             disabled\n//           />\n//         </div>\n//         <div>\n//           <label>Phone Number</label>\n//           <input\n//             type=\"text\"\n//             name=\"phone_number\"\n//             value={profileData.phone_number}\n//             onChange={handleChange}\n//           />\n//         </div>\n//         <button type=\"submit\">Update Profile</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default HRProfile;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './Profile.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HRProfile = () => {\n  _s();\n  const [profileData, setProfileData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone_number: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  // Function to get user ID from JWT token\n  const getUserIdFromToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return null;\n    const decoded = jwtDecode(token);\n    return decoded.user_id;\n  };\n  const userId = getUserIdFromToken();\n\n  // Fetch profile data once the component mounts\n  useEffect(() => {\n    if (!userId) {\n      setError('User not authenticated');\n      setLoading(false);\n      return;\n    }\n    const fetchProfileData = async () => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setProfileData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load profile data');\n        setLoading(false);\n        console.error(err); // For debugging purposes\n      }\n    };\n    fetchProfileData();\n  }, [userId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.patch(`http://127.0.0.1:8000/api/update-user/${userId}/`, profileData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setSuccessMessage('Profile updated successfully');\n    } catch (err) {\n      setError('Failed to update profile');\n      console.error(err); // For debugging purposes\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update HR Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"first_name\",\n          value: profileData.first_name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"last_name\",\n          value: profileData.last_name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: profileData.email,\n          onChange: handleChange,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone_number\",\n          value: profileData.phone_number,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s(HRProfile, \"0qfP3n9K1FyLV8rFX9TLdn9q75Y=\");\n_c = HRProfile;\nexport default HRProfile;\nvar _c;\n$RefreshReg$(_c, \"HRProfile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","HRProfile","_s","profileData","setProfileData","first_name","last_name","email","phone_number","loading","setLoading","error","setError","successMessage","setSuccessMessage","getUserIdFromToken","token","localStorage","getItem","decoded","user_id","userId","fetchProfileData","response","get","headers","data","err","console","handleSubmit","e","preventDefault","patch","handleChange","name","value","target","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Profile/HRProfile.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./Profile.css\";\r\n\r\n// const HRProfile = () => {\r\n//     const [profile, setProfile] = useState({\r\n//         name: \"\",\r\n//         email: \"\",\r\n//         role: \"HR\",\r\n//     });\r\n//     const [message, setMessage] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         const fetchProfile = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem(\"token\");\r\n//                 const response = await axios.get(\"http://127.0.0.1:8000/api/hr/profile/\", {\r\n//                     headers: { Authorization: `Bearer ${token}` },\r\n//                 });\r\n//                 setProfile(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"Error fetching HR profile\", error);\r\n//             }\r\n//         };\r\n//         fetchProfile();\r\n//     }, []);\r\n\r\n//     const handleChange = (e) => {\r\n//         setProfile({ ...profile, [e.target.name]: e.target.value });\r\n//     };\r\n\r\n//     const handleUpdate = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.patch(\"http://127.0.0.1:8000/api/hr/profile/update/\", profile, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setMessage(\"Profile updated successfully!\");\r\n//         } catch (error) {\r\n//             console.error(\"Error updating profile\", error);\r\n//             setMessage(\"Failed to update profile.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>HR Profile</h2>\r\n//             {message && <p>{message}</p>}\r\n//             <form onSubmit={handleUpdate}>\r\n//                 <label>Name:</label>\r\n//                 <input type=\"text\" name=\"name\" value={profile.name} onChange={handleChange} required />\r\n\r\n//                 <label>Email:</label>\r\n//                 <input type=\"email\" name=\"email\" value={profile.email} onChange={handleChange} required disabled />\r\n\r\n//                 <button type=\"submit\">Update Profile</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const HRProfile = () => {\r\n//   const [profileData, setProfileData] = useState(null);\r\n//   const [updatedProfile, setUpdatedProfile] = useState({});\r\n//   const [error, setError] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     if (!token) {\r\n//       setError('Please log in to view your profile.');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchProfileData = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://127.0.0.1:8000/api/hr/profile/', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n\r\n//         if (response.status === 200) {\r\n//           setProfileData(response.data);\r\n//         } else {\r\n//           setError('Unexpected response from the server.');\r\n//         }\r\n//       } catch (err) {\r\n//         console.error('Error fetching profile data:', err);\r\n//         setError('Failed to fetch profile data. Please try again later.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfileData();\r\n//   }, [token]);\r\n\r\n//   const handleEditClick = () => {\r\n//     setIsEditing(true);\r\n//     setUpdatedProfile(profileData);  // Pre-fill the form with current data\r\n//   };\r\n\r\n//   const handleCancelClick = () => {\r\n//     setIsEditing(false);\r\n//     setUpdatedProfile({});\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setUpdatedProfile((prevState) => ({\r\n//       ...prevState,\r\n//       [name]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSaveClick = async () => {\r\n//     try {\r\n//       const response = await axios.patch(\r\n//         'http://127.0.0.1:8000/api/hr/profile/update/',\r\n//         updatedProfile,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       if (response.status === 200) {\r\n//         setProfileData(response.data); // Update the profile data with the response\r\n//         setIsEditing(false);\r\n//         setError('');\r\n//       } else {\r\n//         setError('Failed to update profile.');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error('Error updating profile:', err);\r\n//       setError('Failed to update profile. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"profile-container\">\r\n//       <h2>HR Profile</h2>\r\n\r\n//       {loading && <p>Loading profile...</p>}\r\n//       {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n//       {profileData && !loading && !error && !isEditing ? (\r\n//         <div className=\"profile-info\">\r\n//           <p><strong>Name:</strong> {profileData.name}</p>\r\n//           <p><strong>Email:</strong> {profileData.email}</p>\r\n//           <p><strong>Phone Number:</strong> {profileData.phone_number}</p>\r\n//           <p><strong>Role:</strong> {profileData.role}</p>\r\n//           <button onClick={handleEditClick}>Edit Profile</button>\r\n//         </div>\r\n//       ) : isEditing ? (\r\n//         <div className=\"profile-edit\">\r\n//           <div>\r\n//             <label htmlFor=\"name\">Name:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"name\"\r\n//               name=\"name\"\r\n//               value={updatedProfile.name || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"email\">Email:</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               value={updatedProfile.email || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"phone_number\">Phone Number:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"phone_number\"\r\n//               name=\"phone_number\"\r\n//               value={updatedProfile.phone_number || ''}\r\n//               onChange={handleChange}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label htmlFor=\"role\">Role:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"role\"\r\n//               name=\"role\"\r\n//               value={updatedProfile.role || ''}\r\n//               onChange={handleChange}\r\n//               disabled\r\n//             />\r\n//           </div>\r\n//           <button onClick={handleSaveClick}>Save</button>\r\n//           <button onClick={handleCancelClick}>Cancel</button>\r\n//         </div>\r\n//       ) : (\r\n//         <p>No profile data available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import jwt_decode from 'jwt-decode';\r\n// import './Profile.css'; // Import the CSS file\r\n\r\n// const HRProfile = () => {\r\n//   const [profileData, setProfileData] = useState({\r\n//     first_name: '',\r\n//     last_name: '',\r\n//     email: '',\r\n//     phone_number: '',\r\n//   });\r\n\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n//   const getUserIdFromToken = () => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) return null;\r\n//     const decoded = jwt_decode(token);\r\n//     return decoded.user_id;\r\n//   };\r\n\r\n//   const userId = getUserIdFromToken();\r\n\r\n//   useEffect(() => {\r\n//     if (!userId) {\r\n//       setError('User not authenticated');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchProfileData = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         });\r\n//         setProfileData(response.data);\r\n//         setLoading(false);\r\n//       } catch (err) {\r\n//         setError('Failed to load profile data');\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchProfileData();\r\n//   }, [userId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.patch(\r\n//         `http://127.0.0.1:8000/api/update-user/${userId}/`,\r\n//         profileData,\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       setSuccessMessage('Profile updated successfully');\r\n//     } catch (err) {\r\n//       setError('Failed to update profile');\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setProfileData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   if (loading) return <div>Loading...</div>;\r\n//   if (error) return <div className=\"error\">{error}</div>;\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h2>Update HR Profile</h2>\r\n//       {successMessage && <div className=\"message\">{successMessage}</div>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"first_name\"\r\n//             value={profileData.first_name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"last_name\"\r\n//             value={profileData.last_name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={profileData.email}\r\n//             onChange={handleChange}\r\n//             disabled\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Phone Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"phone_number\"\r\n//             value={profileData.phone_number}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Update Profile</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HRProfile;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport './Profile.css'; // Import the CSS file\r\n\r\nconst HRProfile = () => {\r\n  const [profileData, setProfileData] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    phone_number: '',\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n  // Function to get user ID from JWT token\r\n  const getUserIdFromToken = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return null;\r\n    const decoded = jwtDecode(token);\r\n    return decoded.user_id;\r\n  };\r\n\r\n  const userId = getUserIdFromToken();\r\n\r\n  // Fetch profile data once the component mounts\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      setError('User not authenticated');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8000/api/user/${userId}/`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        setProfileData(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load profile data');\r\n        setLoading(false);\r\n        console.error(err); // For debugging purposes\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, [userId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(\r\n        `http://127.0.0.1:8000/api/update-user/${userId}/`,\r\n        profileData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        }\r\n      );\r\n      setSuccessMessage('Profile updated successfully');\r\n    } catch (err) {\r\n      setError('Failed to update profile');\r\n      console.error(err); // For debugging purposes\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfileData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Update HR Profile</h2>\r\n      {successMessage && <div className=\"message\">{successMessage}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={profileData.first_name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={profileData.last_name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={profileData.email}\r\n            onChange={handleChange}\r\n            disabled\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone_number\"\r\n            value={profileData.phone_number}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HRProfile;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}