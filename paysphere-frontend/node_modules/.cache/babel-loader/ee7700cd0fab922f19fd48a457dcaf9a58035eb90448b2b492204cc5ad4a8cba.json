{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowth\\\\OneDrive\\\\Desktop\\\\paysphere\\\\PaySphere-Comprehensive-Payroll-Services_Feb_2025\\\\paysphere-frontend\\\\src\\\\pages\\\\Salary\\\\AddSalary.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { useParams } from 'react-router-dom';\n// // import axios from 'axios';\n\n// // const AddSalary = () => {\n// //   const { id } = useParams();\n// //   const [employee, setEmployee] = useState(null);\n// //   const [salaryData, setSalaryData] = useState({\n// //     basic_salary: '',\n// //     allowances: '',\n// //     deductions: '',\n// //   });\n\n// //   useEffect(() => {\n// //     const fetchEmployee = async () => {\n// //       const token = localStorage.getItem('token');\n// //       try {\n// //         const response = await axios.get(`http://localhost:8000/api/user/${id}/`, {\n// //           headers: { Authorization: `Bearer ${token}` },\n// //         });\n// //         setEmployee(response.data);\n// //       } catch (error) {\n// //         console.error('Error fetching employee:', error);\n// //       }\n// //     };\n\n// //     fetchEmployee();\n// //   }, [id]);\n\n// //   const handleChange = (e) => {\n// //     setSalaryData({ ...salaryData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const token = localStorage.getItem('token');\n// //     const payload = {\n// //       employee: id,\n// //       ...salaryData,\n// //     };\n\n// //     try {\n// //       await axios.post('http://localhost:8000/api/salary/create/', payload, {\n// //         headers: { Authorization: `Bearer ${token}` },\n// //       });\n// //       alert('Salary added successfully!');\n// //     } catch (error) {\n// //       alert('Error adding salary: ' + (error.response?.data?.error || 'Something went wrong'));\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"employee-list-container\">\n// //       <h2>Add Salary</h2>\n// //       {employee ? (\n// //         <div>\n// //           <h3>{employee.first_name} {employee.last_name}</h3>\n// //           <form onSubmit={handleSubmit}>\n// //             <label>Basic Salary:</label>\n// //             <input type=\"number\" name=\"basic_salary\" onChange={handleChange} required />\n\n// //             <label>Allowances:</label>\n// //             <input type=\"number\" name=\"allowances\" onChange={handleChange} required />\n\n// //             <label>Deductions:</label>\n// //             <input type=\"number\" name=\"deductions\" onChange={handleChange} required />\n\n// //             <button type=\"submit\">Submit Salary</button>\n// //           </form>\n// //         </div>\n// //       ) : (\n// //         <p>Loading employee data...</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default AddSalary;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// const AddSalary = () => {\n//   const { employeeId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [employee, setEmployee] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [allowances, setAllowances] = useState('');\n//   const [deductions, setDeductions] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       const token = localStorage.getItem('token');\n//       try {\n//         const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         setEmployee(res.data);\n//       } catch (err) {\n//         console.error('Failed to load employee details:', err);\n//         setError('Failed to load employee details.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [employeeId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//           allowances: parseFloat(allowances),\n//           deductions: parseFloat(deductions),\n//         },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n\n//       alert('Salary added successfully!');\n//       navigate('/employees'); // redirect after success\n//     } catch (err) {\n//       console.error('Error creating salary:', err.response?.data || err.message);\n//       setError(err.response?.data?.error || 'Failed to create salary.');\n//     }\n//   };\n\n//   if (loading) return <div>Loading employee info...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div style={{ padding: '20px', maxWidth: '500px', margin: 'auto' }}>\n//       <h2>Add Salary</h2>\n//       <p>\n//         <strong>Employee:</strong> {employee.first_name} {employee.last_name}\n//       </p>\n\n//       <form onSubmit={handleSubmit}>\n//         <div style={{ marginBottom: '10px' }}>\n//           <label>Basic Salary: </label>\n//           <input\n//             type=\"number\"\n//             value={basicSalary}\n//             onChange={(e) => setBasicSalary(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div style={{ marginBottom: '10px' }}>\n//           <label>Allowances: </label>\n//           <input\n//             type=\"number\"\n//             value={allowances}\n//             onChange={(e) => setAllowances(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         <div style={{ marginBottom: '10px' }}>\n//           <label>Deductions: </label>\n//           <input\n//             type=\"number\"\n//             value={deductions}\n//             onChange={(e) => setDeductions(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddSalary;\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './AddSalary.css'; // CSS file\n\n// const AddSalary = () => {\n//   const { id: employeeId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [employee, setEmployee] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [basicSalary, setBasicSalary] = useState('');\n//   const [allowances, setAllowances] = useState('');\n//   const [deductions, setDeductions] = useState('');\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       const token = localStorage.getItem('token');\n//       try {\n//         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployee(res.data);\n//       } catch (err) {\n//         console.error('Error fetching employee:', err);\n//         setError('Failed to load employee details.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [employeeId]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n\n//     try {\n//       await axios.post(\n//         'http://localhost:8000/api/salary/create/',\n//         {\n//           employee: employeeId,\n//           basic_salary: parseFloat(basicSalary),\n//           allowances: parseFloat(allowances),\n//           deductions: parseFloat(deductions),\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${token}` },\n//         }\n//       );\n\n//       alert('Salary added successfully!');\n//       navigate('/employees');\n//     } catch (err) {\n//       console.error('Salary creation failed:', err.response?.data || err.message);\n//       setError(err.response?.data?.error || 'Failed to create salary.');\n//     }\n//   };\n\n//   if (loading) return <p>Loading employee info...</p>;\n//   if (error && !employee) return <p className=\"error-message\">{error}</p>;\n\n//   return (\n//     <div className=\"add-salary-container\">\n//       <h2>Add Salary</h2>\n//       <p className=\"employee-name\">\n//         Employee: {employee?.first_name} {employee?.last_name}\n//       </p>\n\n//       <form onSubmit={handleSubmit} className=\"salary-form\">\n//         <label>Basic Salary:</label>\n//         <input\n//           type=\"number\"\n//           value={basicSalary}\n//           onChange={(e) => setBasicSalary(e.target.value)}\n//           required\n//         />\n\n//         <label>Allowances:</label>\n//         <input\n//           type=\"number\"\n//           value={allowances}\n//           onChange={(e) => setAllowances(e.target.value)}\n//           required\n//         />\n\n//         <label>Deductions:</label>\n//         <input\n//           type=\"number\"\n//           value={deductions}\n//           onChange={(e) => setDeductions(e.target.value)}\n//           required\n//         />\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddSalary;\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSalary = () => {\n  _s();\n  const {\n    id: employeeId\n  } = useParams();\n  const navigate = useNavigate();\n  const [employee, setEmployee] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [basicSalary, setBasicSalary] = useState('');\n  const [allowances, setAllowances] = useState('');\n  const [deductions, setDeductions] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    const fetchEmployee = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEmployee(res.data);\n      } catch (err) {\n        var _err$response;\n        console.error('Error fetching employee:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError('Failed to load employee details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployee();\n  }, [employeeId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    const token = localStorage.getItem('token');\n    try {\n      await axios.post('http://localhost:8000/api/salary/create/', {\n        employee: employeeId,\n        basic_salary: parseFloat(basicSalary),\n        allowances: parseFloat(allowances),\n        deductions: parseFloat(deductions)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess('Salary added successfully!');\n      setBasicSalary('');\n      setAllowances('');\n      setDeductions('');\n    } catch (err) {\n      var _err$response2, _err$response3, _err$response3$data;\n      console.error('Salary creation failed:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Failed to create salary.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading employee info...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.success,\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Employee:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), \" \", employee === null || employee === void 0 ? void 0 : employee.first_name, \" \", employee === null || employee === void 0 ? void 0 : employee.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Basic Salary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: basicSalary,\n          onChange: e => setBasicSalary(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allowances:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: allowances,\n          onChange: e => setAllowances(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Deductions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: deductions,\n          onChange: e => setDeductions(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSalary, \"8XPhseTJO7L5oPFXjlf8fM0E4TY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddSalary;\nconst styles = {\n  container: {\n    padding: '20px',\n    maxWidth: '500px',\n    margin: 'auto',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px rgba(0,0,0,0.1)',\n    backgroundColor: '#f9f9f9'\n  },\n  inputGroup: {\n    marginBottom: '12px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  button: {\n    padding: '10px 20px',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer'\n  },\n  error: {\n    color: 'red',\n    marginBottom: '10px',\n    fontWeight: 'bold'\n  },\n  success: {\n    color: 'green',\n    marginBottom: '10px',\n    fontWeight: 'bold'\n  }\n};\nexport default AddSalary;\nvar _c;\n$RefreshReg$(_c, \"AddSalary\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","AddSalary","_s","id","employeeId","navigate","employee","setEmployee","loading","setLoading","basicSalary","setBasicSalary","allowances","setAllowances","deductions","setDeductions","error","setError","success","setSuccess","fetchEmployee","token","localStorage","getItem","res","get","headers","Authorization","data","err","_err$response","console","response","message","handleSubmit","e","preventDefault","post","basic_salary","parseFloat","_err$response2","_err$response3","_err$response3$data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","first_name","last_name","onSubmit","inputGroup","type","value","onChange","target","required","button","_c","padding","maxWidth","margin","border","borderRadius","boxShadow","backgroundColor","marginBottom","display","flexDirection","color","cursor","fontWeight","$RefreshReg$"],"sources":["C:/Users/gowth/OneDrive/Desktop/paysphere/PaySphere-Comprehensive-Payroll-Services_Feb_2025/paysphere-frontend/src/pages/Salary/AddSalary.jsx"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import { useParams } from 'react-router-dom';\r\n// // import axios from 'axios';\r\n\r\n// // const AddSalary = () => {\r\n// //   const { id } = useParams();\r\n// //   const [employee, setEmployee] = useState(null);\r\n// //   const [salaryData, setSalaryData] = useState({\r\n// //     basic_salary: '',\r\n// //     allowances: '',\r\n// //     deductions: '',\r\n// //   });\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchEmployee = async () => {\r\n// //       const token = localStorage.getItem('token');\r\n// //       try {\r\n// //         const response = await axios.get(`http://localhost:8000/api/user/${id}/`, {\r\n// //           headers: { Authorization: `Bearer ${token}` },\r\n// //         });\r\n// //         setEmployee(response.data);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching employee:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchEmployee();\r\n// //   }, [id]);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setSalaryData({ ...salaryData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const token = localStorage.getItem('token');\r\n// //     const payload = {\r\n// //       employee: id,\r\n// //       ...salaryData,\r\n// //     };\r\n\r\n// //     try {\r\n// //       await axios.post('http://localhost:8000/api/salary/create/', payload, {\r\n// //         headers: { Authorization: `Bearer ${token}` },\r\n// //       });\r\n// //       alert('Salary added successfully!');\r\n// //     } catch (error) {\r\n// //       alert('Error adding salary: ' + (error.response?.data?.error || 'Something went wrong'));\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"employee-list-container\">\r\n// //       <h2>Add Salary</h2>\r\n// //       {employee ? (\r\n// //         <div>\r\n// //           <h3>{employee.first_name} {employee.last_name}</h3>\r\n// //           <form onSubmit={handleSubmit}>\r\n// //             <label>Basic Salary:</label>\r\n// //             <input type=\"number\" name=\"basic_salary\" onChange={handleChange} required />\r\n\r\n// //             <label>Allowances:</label>\r\n// //             <input type=\"number\" name=\"allowances\" onChange={handleChange} required />\r\n\r\n// //             <label>Deductions:</label>\r\n// //             <input type=\"number\" name=\"deductions\" onChange={handleChange} required />\r\n\r\n// //             <button type=\"submit\">Submit Salary</button>\r\n// //           </form>\r\n// //         </div>\r\n// //       ) : (\r\n// //         <p>Loading employee data...</p>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AddSalary;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const AddSalary = () => {\r\n//   const { employeeId } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [employee, setEmployee] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [allowances, setAllowances] = useState('');\r\n//   const [deductions, setDeductions] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchEmployee = async () => {\r\n//       const token = localStorage.getItem('token');\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n//         setEmployee(res.data);\r\n//       } catch (err) {\r\n//         console.error('Failed to load employee details:', err);\r\n//         setError('Failed to load employee details.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchEmployee();\r\n//   }, [employeeId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//           allowances: parseFloat(allowances),\r\n//           deductions: parseFloat(deductions),\r\n//         },\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       alert('Salary added successfully!');\r\n//       navigate('/employees'); // redirect after success\r\n//     } catch (err) {\r\n//       console.error('Error creating salary:', err.response?.data || err.message);\r\n//       setError(err.response?.data?.error || 'Failed to create salary.');\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <div>Loading employee info...</div>;\r\n//   if (error) return <div>{error}</div>;\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxWidth: '500px', margin: 'auto' }}>\r\n//       <h2>Add Salary</h2>\r\n//       <p>\r\n//         <strong>Employee:</strong> {employee.first_name} {employee.last_name}\r\n//       </p>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div style={{ marginBottom: '10px' }}>\r\n//           <label>Basic Salary: </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={basicSalary}\r\n//             onChange={(e) => setBasicSalary(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={{ marginBottom: '10px' }}>\r\n//           <label>Allowances: </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={allowances}\r\n//             onChange={(e) => setAllowances(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={{ marginBottom: '10px' }}>\r\n//           <label>Deductions: </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={deductions}\r\n//             onChange={(e) => setDeductions(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import './AddSalary.css'; // CSS file\r\n\r\n// const AddSalary = () => {\r\n//   const { id: employeeId } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [employee, setEmployee] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [basicSalary, setBasicSalary] = useState('');\r\n//   const [allowances, setAllowances] = useState('');\r\n//   const [deductions, setDeductions] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchEmployee = async () => {\r\n//       const token = localStorage.getItem('token');\r\n//       try {\r\n//         const res = await axios.get(`http://localhost:8000/api/users/${employeeId}/`, {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setEmployee(res.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching employee:', err);\r\n//         setError('Failed to load employee details.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchEmployee();\r\n//   }, [employeeId]);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n\r\n//     try {\r\n//       await axios.post(\r\n//         'http://localhost:8000/api/salary/create/',\r\n//         {\r\n//           employee: employeeId,\r\n//           basic_salary: parseFloat(basicSalary),\r\n//           allowances: parseFloat(allowances),\r\n//           deductions: parseFloat(deductions),\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         }\r\n//       );\r\n\r\n//       alert('Salary added successfully!');\r\n//       navigate('/employees');\r\n//     } catch (err) {\r\n//       console.error('Salary creation failed:', err.response?.data || err.message);\r\n//       setError(err.response?.data?.error || 'Failed to create salary.');\r\n//     }\r\n//   };\r\n\r\n//   if (loading) return <p>Loading employee info...</p>;\r\n//   if (error && !employee) return <p className=\"error-message\">{error}</p>;\r\n\r\n//   return (\r\n//     <div className=\"add-salary-container\">\r\n//       <h2>Add Salary</h2>\r\n//       <p className=\"employee-name\">\r\n//         Employee: {employee?.first_name} {employee?.last_name}\r\n//       </p>\r\n\r\n//       <form onSubmit={handleSubmit} className=\"salary-form\">\r\n//         <label>Basic Salary:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={basicSalary}\r\n//           onChange={(e) => setBasicSalary(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <label>Allowances:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={allowances}\r\n//           onChange={(e) => setAllowances(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         <label>Deductions:</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           value={deductions}\r\n//           onChange={(e) => setDeductions(e.target.value)}\r\n//           required\r\n//         />\r\n\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddSalary;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AddSalary = () => {\r\n  const { id: employeeId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [employee, setEmployee] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [basicSalary, setBasicSalary] = useState('');\r\n  const [allowances, setAllowances] = useState('');\r\n  const [deductions, setDeductions] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEmployee = async () => {\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const res = await axios.get(`http://localhost:8000/api/user/${employeeId}/`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setEmployee(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching employee:', err.response?.data || err.message);\r\n        setError('Failed to load employee details.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmployee();\r\n  }, [employeeId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    try {\r\n      await axios.post(\r\n        'http://localhost:8000/api/salary/create/',\r\n        {\r\n          employee: employeeId,\r\n          basic_salary: parseFloat(basicSalary),\r\n          allowances: parseFloat(allowances),\r\n          deductions: parseFloat(deductions),\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      setSuccess('Salary added successfully!');\r\n      setBasicSalary('');\r\n      setAllowances('');\r\n      setDeductions('');\r\n    } catch (err) {\r\n      console.error('Salary creation failed:', err.response?.data || err.message);\r\n      setError(err.response?.data?.error || 'Failed to create salary.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading employee info...</p>;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>Add Salary</h2>\r\n\r\n      {success && <p style={styles.success}>{success}</p>}\r\n      {error && <p style={styles.error}>{error}</p>}\r\n\r\n      <p>\r\n        <strong>Employee:</strong> {employee?.first_name} {employee?.last_name}\r\n      </p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div style={styles.inputGroup}>\r\n          <label>Basic Salary:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={basicSalary}\r\n            onChange={(e) => setBasicSalary(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.inputGroup}>\r\n          <label>Allowances:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={allowances}\r\n            onChange={(e) => setAllowances(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.inputGroup}>\r\n          <label>Deductions:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={deductions}\r\n            onChange={(e) => setDeductions(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styles.button}>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    maxWidth: '500px',\r\n    margin: 'auto',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 0 10px rgba(0,0,0,0.1)',\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  inputGroup: {\r\n    marginBottom: '12px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    cursor: 'pointer',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: '10px',\r\n    fontWeight: 'bold',\r\n  },\r\n  success: {\r\n    color: 'green',\r\n    marginBottom: '10px',\r\n    fontWeight: 'bold',\r\n  },\r\n};\r\n\r\nexport default AddSalary;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}